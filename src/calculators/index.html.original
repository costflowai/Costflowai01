<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Construction Calculators - CostFlowAI</title>
    <meta name="description" content="Professional construction calculators for contractors. Concrete, framing, drywall, roofing, and more.">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; background: #f7fafc; color: #2d3748; }
        .header { background: linear-gradient(135deg, #1e3a5f, #0f1f33); color: white; padding: 3rem 1rem; text-align: center; }
        .header h1 { font-size: 2.5rem; margin-bottom: 0.5rem; }
        .header p { opacity: 0.9; font-size: 1.1rem; }
        .container { max-width: 1200px; margin: 0 auto; padding: 2rem; }
        .nav { margin-bottom: 2rem; }
        .nav a { color: #ff6b35; text-decoration: none; font-weight: 600; }
        .nav a:hover { text-decoration: underline; }
        .calc-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); gap: 1.5rem; }
        .calc-card { background: white; border: 2px solid #e2e8f0; border-radius: 8px; padding: 1.5rem; text-decoration: none; color: inherit; transition: all 0.3s; display: block; }
        .calc-card:hover { transform: translateY(-3px); box-shadow: 0 10px 20px rgba(0,0,0,0.1); border-color: #00b4d8; }
        .calc-card h3 { color: #1e3a5f; margin-bottom: 0.5rem; font-size: 1.25rem; }
        .calc-card p { color: #718096; line-height: 1.5; }
        .badge { background: #ff6b35; color: white; padding: 0.25rem 0.75rem; border-radius: 20px; font-size: 0.75rem; display: inline-block; margin-top: 0.5rem; }
        @media (max-width: 768px) { 
            .header h1 { font-size: 1.8rem; }
            .calc-grid { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Professional Construction Calculators</h1>
        <p>Free, accurate estimation tools for contractors</p>
    </div>
    
    <div class="container">
        <div class="nav">
            <a href="/">‚Üê Back to Home</a>
        </div>
        
        <div class="calc-grid">
            <a href="/calculators/concrete" class="calc-card">
                <h3>üèóÔ∏è Concrete Calculator</h3>
                <p>Calculate cubic yards, total cost, rebar, forms, and delivery for concrete projects.</p>
                <span class="badge">Most Popular</span>
            </a>
            
            <a href="/calculators/framing" class="calc-card">
                <h3>üî® Framing Calculator</h3>
                <p>Estimate lumber, studs, plates, and materials for wall framing projects.</p>
            </a>
            
            <a href="/calculators/electrical" class="calc-card">
                <h3>‚ö° Electrical Load Calculator</h3>
                <p>Service sizing, load calculations, and NEC compliance verification.</p>
                <span class="badge">Professional</span>
            </a>
            
            <a href="/calculators/hvac" class="calc-card">
                <h3>‚ùÑÔ∏è HVAC Load Calculator</h3>
                <p>Manual J load calculations, equipment sizing, and energy analysis.</p>
                <span class="badge">Professional</span>
            </a>
            
            <a href="/calculators/plumbing" class="calc-card">
                <h3>üöø Plumbing System Calculator</h3>
                <p>Pipe sizing, fixture units, pressure analysis, and water heater sizing.</p>
                <span class="badge">Professional</span>
            </a>
            
            <a href="/calculators/paint" class="calc-card">
                <h3>üé® Paint Pro Calculator</h3>
                <p>VOC compliance, coverage analysis, and professional paint estimation.</p>
            </a>
            
            <a href="/calculators/flooring" class="calc-card">
                <h3>üè† Flooring Optimizer</h3>
                <p>Pattern optimization, waste calculation, and flooring cost analysis.</p>
            </a>
            
            <a href="/calculators/labor" class="calc-card">
                <h3>üë∑ Labor Crew Calculator</h3>
                <p>Crew optimization, burden rates, and overtime vs additional workers.</p>
            </a>
            
            <a href="/calculators/excavation" class="calc-card">
                <h3>‚õèÔ∏è Excavation Calculator</h3>
                <p>Cut/fill analysis, soil classification, and equipment sizing.</p>
            </a>
        </div>
        
        <div style="background: #fff5f5; border-left: 4px solid #ff6b35; padding: 1rem; margin-top: 3rem;">
            <strong>‚ö†Ô∏è Important:</strong> All calculators provide rough order of magnitude (ROM) estimates for planning purposes only. Always verify with licensed contractors before making construction decisions.
        </div>
    </div>
<script src="/assets/js/calculators.js" defer></script>
<script defer>
    document.getElementById('btn-print')?.addEventListener('click', () => window.print());
    
    // Handle calc parameter for direct access
    document.addEventListener('DOMContentLoaded', () => {
        const params = new URLSearchParams(location.search);
        const calc = params.get('calc');
        if (calc) {
            // Redirect to dedicated calculator page
            const routes = {
                concrete: '/calculators/concrete',
                framing: '/calculators/framing', 
                paint: '/calculators/paint',
                roofing: '/calculators/roofing',
                electrical: '/calculators/electrical',
                plumbing: '/calculators/plumbing',
                hvac: '/calculators/hvac',
                drywall: '/calculators/drywall',
                flooring: '/calculators/flooring',
                labor: '/calculators/labor',
                excavation: '/calculators/excavation',
                insulation: '/calculators/insulation'
            };
            if (routes[calc]) {
                location.replace(routes[calc]);
            }
        }
    });
</script>
</body>
</html>

<!-- Structured Data for Calculators -->
<script type="application/ld+json">
[
  {
    "@context": "https://schema.org",
    "@type": "SoftwareApplication",
    "name": "CostFlowAI Construction Calculator Suite",
    "applicationCategory": "BusinessApplication",
    "applicationSubCategory": "Construction Calculator",
    "operatingSystem": "Web",
    "url": "https://costflowai.com/calculators/",
    "description": "Professional construction calculator suite with 15+ advanced calculators including concrete, framing, electrical, HVAC, and more. All calculators feature save, export, and share functionality.",
    "offers": {
      "@type": "Offer",
      "price": "0",
      "priceCurrency": "USD",
      "availability": "https://schema.org/InStock",
      "category": "Free"
    },
    "featureList": [
      "Concrete Volume Calculator",
      "Framing Calculator",
      "Paint Coverage Calculator", 
      "Roofing Calculator",
      "Electrical Load Calculator",
      "Save/Export/Share Results",
      "Professional ROM Estimates",
      "No Registration Required"
    ],
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": "4.8",
      "ratingCount": "1250"
    },
    "author": {
      "@type": "Organization",
      "name": "CostFlowAI"
    }
  },
  {
    "@context": "https://schema.org", 
    "@type": "BreadcrumbList",
    "itemListElement": [
      {
        "@type": "ListItem",
        "position": 1,
        "name": "Home",
        "item": "https://costflowai.com/"
      },
      {
        "@type": "ListItem", 
        "position": 2,
        "name": "Calculators",
        "item": "https://costflowai.com/calculators/"
      }
    ]
  }
]
</script>
<style>
/* EMBEDDED CSS - ZERO EXTERNAL DEPENDENCIES */
*{margin:0;padding:0;box-sizing:border-box}
body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;background:#f7fafc;color:#2d3748;line-height:1.6}
.container{max-width:1400px;margin:0 auto;padding:20px}
.header{background:linear-gradient(135deg,#1e3a5f,#0f1f33);color:white;padding:3rem 20px;text-align:center;margin-bottom:20px}
.header h1{font-size:2.5rem;margin-bottom:0.5rem}
.header p{font-size:1.1rem;opacity:0.9}
.nav-home{margin-bottom:20px}
.nav-home a{color:#ff6b35;text-decoration:none;font-weight:600;font-size:1.1rem}
.nav-home a:hover{text-decoration:underline}
.nav-tabs{display:flex;flex-wrap:wrap;gap:10px;margin:20px 0;padding:20px;background:white;border-radius:8px;box-shadow:0 2px 4px rgba(0,0,0,0.1)}
.tab-btn{padding:12px 20px;background:#e2e8f0;border:none;border-radius:6px;cursor:pointer;font-weight:600;transition:all 0.3s;font-size:14px;min-height:44px}
.tab-btn:hover{background:#cbd5e0;transform:translateY(-1px)}
.tab-btn.active{background:#ff6b35;color:white;box-shadow:0 2px 8px rgba(255,107,53,0.3)}
.calculator-panel{display:none;background:white;padding:30px;border-radius:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1);margin-top:20px}
.calculator-panel.active{display:block}
.calc-grid{display:grid;grid-template-columns:1fr 1fr;gap:30px;margin-top:20px}
.input-section{background:#f7fafc;padding:25px;border-radius:8px}
.results-section{background:#fff;border:2px solid #e2e8f0;padding:25px;border-radius:8px}
.input-group{margin-bottom:15px}
.input-group label{display:block;font-weight:600;margin-bottom:8px;color:#1e3a5f}
.input-group input,.input-group select{width:100%;padding:12px;border:2px solid #cbd5e0;border-radius:6px;font-size:16px;transition:border-color 0.2s}
.input-group input:focus,.input-group select:focus{outline:2px solid #ff6b35;outline-offset:2px;border-color:#ff6b35}
.input-hint{display:block;color:#6b7280;font-size:14px;margin-top:4px}
.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}
.btn{padding:12px 24px;border:none;border-radius:6px;font-weight:600;cursor:pointer;transition:all 0.3s;font-size:14px;min-height:44px}
.btn-primary{background:#ff6b35;color:white}
.btn-primary:hover{background:#e55a2b;transform:translateY(-2px);box-shadow:0 4px 12px rgba(255,107,53,0.3)}
.btn-secondary{background:#e2e8f0;color:#2d3748;margin-left:10px}
.btn-secondary:hover{background:#cbd5e0}
.result-box{background:linear-gradient(135deg,#f0f9ff,#e0f2fe);padding:25px;border-radius:8px;margin-top:20px;text-align:center;border:2px solid #0369a1}
.result-main{font-size:2.2rem;font-weight:700;color:#0369a1;margin:10px 0}
.result-row{display:flex;justify-content:space-between;padding:12px 0;border-bottom:1px solid #e2e8f0}
.result-row:last-child{border-bottom:none;font-weight:600;font-size:1.1rem;color:#1e3a5f}
.disclaimer{background:#fff5f5;border-left:4px solid #ff6b35;padding:20px;margin-top:25px;color:#666;border-radius:0 8px 8px 0}
.actions{display:flex;gap:10px;margin-top:25px;flex-wrap:wrap}
.calc-intro{margin-bottom:20px;color:#4a5568}
.calc-intro h2{color:#1e3a5f;margin-bottom:10px;font-size:1.8rem}
@media(max-width:768px){
  .calc-grid{grid-template-columns:1fr}
  .nav-tabs{gap:8px;padding:15px}
  .tab-btn{font-size:13px;padding:10px 15px}
  .header h1{font-size:2rem}
  .header p{font-size:1rem}
  .container{padding:15px}
  .actions{flex-direction:column}
  .btn{width:100%}
}
.notification{position:fixed;top:20px;right:20px;padding:15px 25px;background:#10b981;color:white;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.15);animation:slideIn 0.3s ease;z-index:1000;font-weight:600}
@keyframes slideIn{from{transform:translateX(100%);opacity:0}to{transform:translateX(0);opacity:1}}
@keyframes slideOut{from{transform:translateX(0);opacity:1}to{transform:translateX(100%);opacity:0}}
.stats{background:white;padding:25px;border-radius:8px;margin-bottom:20px;text-align:center;box-shadow:0 2px 4px rgba(0,0,0,0.05)}
.stats h3{color:#1e3a5f;margin-bottom:10px}
.progress-indicator{position:absolute;top:0;left:0;height:3px;background:#ff6b35;transition:width 0.3s ease;border-radius:3px}
.input-group-row{display:grid;grid-template-columns:1fr 1fr;gap:15px}
.tooltip{position:relative;display:inline-block;margin-left:5px;color:#6b7280;cursor:help}
.tooltip:hover::after{content:attr(data-tip);position:absolute;bottom:125%;left:50%;transform:translateX(-50%);background:#1f2937;color:white;padding:8px 12px;border-radius:6px;white-space:nowrap;font-size:12px;font-weight:normal;z-index:1001}
</style>

<!-- JSON-LD Structured Data -->
<script type="application/ld+json">
{
  "@context":"https://schema.org",
  "@type":"SoftwareApplication",
  "name":"CostFlowAI Construction Calculator Suite",
  "applicationCategory":"BusinessApplication",
  "operatingSystem":"Web",
  "offers":{"@type":"Offer","price":"0","priceCurrency":"USD"},
  "url":"https://costflowai.com/calculators"
}
</script>
</head>
<body>

<div class="header">
  <h2>üèóÔ∏è Professional Construction Calculators</h2>
  <p>All-in-One Calculator Suite ‚Ä¢ Save ‚Ä¢ Export ‚Ä¢ Share ‚Ä¢ 100% Free</p>
</div>

<div class="container">
  <div class="nav-home">
    <a href="/">‚Üê Back to Home</a>
  </div>

  <div class="stats">
    <h3>‚ú® 12+ Professional Calculators ‚Ä¢ No Registration Required ‚Ä¢ ROM Estimates</h3>
  </div>
  
  <div class="nav-tabs">
    <a class="tab-btn active" data-calculator="concrete">üèóÔ∏è Concrete</a>
    <a class="tab-btn" data-calculator="framing">üî® Framing</a>
    <a class="tab-btn" data-calculator="drywall">üìê Drywall</a>
    <a class="tab-btn" data-calculator="paint">üé® Paint</a>
    <a class="tab-btn" data-calculator="roofing">üè† Roofing</a>
    <a class="tab-btn" data-calculator="flooring">‚¨õ Flooring</a>
    <a class="tab-btn" data-calculator="electrical">‚ö° Electrical</a>
    <a class="tab-btn" data-calculator="plumbing">üöø Plumbing</a>
    <a class="tab-btn" data-calculator="hvac">‚ùÑÔ∏è HVAC</a>
    <a class="tab-btn" data-calculator="insulation">üî• Insulation</a>
    <a class="tab-btn" data-calculator="excavation">üöú Excavation</a>
    <a class="tab-btn" data-calculator="labor">üë∑ Labor</a>
  </div>

  <!-- CONCRETE CALCULATOR -->
  <div id="concrete-calc" class="calculator-panel active" data-calc="concrete">
    <div class="calc-intro">
      <h2>üèóÔ∏è Advanced Concrete Calculator</h2>
      <p>Professional concrete estimation with rebar calculations, waste factors, and regional pricing.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Project Specifications</h3>
        
        <div class="input-group">
          <label for="concrete-type">Pour Type <span class="tooltip" data-tip="Different pour types have different waste factors">‚ÑπÔ∏è</span></label>
          <select id="concrete-type" aria-describedby="concrete-type-hint">
            <option value="slab">Slab on Grade (5% waste)</option>
            <option value="footing">Footing (8% waste)</option>
            <option value="wall">Wall (10% waste)</option>
            <option value="stairs">Stairs (15% waste)</option>
            <option value="driveway">Driveway (7% waste)</option>
          </select>
          <small id="concrete-type-hint" class="input-hint">Different pour types have varying waste factors</small>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label for="concrete-length">Length (feet)</label>
            <input type="number" id="concrete-length" value="30" min="0" step="0.1" aria-describedby="concrete-length-hint">
            <small id="concrete-length-hint" class="input-hint">Enter the length of your concrete pour</small>
          </div>
          <div class="input-group">
            <label for="concrete-width">Width (feet)</label>
            <input type="number" id="concrete-width" value="20" min="0" step="0.1" aria-describedby="concrete-width-hint">
            <small id="concrete-width-hint" class="input-hint">Enter the width of your concrete pour</small>
          </div>
        </div>
        
        <div class="input-group">
          <label for="concrete-thickness">Thickness (inches)</label>
          <input type="number" id="concrete-thickness" value="4" min="1" max="24" step="0.5" aria-describedby="concrete-thickness-hint">
          <small id="concrete-thickness-hint" class="input-hint">Typical residential slab is 4 inches thick</small>
        </div>
        
        <div class="input-group">
          <label for="concrete-psi">PSI Strength</label>
          <select id="concrete-psi" aria-describedby="concrete-psi-hint">
            <option value="2500">2500 PSI - $125/yard</option>
            <option value="3000">3000 PSI - $130/yard</option>
            <option value="3500" selected>3500 PSI - $135/yard</option>
            <option value="4000">4000 PSI - $145/yard</option>
            <option value="4500">4500 PSI - $155/yard</option>
            <option value="5000">5000 PSI - $165/yard</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Rebar Reinforcement</label>
          <select id="concrete-rebar">
            <option value="none">No Rebar</option>
            <option value="light">Light Grid (#3 @ 18") +$0.65/sq ft</option>
            <option value="standard">Standard (#4 @ 12") +$0.85/sq ft</option>
            <option value="heavy">Heavy (#5 @ 12") +$1.25/sq ft</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Delivery Method</label>
          <select id="concrete-delivery">
            <option value="truck">Ready-Mix Truck</option>
            <option value="pump">Concrete Pump (+$150)</option>
            <option value="crane">Crane Bucket (+$200)</option>
          </select>
        </div>
        
        <button type="button" class="btn btn-primary" onclick="calculateConcrete()" aria-describedby="concrete-calc-description" data-action="calculate">
          üßÆ Calculate Concrete
        </button>
        <small id="concrete-calc-description" class="input-hint">Click to calculate your concrete project estimate</small>
      </div>
      
      <div class="results-section" aria-live="polite" aria-label="Calculation Results">
        <h3>üìä Project Results</h3>
        <div class="result-box">
          <div>Concrete Volume Needed:</div>
          <div class="result-main" id="concrete-volume">0.00 cu yd</div>
          <div style="font-size:0.9rem;color:#6b7280;">Including waste factor</div>
        </div>
        
        <div class="result-row">
          <span>Square Footage:</span>
          <span id="concrete-sqft">0 sq ft</span>
        </div>
        <div class="result-row">
          <span>Material Cost:</span>
          <span id="concrete-material">$0</span>
        </div>
        <div class="result-row">
          <span>Rebar Cost:</span>
          <span id="concrete-rebar-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Labor Estimate:</span>
          <span id="concrete-labor">$0</span>
        </div>
        <div class="result-row">
          <span>Forms/Equipment:</span>
          <span id="concrete-forms">$0</span>
        </div>
        <div class="result-row">
          <span>Delivery Cost:</span>
          <span id="concrete-delivery-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="concrete-total">$0</strong>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('concrete')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('concrete')">üìä Export CSV</button>
          <button class="btn btn-secondary" onclick="shareCalc('concrete')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    
    <div class="disclaimer">
      <strong>‚ö†Ô∏è Important ROM Disclaimer:</strong> This provides rough order of magnitude (ROM) estimates only. Actual costs vary significantly by location, site conditions, material availability, and specific project requirements. Always obtain detailed quotes from licensed contractors and verify with local building codes.
    </div>
  </div>

  <!-- FRAMING CALCULATOR -->
  <div id="framing-calc" class="calculator-panel" data-calc="framing">
    <div class="calc-intro">
      <h2>üî® Advanced Framing Calculator</h2>
      <p>Calculate lumber requirements, stud counts, and material costs for wall framing projects.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Wall Specifications</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Wall Length (feet)</label>
            <input type="number" id="framing-length" value="20" min="0" step="0.5">
          </div>
          <div class="input-group">
            <label>Wall Height (feet)</label>
            <input type="number" id="framing-height" value="8" min="0" step="0.5">
          </div>
        </div>
        
        <div class="input-group">
          <label>Stud Spacing</label>
          <select id="framing-spacing">
            <option value="16">16" on center (stronger)</option>
            <option value="24">24" on center (economical)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Lumber Grade & Size</label>
          <select id="framing-grade">
            <option value="standard">2x4 Standard - $8/stud</option>
            <option value="premium">2x4 Premium - $12/stud</option>
            <option value="standard6">2x6 Standard - $12/stud</option>
            <option value="premium6">2x6 Premium - $18/stud</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Number of Openings</label>
          <input type="number" id="framing-openings" value="2" min="0" max="10">
        </div>
        
        <div class="input-group">
          <label>Include Headers?</label>
          <select id="framing-headers">
            <option value="no">No Headers</option>
            <option value="yes">Yes, Include Headers (+$25 ea)</option>
          </select>
        </div>
        
        <button class="btn btn-primary" onclick="calculateFraming()" data-action="calculate">üßÆ Calculate Framing</button>
      </div>
      
      <div class="results-section">
        <h3>üìä Materials Needed</h3>
        <div class="result-box">
          <div>Total Studs Required:</div>
          <div class="result-main" id="framing-studs">0</div>
          <div style="font-size:0.9rem;color:#6b7280;">Including waste allowance</div>
        </div>
        
        <div class="result-row">
          <span>Top/Bottom Plates:</span>
          <span id="framing-plates">0 pieces</span>
        </div>
        <div class="result-row">
          <span>Headers Needed:</span>
          <span id="framing-headers-count">0</span>
        </div>
        <div class="result-row">
          <span>Total Linear Feet:</span>
          <span id="framing-linear">0 ft</span>
        </div>
        <div class="result-row">
          <span>Material Cost:</span>
          <span id="framing-material">$0</span>
        </div>
        <div class="result-row">
          <span>Labor Estimate:</span>
          <span id="framing-labor">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="framing-total">$0</strong>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('framing')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('framing')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('framing')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    <div class="disclaimer">‚ö†Ô∏è ROM estimate only. Add 10% for waste. Verify with local building codes for structural requirements.</div>
  </div>

  <!-- PAINT CALCULATOR -->
  <div id="paint-calc" class="calculator-panel" data-calc="paint">
    <div class="calc-intro">
      <h2>üé® Professional Paint Calculator</h2>
      <p>Calculate paint quantities, primer needs, and project costs with coverage adjustments.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Surface Details</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Total Wall Area (sq ft)</label>
            <input type="number" id="paint-area" data-field="wall-area" value="400" min="0">
          </div>
          <div class="input-group">
            <label>Doors & Windows (sq ft)</label>
            <input type="number" id="paint-openings" data-field="openings" value="80" min="0">
          </div>
        </div>
        
        <div class="input-group">
          <label>Surface Texture</label>
          <select id="paint-texture" data-field="texture">
            <option value="smooth">Smooth (400 sq ft/gallon)</option>
            <option value="light">Light Texture (350 sq ft/gallon)</option>
            <option value="medium">Medium Texture (300 sq ft/gallon)</option>
            <option value="heavy">Heavy Texture (250 sq ft/gallon)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Number of Coats</label>
          <select id="paint-coats" data-field="coats">
            <option value="1">1 Coat</option>
            <option value="2" selected>2 Coats (recommended)</option>
            <option value="3">3 Coats (full coverage)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Paint Quality</label>
          <select id="paint-quality" data-field="quality">
            <option value="basic">Basic - $35/gallon</option>
            <option value="premium">Premium - $55/gallon</option>
            <option value="ultra">Ultra Premium - $75/gallon</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Primer Needed?</label>
          <select id="paint-primer" data-field="primer">
            <option value="no">No Primer</option>
            <option value="yes">Yes, Primer Required (+$45/gal)</option>
          </select>
        </div>
        
        <button class="btn btn-primary" onclick="calculatePaint()" data-action="calculate">üßÆ Calculate Paint</button>
      </div>
      
      <div class="results-section">
        <h3>üìä Paint Requirements</h3>
        <div class="result-box">
          <div>Paint Needed:</div>
          <div class="result-main" id="paint-gallons" data-out="paint-gal">0.00 gallons</div>
          <div style="font-size:0.9rem;color:#6b7280;">Including 10% waste factor</div>
        </div>
        
        <div class="result-row">
          <span>Paintable Area:</span>
          <span id="paint-net-area" data-out="paintable">0 sq ft</span>
        </div>
        <div class="result-row">
          <span>Primer Needed:</span>
          <span id="paint-primer-gallons" data-out="primer-gal">0 gallons</span>
        </div>
        <div class="result-row">
          <span>Paint Cost:</span>
          <span id="paint-cost" data-out="paint-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Primer Cost:</span>
          <span id="paint-primer-cost" data-out="primer-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Labor Estimate:</span>
          <span id="paint-labor" data-out="labor">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="paint-total" data-out="total">$0</strong>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('paint')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('paint')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('paint')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
        
        <!-- Email Form -->
        <div class="form-row email-send" data-email style="margin-top: 15px; padding: 12px; background: #f8f9fa; border-radius: 6px;">
          <label style="display: block; margin-bottom: 5px; font-weight: 500; color: #374151;">üìß Email results to:</label>
          <div style="display: flex; gap: 8px; align-items: stretch;">
            <input type="email" placeholder="your@email.com" aria-label="Email results" data-field="email" style="flex: 1; padding: 8px 12px; border: 1px solid #d1d5db; border-radius: 4px; font-size: 14px;" required>
            <button type="button" class="btn btn-secondary" data-action="email" style="padding: 8px 16px; white-space: nowrap; font-size: 14px;">Send</button>
            <input type="text" tabindex="-1" autocomplete="off" style="position:absolute;left:-9999px" aria-hidden="true" data-field="hp">
          </div>
        </div>
      </div>
    </div>
    <div class="disclaimer">‚ö†Ô∏è Coverage varies by surface porosity, application method, and paint viscosity. Always purchase 10-15% extra for touch-ups.</div>
  </div>

  <!-- ROOFING CALCULATOR -->
  <div id="roofing-calc" class="calculator-panel" data-calc="roofing">
    <div class="calc-intro">
      <h2>üè† Professional Roofing Calculator</h2>
      <p>Advanced IRC/IBC compliant roofing analysis with wind load calculations, ASCE 7 standards, and comprehensive material specifications.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Building Information</h3>
        
        <div class="input-group">
          <label>Building Type</label>
          <select id="roof-building-type">
            <option value="residential">Residential (IRC)</option>
            <option value="commercial">Commercial (IBC)</option>
            <option value="industrial">Industrial</option>
            <option value="institutional">Institutional</option>
          </select>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Roof Length (feet)</label>
            <input type="number" id="roof-length" value="40" min="0">
          </div>
          <div class="input-group">
            <label>Roof Width (feet)</label>
            <input type="number" id="roof-width" value="25" min="0">
          </div>
        </div>
        
        <div class="input-group">
          <label>Climate Zone</label>
          <select id="roof-climate-zone">
            <option value="1">Zone 1 (Extreme Cold)</option>
            <option value="2">Zone 2 (Very Cold)</option>
            <option value="3">Zone 3 (Cold)</option>
            <option value="4" selected>Zone 4 (Mixed-Humid)</option>
            <option value="5">Zone 5 (Warm-Humid)</option>
            <option value="6">Zone 6 (Hot-Humid)</option>
            <option value="7">Zone 7 (Very Hot-Humid)</option>
          </select>
        </div>
        
        <h3>Roof System Design</h3>
        
        <div class="input-group">
          <label>Roof Pitch (Rise/Run)</label>
          <select id="roof-pitch">
            <option value="0.25">1/4:12 (Flat) - 1.0x multiplier</option>
            <option value="1">1:12 (Low Slope) - 1.05x multiplier</option>
            <option value="2">2:12 - 1.06x multiplier</option>
            <option value="4">4:12 (Standard) - 1.15x multiplier</option>
            <option value="6" selected>6:12 (Steep) - 1.25x multiplier</option>
            <option value="8">8:12 (Very Steep) - 1.35x multiplier</option>
            <option value="12">12:12 (45¬∞) - 1.41x multiplier</option>
            <option value="18">18:12+ (Extreme) - 1.60x multiplier</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Roofing System</label>
          <select id="roof-system">
            <option value="asphalt-3tab">3-Tab Asphalt Shingles</option>
            <option value="asphalt-arch" selected>Architectural Shingles</option>
            <option value="asphalt-premium">Premium Designer Shingles</option>
            <option value="metal-panel">Metal Panel System</option>
            <option value="metal-shingle">Metal Shingle System</option>
            <option value="tpo">TPO Single Ply Membrane</option>
            <option value="epdm">EPDM Membrane</option>
            <option value="modified-bitumen">Modified Bitumen</option>
            <option value="built-up">Built-Up Roof (BUR)</option>
            <option value="tile-clay">Clay Tile</option>
            <option value="tile-concrete">Concrete Tile</option>
            <option value="slate">Natural Slate</option>
            <option value="wood-shake">Wood Shake/Shingle</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Wind Speed (ASCE 7)</label>
          <select id="roof-wind-speed">
            <option value="90">90 mph (Low Risk)</option>
            <option value="100">100 mph (Moderate Risk)</option>
            <option value="110" selected>110 mph (Standard)</option>
            <option value="120">120 mph (High Risk)</option>
            <option value="130">130 mph (Very High Risk)</option>
            <option value="140">140 mph (Extreme Risk)</option>
            <option value="150">150 mph+ (Hurricane Zone)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Snow Load (psf)</label>
          <input type="number" id="roof-snow-load" value="20" min="0" max="100">
        </div>
        
        <div class="input-group">
          <label>Exposure Category</label>
          <select id="roof-exposure">
            <option value="B">Category B (Urban/Suburban)</option>
            <option value="C" selected>Category C (Open Terrain)</option>
            <option value="D">Category D (Flat/Water)</option>
          </select>
        </div>
        
        <h3>Project Specifications</h3>
        
        <div class="input-group">
          <label>Existing Condition</label>
          <select id="roof-condition">
            <option value="new">New Construction</option>
            <option value="overlay">Overlay (1 Layer)</option>
            <option value="tearoff-1" selected>Tear-Off (1 Layer)</option>
            <option value="tearoff-2">Tear-Off (2 Layers)</option>
            <option value="tearoff-3">Tear-Off (3+ Layers)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Deck Type</label>
          <select id="roof-deck">
            <option value="osb" selected>OSB Sheathing</option>
            <option value="plywood">Plywood Sheathing</option>
            <option value="planking">Wood Planking</option>
            <option value="concrete">Concrete Deck</option>
            <option value="metal">Metal Deck</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Complexity Factor</label>
          <select id="roof-complexity">
            <option value="simple">Simple (Rectangle, few penetrations)</option>
            <option value="moderate" selected>Moderate (Some angles, dormers)</option>
            <option value="complex">Complex (Multiple angles, many penetrations)</option>
            <option value="very-complex">Very Complex (Irregular shape, many features)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Access Difficulty</label>
          <select id="roof-access">
            <option value="easy">Easy (1-story, good access)</option>
            <option value="moderate" selected>Moderate (2-story, standard)</option>
            <option value="difficult">Difficult (3+ story, steep)</option>
            <option value="extreme">Extreme (High-rise, complex)</option>
          </select>
        </div>
        
        <button class="btn btn-primary" onclick="calculateAdvancedRoofing()" data-action="calculate">üßÆ Calculate Professional Roof</button>
      </div>
      
      <div class="results-section">
        <h3>üìä Professional Roof Analysis</h3>
        <div class="result-box">
          <div>Total Roof Area:</div>
          <div class="result-main" id="roof-total-area">0 sq ft</div>
          <div style="font-size:0.9rem;color:#6b7280;">Includes pitch and waste factors</div>
        </div>
        
        <div class="result-box">
          <div>Design Wind Load:</div>
          <div class="result-main" id="roof-wind-load">0 psf</div>
          <div style="font-size:0.9rem;color:#6b7280;">Per ASCE 7 calculations</div>
        </div>
        
        <h4>üìã System Requirements</h4>
        <div class="result-row">
          <span>Roof Squares:</span>
          <span id="roof-squares">0.00</span>
        </div>
        <div class="result-row">
          <span>Underlayment Area:</span>
          <span id="roof-underlayment-area">0 sq ft</span>
        </div>
        <div class="result-row">
          <span>Ridge Length:</span>
          <span id="roof-ridge-length">0 LF</span>
        </div>
        <div class="result-row">
          <span>Eave Length:</span>
          <span id="roof-eave-length">0 LF</span>
        </div>
        <div class="result-row">
          <span>Rake Length:</span>
          <span id="roof-rake-length">0 LF</span>
        </div>
        
        <h4>üí∞ Professional Cost Analysis</h4>
        <div class="result-row">
          <span>Primary Materials:</span>
          <span id="roof-material-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Underlayment System:</span>
          <span id="roof-underlayment-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Flashing & Trim:</span>
          <span id="roof-flashing-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Ventilation System:</span>
          <span id="roof-ventilation-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Tear-Off & Disposal:</span>
          <span id="roof-tearoff-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Equipment & Tools:</span>
          <span id="roof-equipment-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Labor (Installation):</span>
          <span id="roof-labor-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Permits & Inspection:</span>
          <span id="roof-permit-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="roof-total-cost">$0</strong>
        </div>
        
        <h4>üîß Technical Specifications</h4>
        <div class="result-row">
          <span>Fastener Requirements:</span>
          <span id="roof-fasteners">Standard</span>
        </div>
        <div class="result-row">
          <span>Attachment Method:</span>
          <span id="roof-attachment">Mechanical</span>
        </div>
        <div class="result-row">
          <span>Warranty Period:</span>
          <span id="roof-warranty">25 years</span>
        </div>
        <div class="result-row">
          <span>Fire Rating:</span>
          <span id="roof-fire-rating">Class A</span>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('professional-roofing')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('professional-roofing')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('professional-roofing')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    
    <div class="disclaimer">
      <strong>‚öñÔ∏è Professional Disclaimer:</strong> This calculator provides ROM estimates based on IRC/IBC standards and ASCE 7 wind load calculations. Calculations are for preliminary planning only and do not substitute for professional engineering analysis. Wind loads, snow loads, and structural requirements must be verified by a licensed professional engineer. Local building codes, permits, and inspections may require additional considerations. Material specifications should be verified with manufacturer requirements for specific climate zones and exposure conditions.
    </div>
  </div>

  <!-- ADVANCED ELECTRICAL LOAD CALCULATOR -->
  <div id="electrical-calc" class="calculator-panel" data-calc="electrical">
    <div class="calc-intro">
      <h2>‚ö° Professional Electrical Load Calculator</h2>
      <p>Advanced NEC Article 220 compliant load calculations with service sizing, conductor selection, and comprehensive cost analysis.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Building Information</h3>
        
        <div class="input-group">
          <label>Building Type</label>
          <select id="elec-building">
            <option value="dwelling">Single/Multi-Family Dwelling</option>
            <option value="office">Office Building</option>
            <option value="retail">Retail Store</option>
            <option value="restaurant">Restaurant</option>
            <option value="warehouse">Warehouse</option>
            <option value="school">School</option>
            <option value="hospital">Hospital</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Floor Area (sq ft)</label>
          <input type="number" id="elec-sqft" value="2000" min="100" max="100000">
        </div>
        
        <div class="input-group">
          <label>Number of Units (Multi-Family)</label>
          <input type="number" id="elec-units" value="1" min="1" max="500">
        </div>
        
        <h3>Specific Loads (NEC 220)</h3>
        
        <div class="input-group">
          <label>Small Appliance Circuits</label>
          <select id="elec-small-appliance">
            <option value="2">2 Circuits (3000W)</option>
            <option value="3">3 Circuits (4500W)</option>
            <option value="4">4 Circuits (6000W)</option>
            <option value="6">6 Circuits (9000W)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Laundry Circuit</label>
          <select id="elec-laundry">
            <option value="1">Required (1500W)</option>
            <option value="0">Not Required</option>
          </select>
        </div>
        
        <h3>Major Appliances</h3>
        
        <div class="input-group">
          <label>Electric Range/Cooktop (kW)</label>
          <input type="number" id="elec-range" value="0" min="0" max="50" step="0.5">
        </div>
        
        <div class="input-group">
          <label>Electric Dryer (kW)</label>
          <input type="number" id="elec-dryer" value="0" min="0" max="10" step="0.5">
        </div>
        
        <div class="input-group">
          <label>Electric Water Heater (kW)</label>
          <input type="number" id="elec-water-heater" value="0" min="0" max="20" step="0.5">
        </div>
        
        <div class="input-group">
          <label>Air Conditioning (tons)</label>
          <input type="number" id="elec-ac-tons" value="0" min="0" max="20" step="0.5">
        </div>
        
        <div class="input-group">
          <label>Heat Pump (tons)</label>
          <input type="number" id="elec-heat-pump" value="0" min="0" max="20" step="0.5">
        </div>
        
        <div class="input-group">
          <label>Electric Heating (kW)</label>
          <input type="number" id="elec-heat" value="0" min="0" max="100" step="1">
        </div>
        
        <div class="input-group">
          <label>Motor Loads (HP)</label>
          <input type="number" id="elec-motors" value="0" min="0" max="50" step="0.25">
        </div>
        
        <h3>System Configuration</h3>
        
        <div class="input-group">
          <label>Voltage System</label>
          <select id="elec-voltage">
            <option value="120240">120/240V Single Phase</option>
            <option value="120208">120/208V Three Phase</option>
            <option value="277480">277/480V Three Phase</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Service Entrance Cable</label>
          <select id="elec-service-type">
            <option value="overhead">Overhead Service</option>
            <option value="underground">Underground Service</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Distance to Panel (feet)</label>
          <input type="number" id="elec-distance" value="10" min="5" max="500">
        </div>
        
        <button class="btn btn-primary" data-action="calculate" onclick="calculateAdvancedElectrical()">üßÆ Calculate Load</button>
      </div>
      
      <div class="results-section">
        <h3>üìä Load Calculation Results</h3>
        <div class="result-box">
          <div>Required Service:</div>
          <div class="result-main" id="elec-service">0 Amps</div>
          <div style="font-size:0.9rem;color:#6b7280;">Per NEC 220.87 / 220.40</div>
        </div>
        
        <div class="result-box">
          <div>Service Conductor:</div>
          <div class="result-main" id="elec-conductor">0 AWG</div>
          <div style="font-size:0.9rem;color:#6b7280;">Per NEC Table 310.15(B)(16)</div>
        </div>
        
        <h4>üìã Load Breakdown</h4>
        <div class="result-row">
          <span>General Lighting:</span>
          <span id="elec-lighting-load">0W</span>
        </div>
        <div class="result-row">
          <span>Small Appliance:</span>
          <span id="elec-appliance-load">0W</span>
        </div>
        <div class="result-row">
          <span>Laundry Load:</span>
          <span id="elec-laundry-load">0W</span>
        </div>
        <div class="result-row">
          <span>Range Load:</span>
          <span id="elec-range-load">0W</span>
        </div>
        <div class="result-row">
          <span>HVAC Load:</span>
          <span id="elec-hvac-load">0W</span>
        </div>
        <div class="result-row">
          <span>Other Appliances:</span>
          <span id="elec-other-load">0W</span>
        </div>
        <div class="result-row">
          <strong>Total Connected Load:</strong>
          <strong id="elec-total-load">0W</strong>
        </div>
        <div class="result-row">
          <strong>Calculated Load:</strong>
          <strong id="elec-calc-load">0W</strong>
        </div>
        
        <h4>üí∞ Cost Analysis</h4>
        <div class="result-row">
          <span>Service Panel:</span>
          <span id="elec-panel-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Service Conductors:</span>
          <span id="elec-conductor-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Grounding System:</span>
          <span id="elec-ground-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Labor (Installation):</span>
          <span id="elec-labor-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Permit & Inspection:</span>
          <span id="elec-permit-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="elec-total-cost">$0</strong>
        </div>
        
        <h4>üîß Technical Specifications</h4>
        <div class="result-row">
          <span>Service Conduit:</span>
          <span id="elec-conduit-size">0"</span>
        </div>
        <div class="result-row">
          <span>Grounding Conductor:</span>
          <span id="elec-ground-conductor">#0</span>
        </div>
        <div class="result-row">
          <span>Main Breaker:</span>
          <span id="elec-main-breaker">0A</span>
        </div>
        <div class="result-row">
          <span>Available Fault Current:</span>
          <span id="elec-fault-current">0 kA</span>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('electrical')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('electrical')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('electrical')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    <div class="disclaimer">
      ‚ö†Ô∏è <strong>Professional Disclaimer:</strong> Electrical load calculations performed per NEC Article 220. 
      Results are for preliminary planning only. Licensed electrical engineer or electrician must verify all calculations, 
      conductor sizing (NEC 310.15), and local code compliance. Permit and inspection required by authority having jurisdiction (AHJ). 
      Actual installation costs vary by location, complexity, and market conditions. Not valid for emergency systems or special occupancies.
    </div>
  </div>

  <!-- PROFESSIONAL DRYWALL CALCULATOR -->
  <div id="drywall-calc" class="calculator-panel" data-calc="drywall">
    <div class="calc-intro">
      <h2>üìê Professional Drywall Calculator</h2>
      <p>Advanced drywall estimation following GA-214 standards with finish level analysis, material optimization, and comprehensive cost breakdown.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Project Information</h3>
        
        <div class="input-group">
          <label>Project Type</label>
          <select id="drywall-project-type">
            <option value="residential">Residential</option>
            <option value="commercial">Commercial</option>
            <option value="institutional">Institutional</option>
            <option value="healthcare">Healthcare</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Construction Type</label>
          <select id="drywall-construction">
            <option value="new">New Construction</option>
            <option value="remodel">Remodel/Renovation</option>
            <option value="repair">Repair Work</option>
          </select>
        </div>
        
        <h3>Room Dimensions</h3>
        
        <div class="input-group">
          <label for="drywall-length">Length (feet)</label>
          <input type="number" id="drywall-length" value="12" min="1" max="500">
        </div>
        
        <div class="input-group">
          <label for="drywall-width">Width (feet)</label>
          <input type="number" id="drywall-width" value="12" min="1" max="500">
        </div>
        
        <div class="input-group">
          <label for="drywall-height">Height (feet)</label>
          <input type="number" id="drywall-height" value="8" min="7" max="20" step="0.5">
        </div>
        
        <div class="input-group">
          <label>Number of Rooms</label>
          <input type="number" id="drywall-rooms" value="1" min="1" max="50">
        </div>
        
        <h3>Opening Deductions</h3>
        
        <div class="input-group">
          <label>Standard Doors (3'0" x 6'8")</label>
          <input type="number" id="drywall-doors" value="2" min="0" max="20">
        </div>
        
        <div class="input-group">
          <label>Windows (3' x 4' average)</label>
          <input type="number" id="drywall-windows" value="4" min="0" max="50">
        </div>
        
        <div class="input-group">
          <label>Custom Opening Area (sq ft)</label>
          <input type="number" id="drywall-custom-openings" value="0" min="0" max="1000">
        </div>
        
        <h3>Material Specifications</h3>
        
        <div class="input-group">
          <label>Gypsum Board Thickness</label>
          <select id="drywall-thickness">
            <option value="3/8">3/8" Light Weight</option>
            <option value="1/2" selected>1/2" Regular</option>
            <option value="5/8">5/8" Fire-Rated</option>
            <option value="1/4">1/4" Flexible</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Board Type (ASTM C1396)</label>
          <select id="drywall-board-type">
            <option value="regular">Regular Gypsum</option>
            <option value="moisture">Moisture Resistant</option>
            <option value="fire">Fire Resistant (Type X)</option>
            <option value="impact">Impact Resistant</option>
            <option value="soundproof">Sound Dampening</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Finish Level (GA-214)</label>
          <select id="drywall-finish-level">
            <option value="0">Level 0 - No Finishing</option>
            <option value="1">Level 1 - Basic Tape & Fill</option>
            <option value="2">Level 2 - Embed & Spot</option>
            <option value="3">Level 3 - Two Coats</option>
            <option value="4" selected>Level 4 - Premium</option>
            <option value="5">Level 5 - Highest Quality</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Joint Treatment</label>
          <select id="drywall-joint-treatment">
            <option value="paper">Paper Tape</option>
            <option value="mesh" selected>Fiberglass Mesh</option>
            <option value="pre-fab">Pre-fabricated</option>
          </select>
        </div>
        
        <h3>Installation Factors</h3>
        
        <div class="input-group">
          <label>Ceiling Installation</label>
          <select id="drywall-ceiling">
            <option value="none">No Ceiling Work</option>
            <option value="flat" selected>Flat Ceiling</option>
            <option value="sloped">Sloped/Vaulted</option>
            <option value="coffered">Coffered Design</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Installation Complexity</label>
          <select id="drywall-complexity">
            <option value="simple">Simple (Straight walls)</option>
            <option value="standard" selected>Standard</option>
            <option value="complex">Complex (Angles/Curves)</option>
            <option value="intricate">Intricate Details</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Access Conditions</label>
          <select id="drywall-access">
            <option value="good" selected>Good Access</option>
            <option value="limited">Limited Access</option>
            <option value="difficult">Difficult Access</option>
          </select>
        </div>
        
        <button type="button" class="btn btn-primary" data-action="calculate" onclick="calculateAdvancedDrywall()" aria-describedby="drywall-calc-description">
          üßÆ Calculate Professional Drywall Estimate
        </button>
        <small id="drywall-calc-description" class="input-hint">GA-214 compliant calculation methodology</small>
      </div>
      
      <div class="results-section" aria-live="polite" aria-label="Drywall Calculation Results">
        <h3>üìä Professional Estimation Report</h3>
        
        <div class="result-box">
          <div>Wall Area Analysis:</div>
          <div class="result-main" id="drywall-wall-area">0 sq ft</div>
          <div style="font-size:0.9rem;color:#6b7280;">Net wall area after openings</div>
        </div>
        
        <div class="result-box">
          <div>Material Requirements:</div>
          <div class="result-main" id="drywall-sheets-required">0 Sheets</div>
          <div style="font-size:0.9rem;color:#6b7280;">Including waste factor</div>
        </div>
        
        <h4>üìã Material Breakdown</h4>
        <div class="result-row">
          <span>Gypsum Board Sheets:</span>
          <span id="drywall-sheets-qty">0 sheets</span>
        </div>
        <div class="result-row">
          <span>Joint Compound:</span>
          <span id="drywall-compound-qty">0 gallons</span>
        </div>
        <div class="result-row">
          <span>Joint Tape:</span>
          <span id="drywall-tape-qty">0 linear ft</span>
        </div>
        <div class="result-row">
          <span>Corner Bead:</span>
          <span id="drywall-corner-qty">0 linear ft</span>
        </div>
        <div class="result-row">
          <span>Screws/Fasteners:</span>
          <span id="drywall-screws-qty">0 lbs</span>
        </div>
        <div class="result-row">
          <span>Primer/Sealer:</span>
          <span id="drywall-primer-qty">0 gallons</span>
        </div>
        
        <h4>‚è±Ô∏è Labor Analysis</h4>
        <div class="result-row">
          <span>Installation Hours:</span>
          <span id="drywall-install-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Finishing Hours:</span>
          <span id="drywall-finish-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Total Labor Hours:</span>
          <span id="drywall-total-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Recommended Crew Size:</span>
          <span id="drywall-crew-size">2 people</span>
        </div>
        
        <h4>üí∞ Cost Analysis</h4>
        <div class="result-row">
          <span>Materials Cost:</span>
          <span id="drywall-material-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Labor Cost:</span>
          <span id="drywall-labor-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Equipment/Tools:</span>
          <span id="drywall-equipment-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Waste Allowance:</span>
          <span id="drywall-waste-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="drywall-total-cost">$0</strong>
        </div>
        
        <h4>üîß Technical Specifications</h4>
        <div class="result-row">
          <span>Board Specification:</span>
          <span id="drywall-board-spec">Standard</span>
        </div>
        <div class="result-row">
          <span>Fastener Pattern:</span>
          <span id="drywall-fastener-pattern">16" O.C.</span>
        </div>
        <div class="result-row">
          <span>Joint Treatment:</span>
          <span id="drywall-joint-spec">Standard</span>
        </div>
        <div class="result-row">
          <span>Estimated Duration:</span>
          <span id="drywall-duration">0 days</span>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('drywall')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('drywall')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('drywall')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    <div class="disclaimer">
      ‚ö†Ô∏è <strong>Professional Disclaimer:</strong> Drywall estimation performed per GA-214 standards and ASTM C1396 specifications. 
      Results are for preliminary planning only. Licensed contractor must verify all calculations, material selections, 
      and local building code compliance. Finish level requirements vary by application and must be specified in project documents. 
      Actual costs vary by location, market conditions, and project complexity. Permits may be required for structural modifications.
    </div>
  </div>

  <!-- PROFESSIONAL FLOORING CALCULATOR -->
  <div id="flooring-calc" class="calculator-panel" data-calc="flooring">
    <div class="calc-intro">
      <h2>‚¨õ Professional Flooring Calculator</h2>
      <p>Advanced flooring analysis with subfloor preparation, moisture barriers, installation complexity, and comprehensive material optimization.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Project Information</h3>
        
        <div class="input-group">
          <label>Building Type</label>
          <select id="flooring-building-type">
            <option value="residential">Residential</option>
            <option value="commercial">Commercial</option>
            <option value="retail">Retail</option>
            <option value="hospitality">Hospitality</option>
            <option value="healthcare">Healthcare</option>
            <option value="education">Educational</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Room Type</label>
          <select id="flooring-room-type">
            <option value="living">Living Area</option>
            <option value="kitchen">Kitchen</option>
            <option value="bathroom">Bathroom</option>
            <option value="bedroom">Bedroom</option>
            <option value="basement">Basement</option>
            <option value="office">Office Space</option>
            <option value="retail-floor">Retail Floor</option>
            <option value="warehouse">Warehouse</option>
          </select>
        </div>
        
        <h3>Floor Area & Layout</h3>
        
        <div class="input-group">
          <label for="flooring-sqft">Total Square Feet</label>
          <input type="number" id="flooring-sqft" value="500" min="1" max="50000">
        </div>
        
        <div class="input-group">
          <label>Room Shape Complexity</label>
          <select id="flooring-complexity">
            <option value="simple">Simple Rectangle</option>
            <option value="standard" selected>Standard Layout</option>
            <option value="complex">Complex (L-shape, angles)</option>
            <option value="intricate">Intricate (curves, patterns)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Number of Transitions</label>
          <input type="number" id="flooring-transitions" value="2" min="0" max="20">
        </div>
        
        <h3>Flooring Material</h3>
        
        <div class="input-group">
          <label>Primary Flooring Type</label>
          <select id="flooring-type">
            <option value="luxury-vinyl">Luxury Vinyl Plank (LVP)</option>
            <option value="engineered-hardwood">Engineered Hardwood</option>
            <option value="solid-hardwood">Solid Hardwood</option>
            <option value="laminate">Laminate</option>
            <option value="tile-ceramic">Ceramic Tile</option>
            <option value="tile-porcelain">Porcelain Tile</option>
            <option value="tile-natural">Natural Stone</option>
            <option value="carpet">Carpet</option>
            <option value="polished-concrete">Polished Concrete</option>
            <option value="epoxy">Epoxy Coating</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Material Grade</label>
          <select id="flooring-grade">
            <option value="economy">Economy Grade</option>
            <option value="standard" selected>Standard Grade</option>
            <option value="premium">Premium Grade</option>
            <option value="luxury">Luxury Grade</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Plank/Tile Size</label>
          <select id="flooring-size">
            <option value="standard">Standard Size</option>
            <option value="wide">Wide Plank/Large Format</option>
            <option value="narrow">Narrow/Small Format</option>
            <option value="mixed">Mixed Sizes</option>
          </select>
        </div>
        
        <h3>Subfloor Conditions</h3>
        
        <div class="input-group">
          <label>Existing Subfloor</label>
          <select id="flooring-subfloor">
            <option value="good-plywood">Good Plywood/OSB</option>
            <option value="concrete-good" selected>Concrete (Good)</option>
            <option value="concrete-poor">Concrete (Needs Repair)</option>
            <option value="old-flooring">Over Existing Flooring</option>
            <option value="poor-condition">Poor Condition (Repair Needed)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Moisture Conditions</label>
          <select id="flooring-moisture">
            <option value="dry" selected>Dry Environment</option>
            <option value="moderate">Moderate Moisture</option>
            <option value="high">High Moisture Risk</option>
            <option value="wet">Wet Environment</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Subfloor Preparation</label>
          <select id="flooring-prep">
            <option value="minimal">Minimal Prep Required</option>
            <option value="standard" selected>Standard Preparation</option>
            <option value="extensive">Extensive Prep Needed</option>
            <option value="replacement">Subfloor Replacement</option>
          </select>
        </div>
        
        <h3>Installation Requirements</h3>
        
        <div class="input-group">
          <label>Installation Method</label>
          <select id="flooring-install-method">
            <option value="floating">Floating Floor</option>
            <option value="glue-down">Glue Down</option>
            <option value="nail-down">Nail/Staple Down</option>
            <option value="click-lock" selected>Click-Lock System</option>
            <option value="thinset">Thinset Mortar</option>
            <option value="stretch-in">Stretch-in (Carpet)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Underlayment Required</label>
          <select id="flooring-underlayment">
            <option value="none">None Required</option>
            <option value="basic" selected>Basic Foam</option>
            <option value="premium">Premium Acoustic</option>
            <option value="moisture-barrier">Moisture Barrier</option>
            <option value="radiant-heat">Radiant Heat Compatible</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Baseboards/Trim</label>
          <select id="flooring-trim">
            <option value="none">No Trim Work</option>
            <option value="remove-reinstall" selected>Remove & Reinstall</option>
            <option value="new-baseboard">New Baseboards</option>
            <option value="quarter-round">Add Quarter Round</option>
            <option value="custom">Custom Trim Work</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Access & Working Conditions</label>
          <select id="flooring-access">
            <option value="easy" selected>Easy Access</option>
            <option value="moderate">Moderate Difficulty</option>
            <option value="difficult">Difficult Access</option>
            <option value="stairs">Stairs Included</option>
          </select>
        </div>
        
        <button type="button" class="btn btn-primary" data-action="calculate" onclick="calculateAdvancedFlooring()" aria-describedby="flooring-calc-description">
          üßÆ Calculate Professional Flooring Estimate
        </button>
        <small id="flooring-calc-description" class="input-hint">Comprehensive flooring analysis with industry standards</small>
      </div>
      
      <div class="results-section" aria-live="polite" aria-label="Flooring Calculation Results">
        <h3>üìä Professional Flooring Analysis</h3>
        
        <div class="result-box">
          <div>Total Floor Area:</div>
          <div class="result-main" id="flooring-total-area">0 sq ft</div>
          <div style="font-size:0.9rem;color:#6b7280;">Including waste allowance</div>
        </div>
        
        <div class="result-box">
          <div>Project Duration:</div>
          <div class="result-main" id="flooring-duration">0 days</div>
          <div style="font-size:0.9rem;color:#6b7280;">Estimated completion time</div>
        </div>
        
        <h4>üìã Material Requirements</h4>
        <div class="result-row">
          <span>Primary Flooring:</span>
          <span id="flooring-primary-qty">0 sq ft</span>
        </div>
        <div class="result-row">
          <span>Underlayment:</span>
          <span id="flooring-underlayment-qty">0 sq ft</span>
        </div>
        <div class="result-row">
          <span>Transition Strips:</span>
          <span id="flooring-transition-qty">0 linear ft</span>
        </div>
        <div class="result-row">
          <span>Baseboards/Trim:</span>
          <span id="flooring-trim-qty">0 linear ft</span>
        </div>
        <div class="result-row">
          <span>Adhesive/Fasteners:</span>
          <span id="flooring-adhesive-qty">0 units</span>
        </div>
        <div class="result-row">
          <span>Moisture Barrier:</span>
          <span id="flooring-moisture-qty">0 sq ft</span>
        </div>
        
        <h4>üîß Subfloor Preparation</h4>
        <div class="result-row">
          <span>Prep Requirements:</span>
          <span id="flooring-prep-description">Standard</span>
        </div>
        <div class="result-row">
          <span>Prep Labor Hours:</span>
          <span id="flooring-prep-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Prep Material Cost:</span>
          <span id="flooring-prep-cost">$0</span>
        </div>
        
        <h4>‚è±Ô∏è Labor Analysis</h4>
        <div class="result-row">
          <span>Installation Hours:</span>
          <span id="flooring-install-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Finishing Hours:</span>
          <span id="flooring-finish-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Total Labor Hours:</span>
          <span id="flooring-total-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Recommended Crew Size:</span>
          <span id="flooring-crew-size">2 people</span>
        </div>
        
        <h4>üí∞ Cost Breakdown</h4>
        <div class="result-row">
          <span>Flooring Materials:</span>
          <span id="flooring-material-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Subfloor Preparation:</span>
          <span id="flooring-subfloor-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Installation Labor:</span>
          <span id="flooring-labor-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Trim & Finishing:</span>
          <span id="flooring-trim-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Disposal & Cleanup:</span>
          <span id="flooring-disposal-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="flooring-total-cost">$0</strong>
        </div>
        
        <h4>üîß Technical Specifications</h4>
        <div class="result-row">
          <span>Installation Method:</span>
          <span id="flooring-install-spec">Standard</span>
        </div>
        <div class="result-row">
          <span>Acclimation Time:</span>
          <span id="flooring-acclimation">24-48 hours</span>
        </div>
        <div class="result-row">
          <span>Environmental Controls:</span>
          <span id="flooring-environment">Standard HVAC</span>
        </div>
        <div class="result-row">
          <span>Warranty Period:</span>
          <span id="flooring-warranty">Varies by manufacturer</span>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('flooring')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('flooring')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('flooring')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    <div class="disclaimer">
      ‚ö†Ô∏è <strong>Professional Disclaimer:</strong> Flooring calculations based on industry standards and manufacturer specifications. 
      Results are for preliminary planning only. Licensed contractor must verify all subfloor conditions, moisture levels, 
      and building code compliance. Acclimation requirements, environmental controls, and installation methods vary by material type. 
      Actual costs vary by location, market conditions, and site-specific requirements. Permits may be required for structural modifications.
    </div>
  </div>

  <!-- PROFESSIONAL PLUMBING CALCULATOR -->
  <div id="plumbing-calc" class="calculator-panel" data-calc="plumbing">
    <div class="calc-intro">
      <h2>üöø Professional Plumbing Calculator</h2>
      <p>Advanced IPC compliant plumbing analysis with fixture unit calculations, pipe sizing, water pressure analysis, and comprehensive cost breakdown.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Project Information</h3>
        
        <div class="input-group">
          <label>Building Type</label>
          <select id="plumb-building-type">
            <option value="residential">Single Family Residential</option>
            <option value="multi-family">Multi-Family Residential</option>
            <option value="commercial">Commercial</option>
            <option value="office">Office Building</option>
            <option value="retail">Retail</option>
            <option value="restaurant">Restaurant</option>
            <option value="healthcare">Healthcare Facility</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Project Scope</label>
          <select id="plumb-scope">
            <option value="new">New Construction</option>
            <option value="renovation" selected>Renovation</option>
            <option value="addition">Addition</option>
            <option value="remodel">Full Remodel</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Number of Stories</label>
          <input type="number" id="plumb-stories" value="1" min="1" max="10">
        </div>
        
        <h3>Water Supply System</h3>
        
        <div class="input-group">
          <label>Water Service Size</label>
          <select id="plumb-service-size">
            <option value="3/4">3/4 inch</option>
            <option value="1" selected>1 inch</option>
            <option value="1.25">1-1/4 inch</option>
            <option value="1.5">1-1/2 inch</option>
            <option value="2">2 inch</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Water Pressure (PSI)</label>
          <input type="number" id="plumb-pressure" value="50" min="20" max="80">
        </div>
        
        <div class="input-group">
          <label>Supply Piping Material</label>
          <select id="plumb-supply-material">
            <option value="pex" selected>PEX (Cross-linked Polyethylene)</option>
            <option value="copper">Copper Type L</option>
            <option value="cpvc">CPVC</option>
            <option value="pvc">PVC (Cold water only)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Drain/Waste Material</label>
          <select id="plumb-drain-material">
            <option value="pvc" selected>PVC Schedule 40</option>
            <option value="abs">ABS</option>
            <option value="cast-iron">Cast Iron</option>
            <option value="pvc-sch80">PVC Schedule 80</option>
          </select>
        </div>
        
        <h3>Fixture Count (IPC Table 604.3)</h3>
        
        <div class="input-group">
          <label>Water Closets (Toilets)</label>
          <input type="number" id="plumb-toilets" value="2" min="0" max="20">
          <small>4.0 WSFU each</small>
        </div>
        
        <div class="input-group">
          <label>Lavatories (Bathroom Sinks)</label>
          <input type="number" id="plumb-lavatories" value="2" min="0" max="10">
          <small>1.0 WSFU each</small>
        </div>
        
        <div class="input-group">
          <label>Kitchen Sinks</label>
          <input type="number" id="plumb-kitchen-sinks" value="1" min="0" max="5">
          <small>1.5 WSFU each</small>
        </div>
        
        <div class="input-group">
          <label>Bathtubs</label>
          <input type="number" id="plumb-bathtubs" value="1" min="0" max="5">
          <small>2.0 WSFU each</small>
        </div>
        
        <div class="input-group">
          <label>Shower Stalls</label>
          <input type="number" id="plumb-showers" value="1" min="0" max="10">
          <small>2.0 WSFU each</small>
        </div>
        
        <div class="input-group">
          <label>Clothes Washers</label>
          <input type="number" id="plumb-washers" value="1" min="0" max="3">
          <small>2.0 WSFU each</small>
        </div>
        
        <div class="input-group">
          <label>Dishwashers</label>
          <input type="number" id="plumb-dishwashers" value="1" min="0" max="3">
          <small>1.5 WSFU each</small>
        </div>
        
        <div class="input-group">
          <label>Utility Sinks</label>
          <input type="number" id="plumb-utility-sinks" value="1" min="0" max="5">
          <small>2.0 WSFU each</small>
        </div>
        
        <div class="input-group">
          <label>Hose Bibs (Exterior)</label>
          <input type="number" id="plumb-hose-bibs" value="2" min="0" max="10">
          <small>2.5 WSFU each</small>
        </div>
        
        <h3>Installation Factors</h3>
        
        <div class="input-group">
          <label>Installation Complexity</label>
          <select id="plumb-complexity">
            <option value="simple">Simple - Open access, standard layout</option>
            <option value="moderate" selected>Moderate - Some obstacles, typical</option>
            <option value="complex">Complex - Difficult access, many obstacles</option>
            <option value="very-complex">Very Complex - Extensive rework required</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Access Conditions</label>
          <select id="plumb-access">
            <option value="good" selected>Good - Easy access to run pipes</option>
            <option value="limited">Limited - Some tight spaces</option>
            <option value="difficult">Difficult - Extensive demolition required</option>
          </select>
        </div>
        
        <button class="btn btn-primary" data-action="calculate" onclick="calculateAdvancedPlumbing()">üßÆ Calculate Professional Plumbing</button>
      </div>
      
      <div class="results-section">
        <h3>üìä Professional Plumbing Analysis</h3>
        
        <div class="result-box">
          <div>Total Water Supply Fixture Units:</div>
          <div class="result-main" id="plumb-total-wsfu">0 WSFU</div>
          <div style="font-size:0.9rem;color:#6b7280;">Per IPC Table 604.3</div>
        </div>
        
        <div class="result-box">
          <div>Required Service Size:</div>
          <div class="result-main" id="plumb-required-service">1 inch</div>
          <div style="font-size:0.9rem;color:#6b7280;">Minimum recommendation</div>
        </div>
        
        <h4>üíß Water System Analysis</h4>
        <div class="result-row">
          <span>Peak Flow Demand:</span>
          <span id="plumb-peak-flow">0 GPM</span>
        </div>
        <div class="result-row">
          <span>Pressure Loss Estimate:</span>
          <span id="plumb-pressure-loss">0 PSI</span>
        </div>
        <div class="result-row">
          <span>Available Working Pressure:</span>
          <span id="plumb-working-pressure">0 PSI</span>
        </div>
        
        <h4>üîß Pipe Sizing Requirements</h4>
        <div class="result-row">
          <span>Main Supply Line:</span>
          <span id="plumb-main-size">1"</span>
        </div>
        <div class="result-row">
          <span>Branch Lines:</span>
          <span id="plumb-branch-size">3/4"</span>
        </div>
        <div class="result-row">
          <span>Fixture Connections:</span>
          <span id="plumb-fixture-size">1/2"</span>
        </div>
        
        <h4>üìé Material Requirements</h4>
        <div class="result-row">
          <span>Supply Piping:</span>
          <span id="plumb-supply-length">0 linear feet</span>
        </div>
        <div class="result-row">
          <span>Drain/Waste Piping:</span>
          <span id="plumb-drain-length">0 linear feet</span>
        </div>
        <div class="result-row">
          <span>Vent Piping:</span>
          <span id="plumb-vent-length">0 linear feet</span>
        </div>
        <div class="result-row">
          <span>Fittings & Valves:</span>
          <span id="plumb-fittings-count">0 units</span>
        </div>
        
        <h4>‚è±Ô∏è Labor Analysis</h4>
        <div class="result-row">
          <span>Rough-in Labor:</span>
          <span id="plumb-roughin-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Fixture Installation:</span>
          <span id="plumb-fixture-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Total Labor Hours:</span>
          <span id="plumb-total-hours">0 hours</span>
        </div>
        <div class="result-row">
          <span>Recommended Crew:</span>
          <span id="plumb-crew-size">2 plumbers</span>
        </div>
        
        <h4>üí∞ Professional Cost Breakdown</h4>
        <div class="result-row">
          <span>Fixtures & Equipment:</span>
          <span id="plumb-fixtures-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Supply Materials:</span>
          <span id="plumb-supply-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Drain/Waste Materials:</span>
          <span id="plumb-drain-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Fittings & Valves:</span>
          <span id="plumb-fittings-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Installation Labor:</span>
          <span id="plumb-labor-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Permits & Inspection:</span>
          <span id="plumb-permit-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="plumb-total-cost">$0</strong>
        </div>
        
        <h4>üîç Code Compliance</h4>
        <div class="result-row">
          <span>IPC Table 604.3:</span>
          <span id="plumb-ipc-compliance">Compliant</span>
        </div>
        <div class="result-row">
          <span>Pipe Sizing:</span>
          <span id="plumb-sizing-compliance">Per Code</span>
        </div>
        <div class="result-row">
          <span>Venting System:</span>
          <span id="plumb-vent-compliance">Code Compliant</span>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('plumbing')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('plumbing')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('plumbing')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    <div class="disclaimer">
      ‚ö†Ô∏è <strong>Professional Disclaimer:</strong> Plumbing calculations performed per International Plumbing Code (IPC) standards including fixture unit analysis per Table 604.3 and pipe sizing requirements. 
      Results are for preliminary planning only. Licensed plumber must verify all calculations, fixture spacing, pipe sizing, venting requirements, and local code compliance. 
      Permits and inspections required by local authority having jurisdiction. Water pressure testing and backflow prevention may be required. 
      Actual costs vary by location, complexity, and local code requirements.
    </div>
  </div>

  <!-- ADVANCED HVAC LOAD CALCULATOR -->
  <div id="hvac-calc" class="calculator-panel" data-calc="hvac">
    <div class="calc-intro">
      <h2>‚ùÑÔ∏è Professional HVAC Load Calculator</h2>
      <p>Advanced Manual J load calculation methodology with equipment sizing, ductwork design, and comprehensive cost analysis.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Building Specifications</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label for="hvac-sqft">Conditioned Area (sq ft) <span class="tooltip" data-tip="Total heated/cooled square footage">‚ÑπÔ∏è</span></label>
            <input type="number" id="hvac-sqft" value="2000" min="200" max="10000" step="50" aria-describedby="hvac-sqft-hint">
            <small id="hvac-sqft-hint" class="input-hint">Enter total conditioned space area</small>
          </div>
          <div class="input-group">
            <label for="hvac-ceiling-height">Ceiling Height (ft)</label>
            <select id="hvac-ceiling-height">
              <option value="8">8 feet (Standard)</option>
              <option value="9" selected>9 feet (Common)</option>
              <option value="10">10 feet (High)</option>
              <option value="12">12 feet (Vaulted)</option>
              <option value="14">14+ feet (Cathedral)</option>
            </select>
          </div>
        </div>

        <div class="input-group-row">
          <div class="input-group">
            <label for="hvac-climate-zone">Climate Zone <span class="tooltip" data-tip="ASHRAE climate zones affect load calculations">‚ÑπÔ∏è</span></label>
            <select id="hvac-climate-zone">
              <option value="1A">1A - Very Hot, Humid (Miami)</option>
              <option value="2A">2A - Hot, Humid (Houston)</option>
              <option value="2B">2B - Hot, Dry (Phoenix)</option>
              <option value="3A">3A - Warm, Humid (Atlanta)</option>
              <option value="3B">3B - Warm, Dry (Las Vegas)</option>
              <option value="3C">3C - Warm, Marine (San Diego)</option>
              <option value="4A" selected>4A - Mixed, Humid (Washington DC)</option>
              <option value="4B">4B - Mixed, Dry (Denver)</option>
              <option value="4C">4C - Mixed, Marine (Seattle)</option>
              <option value="5A">5A - Cool, Humid (Chicago)</option>
              <option value="5B">5B - Cool, Dry (Boise)</option>
              <option value="6A">6A - Cold, Humid (Minneapolis)</option>
              <option value="6B">6B - Cold, Dry (Helena)</option>
              <option value="7">7 - Very Cold (Duluth)</option>
              <option value="8">8 - Subarctic (Fairbanks)</option>
            </select>
          </div>
          <div class="input-group">
            <label for="hvac-building-type">Building Type</label>
            <select id="hvac-building-type">
              <option value="residential">Residential Home</option>
              <option value="apartment">Apartment/Condo</option>
              <option value="office">Office Building</option>
              <option value="retail">Retail Space</option>
              <option value="warehouse">Warehouse</option>
              <option value="restaurant">Restaurant</option>
              <option value="medical">Medical Facility</option>
            </select>
          </div>
        </div>

        <div class="input-group">
          <label for="hvac-insulation">Insulation Level</label>
          <select id="hvac-insulation">
            <option value="poor">Poor (R-11 walls, R-19 attic)</option>
            <option value="fair">Fair (R-13 walls, R-30 attic)</option>
            <option value="good" selected>Good (R-15 walls, R-38 attic)</option>
            <option value="excellent">Excellent (R-21 walls, R-49 attic)</option>
            <option value="superinsulated">Super Insulated (R-25+ walls, R-60+ attic)</option>
          </select>
        </div>

        <div class="input-group-row">
          <div class="input-group">
            <label for="hvac-windows">Window Area (% of wall area)</label>
            <select id="hvac-windows">
              <option value="10">10% - Minimal windows</option>
              <option value="15" selected>15% - Standard residential</option>
              <option value="20">20% - Above average</option>
              <option value="30">30% - Large windows</option>
              <option value="40">40% - Floor-to-ceiling</option>
            </select>
          </div>
          <div class="input-group">
            <label for="hvac-window-type">Window Type</label>
            <select id="hvac-window-type">
              <option value="single">Single Pane (U=1.0)</option>
              <option value="double">Double Pane (U=0.5)</option>
              <option value="double-low-e" selected>Double Low-E (U=0.35)</option>
              <option value="triple">Triple Pane (U=0.2)</option>
              <option value="high-performance">High Performance (U=0.15)</option>
            </select>
          </div>
        </div>

        <div class="input-group-row">
          <div class="input-group">
            <label for="hvac-orientation">Primary Orientation</label>
            <select id="hvac-orientation">
              <option value="north">North Facing</option>
              <option value="south" selected>South Facing</option>
              <option value="east">East Facing</option>
              <option value="west">West Facing</option>
              <option value="mixed">Mixed Orientation</option>
            </select>
          </div>
          <div class="input-group">
            <label for="hvac-occupancy">Occupancy (people)</label>
            <input type="number" id="hvac-occupancy" value="4" min="1" max="50" step="1">
          </div>
        </div>

        <div class="input-group">
          <label for="hvac-system-type">System Type & Efficiency</label>
          <select id="hvac-system-type">
            <option value="gas-furnace-ac">Gas Furnace + AC (80% AFUE, 14 SEER) - $4,500</option>
            <option value="high-eff-gas-ac">High-Eff Gas + AC (95% AFUE, 16 SEER) - $6,200</option>
            <option value="heat-pump-standard">Heat Pump Standard (14 SEER, 8.2 HSPF) - $5,800</option>
            <option value="heat-pump-high-eff" selected>Heat Pump High-Eff (18 SEER, 9.5 HSPF) - $7,500</option>
            <option value="mini-split-single">Mini-Split Single Zone (22 SEER) - $3,200</option>
            <option value="mini-split-multi">Mini-Split Multi Zone (20 SEER) - $8,500</option>
            <option value="geothermal">Geothermal Heat Pump (17 EER, 3.6 COP) - $15,000</option>
            <option value="dual-fuel">Dual Fuel System (Gas/Heat Pump) - $8,800</option>
          </select>
        </div>

        <div class="input-group">
          <label for="hvac-ductwork">Ductwork Condition</label>
          <select id="hvac-ductwork">
            <option value="new">New Installation - Perfect sealing</option>
            <option value="good" selected>Good - Minor leakage (5-10%)</option>
            <option value="fair">Fair - Moderate leakage (10-15%)</option>
            <option value="poor">Poor - Significant leakage (15-25%)</option>
            <option value="replacement">Needs Full Replacement</option>
          </select>
        </div>
        
        <button type="button" class="btn btn-primary" data-action="calculate" onclick="calculateHVAC()" aria-describedby="hvac-calc-description">
          üßÆ Calculate HVAC Load & Costs
        </button>
        <small id="hvac-calc-description" class="input-hint">Professional Manual J methodology calculation</small>
      </div>
      
      <div class="results-section" aria-live="polite" aria-label="HVAC Calculation Results">
        <h3>üìä Professional Load Analysis</h3>
        
        <div class="result-box">
          <div>System Capacity Required:</div>
          <div class="result-main" id="hvac-tonnage">0.0 Tons</div>
          <div style="font-size:0.9rem;color:#6b7280;" id="hvac-btus">0 BTU/hr heating, 0 BTU/hr cooling</div>
        </div>
        
        <div class="result-row">
          <span>Cooling Load (Manual J):</span>
          <span id="hvac-cooling-load">0 BTU/hr</span>
        </div>
        <div class="result-row">
          <span>Heating Load (Manual J):</span>
          <span id="hvac-heating-load">0 BTU/hr</span>
        </div>
        <div class="result-row">
          <span>Load per Sq Ft:</span>
          <span id="hvac-load-per-sqft">0 BTU/hr/sqft</span>
        </div>
        <div class="result-row">
          <span>Recommended System:</span>
          <span id="hvac-recommended-system">-</span>
        </div>
        
        <h4 style="margin-top:1.5rem;margin-bottom:0.5rem;color:#1e3a5f;">üí∞ Cost Breakdown</h4>
        <div class="result-row">
          <span>Equipment Cost:</span>
          <span id="hvac-equipment-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Installation Labor:</span>
          <span id="hvac-install-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Ductwork (if needed):</span>
          <span id="hvac-ductwork-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Permits & Inspections:</span>
          <span id="hvac-permits-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Electrical Upgrades:</span>
          <span id="hvac-electrical-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="hvac-total-cost">$0</strong>
        </div>
        
        <h4 style="margin-top:1.5rem;margin-bottom:0.5rem;color:#1e3a5f;">‚ö° Operating Costs</h4>
        <div class="result-row">
          <span>Annual Heating Cost:</span>
          <span id="hvac-heating-annual">$0</span>
        </div>
        <div class="result-row">
          <span>Annual Cooling Cost:</span>
          <span id="hvac-cooling-annual">$0</span>
        </div>
        <div class="result-row">
          <span>Total Annual Energy:</span>
          <span id="hvac-total-annual">$0</span>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('hvac')">üíæ Save Calculation</button>
          <button class="btn btn-secondary" onclick="exportCalc('hvac')">üìä Export Report</button>
          <button class="btn btn-secondary" onclick="shareCalc('hvac')">üîó Share Results</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print Report</button>
        </div>
      </div>
    </div>
    
    <div class="disclaimer">
      <strong>‚ö†Ô∏è Professional Manual J Load Calculation:</strong> This calculator uses ACCA Manual J methodology for load calculations. Results are ROM estimates based on industry standards. Actual installation requires professional Manual J, S, T, and D calculations by licensed HVAC contractors. Equipment sizing must account for local codes, altitude adjustments, and specific equipment performance data. Always verify with local contractors and obtain multiple quotes.
    </div>
  </div>

  <!-- PROFESSIONAL INSULATION CALCULATOR -->
  <div id="insulation-calc" class="calculator-panel" data-calc="insulation">
    <div class="calc-intro">
      <h2>üè† Professional Insulation Calculator</h2>
      <p>Advanced IECC energy code compliant insulation analysis with R-value optimization, thermal bridging calculations, energy modeling, and 25-year cost projections per ASHRAE 90.1 standards.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Building Information</h3>
        
        <div class="input-group">
          <label>Building Type</label>
          <select id="insul-building-type">
            <option value="residential" selected>Residential (IECC)</option>
            <option value="commercial">Commercial (ASHRAE 90.1)</option>
            <option value="industrial">Industrial Facility</option>
            <option value="warehouse">Warehouse/Storage</option>
            <option value="school">Educational Facility</option>
            <option value="hospital">Healthcare Facility</option>
            <option value="office">Office Building</option>
            <option value="retail">Retail/Commercial</option>
          </select>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Climate Zone</label>
            <select id="insul-climate-zone">
              <option value="1A">Zone 1A (Hot-Humid)</option>
              <option value="2A">Zone 2A (Hot-Humid)</option>
              <option value="2B">Zone 2B (Hot-Dry)</option>
              <option value="3A" selected>Zone 3A (Warm-Humid)</option>
              <option value="3B">Zone 3B (Warm-Dry)</option>
              <option value="3C">Zone 3C (Warm-Marine)</option>
              <option value="4A">Zone 4A (Mixed-Humid)</option>
              <option value="4B">Zone 4B (Mixed-Dry)</option>
              <option value="4C">Zone 4C (Mixed-Marine)</option>
              <option value="5A">Zone 5A (Cool-Humid)</option>
              <option value="5B">Zone 5B (Cool-Dry)</option>
              <option value="6A">Zone 6A (Cold-Humid)</option>
              <option value="6B">Zone 6B (Cold-Dry)</option>
              <option value="7">Zone 7 (Very Cold)</option>
              <option value="8">Zone 8 (Subarctic)</option>
            </select>
          </div>
          <div class="input-group">
            <label>IECC Code Version</label>
            <select id="insul-iecc-version">
              <option value="2021" selected>2021 IECC</option>
              <option value="2018">2018 IECC</option>
              <option value="2015">2015 IECC</option>
              <option value="2012">2012 IECC</option>
            </select>
          </div>
        </div>
        
        <h3>Insulation Areas</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Wall Area (sqft)</label>
            <input type="number" id="insul-wall-area" value="2400" min="0">
          </div>
          <div class="input-group">
            <label>Ceiling Area (sqft)</label>
            <input type="number" id="insul-ceiling-area" value="1800" min="0">
          </div>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Floor Area (sqft)</label>
            <input type="number" id="insul-floor-area" value="0" min="0">
          </div>
          <div class="input-group">
            <label>Basement Wall (sqft)</label>
            <input type="number" id="insul-basement-area" value="0" min="0">
          </div>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Rim/Band Joist (linft)</label>
            <input type="number" id="insul-rimjoist" value="140" min="0">
          </div>
          <div class="input-group">
            <label>Ductwork Area (sqft)</label>
            <input type="number" id="insul-ductwork" value="300" min="0">
          </div>
        </div>
        
        <h3>Construction Details</h3>
        
        <div class="input-group">
          <label>Wall Construction</label>
          <select id="insul-wall-construction">
            <option value="2x4-16">2x4 @ 16" OC</option>
            <option value="2x4-24">2x4 @ 24" OC</option>
            <option value="2x6-16" selected>2x6 @ 16" OC</option>
            <option value="2x6-24">2x6 @ 24" OC</option>
            <option value="2x8-16">2x8 @ 16" OC</option>
            <option value="steel-16">Steel Stud @ 16" OC</option>
            <option value="steel-24">Steel Stud @ 24" OC</option>
            <option value="block">CMU Block Wall</option>
            <option value="sip">SIP Panel</option>
            <option value="icf">ICF Foundation</option>
          </select>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Exterior Sheathing</label>
            <select id="insul-sheathing">
              <option value="osb">OSB/Plywood</option>
              <option value="foam-1" selected>1" Foam Board</option>
              <option value="foam-2">2" Foam Board</option>
              <option value="foam-3">3" Foam Board</option>
              <option value="zip">ZIP System</option>
              <option value="fiberboard">Fiberboard</option>
            </select>
          </div>
          <div class="input-group">
            <label>Air Sealing Level</label>
            <select id="insul-air-sealing">
              <option value="poor">Poor (>7 ACH50)</option>
              <option value="average">Average (5-7 ACH50)</option>
              <option value="good" selected>Good (3-5 ACH50)</option>
              <option value="excellent">Excellent (<3 ACH50)</option>
              <option value="passive">Passive House (<0.6 ACH50)</option>
            </select>
          </div>
        </div>
        
        <h3>Insulation Specifications</h3>
        
        <div class="input-group">
          <label>Wall Insulation Type</label>
          <select id="insul-wall-type">
            <option value="fiberglass">Fiberglass Batt</option>
            <option value="rockwool">Mineral Wool</option>
            <option value="cellulose">Blown Cellulose</option>
            <option value="spray-foam" selected>Spray Foam</option>
            <option value="rigid-foam">Rigid Foam Board</option>
            <option value="hybrid">Hybrid System</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Ceiling/Attic Insulation</label>
          <select id="insul-ceiling-type">
            <option value="loose-fill">Loose-Fill Fiberglass</option>
            <option value="blown-cellulose" selected>Blown Cellulose</option>
            <option value="batt">Fiberglass Batt</option>
            <option value="rockwool-blown">Blown Mineral Wool</option>
            <option value="spray-foam">Spray Foam</option>
          </select>
        </div>
        
        <h3>Energy Analysis</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Heating Fuel</label>
            <select id="insul-heating-fuel">
              <option value="natural-gas" selected>Natural Gas</option>
              <option value="electricity">Electric</option>
              <option value="oil">Heating Oil</option>
              <option value="propane">Propane</option>
              <option value="geothermal">Geothermal</option>
              <option value="heat-pump">Heat Pump</option>
            </select>
          </div>
          <div class="input-group">
            <label>Cooling System</label>
            <select id="insul-cooling-system">
              <option value="central-ac" selected>Central AC</option>
              <option value="heat-pump">Heat Pump</option>
              <option value="mini-split">Mini Split</option>
              <option value="window-units">Window Units</option>
              <option value="none">None</option>
            </select>
          </div>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Gas Rate ($/therm)</label>
            <input type="number" id="insul-gas-rate" value="1.25" step="0.01" min="0">
          </div>
          <div class="input-group">
            <label>Electric Rate ($/kWh)</label>
            <input type="number" id="insul-electric-rate" value="0.14" step="0.01" min="0">
          </div>
        </div>
        
        <button class="btn btn-primary" data-action="calculate" onclick="calculateAdvancedInsulationNew()">üßÆ Calculate Professional Insulation</button>
      </div>
      
      <div class="results-section">
        <h3>üìä Professional Insulation Analysis</h3>
        
        <div class="result-box">
          <div id="insulation-total">$0 Total Project Cost</div>
          <div id="insulation-payback" class="result-highlight">0 Year Payback Period</div>
        </div>
        
        <h4>R-Value Analysis</h4>
        <div class="result-row"><span>Wall R-Value (Required):</span> <span id="insul-wall-r-req">R-0</span></div>
        <div class="result-row"><span>Wall R-Value (Achieved):</span> <span id="insul-wall-r-actual">R-0</span></div>
        <div class="result-row"><span>Ceiling R-Value (Required):</span> <span id="insul-ceiling-r-req">R-0</span></div>
        <div class="result-row"><span>Ceiling R-Value (Achieved):</span> <span id="insul-ceiling-r-actual">R-0</span></div>
        <div class="result-row"><span>Overall Assembly U-Factor:</span> <span id="insul-u-factor">0.000</span></div>
        
        <h4>Material Costs</h4>
        <div class="result-row"><span>Wall Insulation:</span> <span id="insul-wall-cost">$0</span></div>
        <div class="result-row"><span>Ceiling Insulation:</span> <span id="insul-ceiling-cost">$0</span></div>
        <div class="result-row"><span>Floor/Basement:</span> <span id="insul-floor-cost">$0</span></div>
        <div class="result-row"><span>Air Sealing Materials:</span> <span id="insul-sealing-cost">$0</span></div>
        <div class="result-row"><span>Vapor Barriers:</span> <span id="insul-barrier-cost">$0</span></div>
        
        <h4>Labor & Installation</h4>
        <div class="result-row"><span>Installation Labor:</span> <span id="insul-labor-cost">$0</span></div>
        <div class="result-row"><span>Air Sealing Labor:</span> <span id="insul-sealing-labor">$0</span></div>
        <div class="result-row"><span>Blower Door Test:</span> <span id="insul-testing-cost">$0</span></div>
        <div class="result-row"><span>Permits & Inspection:</span> <span id="insul-permit-cost">$0</span></div>
        
        <h4>Energy Savings Analysis</h4>
        <div class="result-row"><span>Annual Heating Savings:</span> <span id="insul-heating-savings">$0</span></div>
        <div class="result-row"><span>Annual Cooling Savings:</span> <span id="insul-cooling-savings">$0</span></div>
        <div class="result-row"><span>Total Annual Savings:</span> <span id="insul-annual-savings">$0</span></div>
        <div class="result-row"><span>25-Year Energy Savings:</span> <span id="insul-lifetime-savings">$0</span></div>
        <div class="result-row"><span>Net Present Value (7%):</span> <span id="insul-npv">$0</span></div>
        
        <h4>Thermal Performance</h4>
        <div class="result-row"><span>Heat Loss Reduction:</span> <span id="insul-heat-loss">0%</span></div>
        <div class="result-row"><span>Thermal Bridging Factor:</span> <span id="insul-thermal-bridge">0%</span></div>
        <div class="result-row"><span>Moisture Risk Assessment:</span> <span id="insul-moisture-risk">Low</span></div>
        <div class="result-row"><span>IECC Compliance:</span> <span id="insul-code-compliance">‚úÖ Compliant</span></div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('insulation')">üíæ Save Report</button>
          <button class="btn btn-secondary" onclick="exportCalc('insulation')">üìä Export Analysis</button>
          <button class="btn btn-secondary" onclick="printCalc('insulation')">üñ®Ô∏è Print Report</button>
        </div>
      </div>
    </div>
    
    <div class="disclaimer">
      ‚ö†Ô∏è <strong>Professional Insulation Analysis:</strong> Calculations based on IECC energy code requirements, ASHRAE 90.1 standards, and manufacturer specifications. R-values include thermal bridging effects. Energy savings estimates based on TMY3 weather data and building simulation models. Actual performance may vary based on installation quality, air leakage, and occupant behavior. Consult with certified energy auditor for detailed analysis.
    </div>
  </div>

  <!-- EXCAVATION CALCULATOR -->
  <div id="excavation-calc" class="calculator-panel" data-calc="excavation">
    <div class="calc-intro">
      <h2>üöú Professional Excavation Calculator</h2>
      <p>Advanced OSHA compliant excavation analysis with soil classification, equipment optimization, safety factors, and comprehensive risk assessment.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Project Information</h3>
        
        <div class="input-group">
          <label>Project Type</label>
          <select id="excav-project-type">
            <option value="foundation">Foundation Excavation</option>
            <option value="utility" selected>Utility Trench</option>
            <option value="basement">Basement/Cellar</option>
            <option value="septic">Septic System</option>
            <option value="pool">Swimming Pool</option>
            <option value="roadway">Roadway/Driveway</option>
            <option value="sitework">General Sitework</option>
            <option value="drainage">Drainage System</option>
          </select>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Length (feet)</label>
            <input type="number" id="excav-length" value="100" min="1">
          </div>
          <div class="input-group">
            <label>Width (feet)</label>
            <input type="number" id="excav-width" value="3" min="1">
          </div>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Average Depth (feet)</label>
            <input type="number" id="excav-depth" value="5" min="1" max="25">
          </div>
          <div class="input-group">
            <label>Slope Ratio (H:V)</label>
            <select id="excav-slope">
              <option value="0.75">3/4:1 (Type A Soil)</option>
              <option value="1" selected>1:1 (Type B Soil)</option>
              <option value="1.5">1.5:1 (Type C Soil)</option>
              <option value="vertical">Vertical (Shored)</option>
            </select>
          </div>
        </div>
        
        <h3>Soil & Site Conditions</h3>
        
        <div class="input-group">
          <label>Soil Classification (OSHA)</label>
          <select id="excav-soil-type">
            <option value="type-a">Type A - Cohesive clay, cemented sand/gravel</option>
            <option value="type-b" selected>Type B - Silt, sandy loam, medium clay</option>
            <option value="type-c">Type C - Granular sand, gravel, submerged soil</option>
            <option value="rock">Rock - Requires blasting/breaking</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Groundwater Conditions</label>
          <select id="excav-groundwater">
            <option value="none" selected>No Groundwater Issues</option>
            <option value="seasonal">Seasonal Water Table</option>
            <option value="high">High Water Table</option>
            <option value="dewatering">Dewatering Required</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Access Conditions</label>
          <select id="excav-access">
            <option value="excellent">Excellent (Open site, easy access)</option>
            <option value="good" selected>Good (Standard residential)</option>
            <option value="restricted">Restricted (Tight spaces, obstacles)</option>
            <option value="difficult">Difficult (Hand dig required)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Existing Utilities Present</label>
          <select id="excav-utilities">
            <option value="none">No Known Utilities</option>
            <option value="marked" selected>Utilities Marked</option>
            <option value="complex">Complex Utility Area</option>
            <option value="conflict">Utility Conflicts Expected</option>
          </select>
        </div>
        
        <h3>Equipment & Method</h3>
        
        <div class="input-group">
          <label>Primary Equipment</label>
          <select id="excav-equipment">
            <option value="mini-excavator">Mini Excavator (< 10k lbs)</option>
            <option value="compact-excavator" selected>Compact Excavator (10-20k lbs)</option>
            <option value="mid-excavator">Mid-size Excavator (20-45k lbs)</option>
            <option value="large-excavator">Large Excavator (45k+ lbs)</option>
            <option value="backhoe">Backhoe Loader</option>
            <option value="trencher">Chain Trencher</option>
            <option value="hand-dig">Hand Excavation</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Support System Required</label>
          <select id="excav-support">
            <option value="none">None (< 5 ft depth)</option>
            <option value="sloping" selected>Sloping/Benching</option>
            <option value="trench-box">Trench Box/Shield</option>
            <option value="shoring">Hydraulic Shoring</option>
            <option value="permanent">Permanent Shoring</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Spoil Management</label>
          <select id="excav-spoil">
            <option value="onsite" selected>Keep On-Site</option>
            <option value="screening">Screen and Reuse</option>
            <option value="partial-removal">Partial Removal</option>
            <option value="full-removal">Full Removal</option>
            <option value="hazmat">Hazardous Material</option>
          </select>
        </div>
        
        <h3>Project Schedule</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Season/Weather</label>
            <select id="excav-season">
              <option value="optimal" selected>Optimal Conditions</option>
              <option value="winter">Winter/Cold</option>
              <option value="wet">Wet Season</option>
              <option value="emergency">Emergency Work</option>
            </select>
          </div>
          <div class="input-group">
            <label>Work Schedule</label>
            <select id="excav-schedule">
              <option value="normal" selected>Normal Hours</option>
              <option value="overtime">Overtime Required</option>
              <option value="weekend">Weekend Work</option>
              <option value="night">Night Work</option>
            </select>
          </div>
        </div>
        
        <button class="btn btn-primary" data-action="calculate" onclick="calculateAdvancedExcavation()">üßÆ Calculate Professional Excavation</button>
      </div>
      
      <div class="results-section">
        <h3>üìä OSHA Compliance Analysis</h3>
        <div class="result-box">
          <div>Total Excavation Volume:</div>
          <div class="result-main" id="excav-total-volume">0 CY</div>
          <div style="font-size:0.9rem;color:#6b7280;">Including slope requirements</div>
        </div>
        
        <div class="result-box">
          <div>Safety Classification:</div>
          <div class="result-main" id="excav-safety-class">Type B</div>
          <div style="font-size:0.9rem;color:#6b7280;">Per OSHA 29 CFR 1926.650</div>
        </div>
        
        <h4>üìã Excavation Analysis</h4>
        <div class="result-row">
          <span>Cut Volume:</span>
          <span id="excav-cut-volume">0 CY</span>
        </div>
        <div class="result-row">
          <span>Slope/Bench Volume:</span>
          <span id="excav-slope-volume">0 CY</span>
        </div>
        <div class="result-row">
          <span>Production Rate:</span>
          <span id="excav-production-rate">0 CY/hr</span>
        </div>
        <div class="result-row">
          <span>Excavation Duration:</span>
          <span id="excav-duration">0 hours</span>
        </div>
        <div class="result-row">
          <span>Crew Size Required:</span>
          <span id="excav-crew-size">0 workers</span>
        </div>
        
        <h4>üí∞ Professional Cost Analysis</h4>
        <div class="result-row">
          <span>Equipment Rental:</span>
          <span id="excav-equipment-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Operator Labor:</span>
          <span id="excav-operator-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Ground Crew:</span>
          <span id="excav-crew-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Support System:</span>
          <span id="excav-support-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Dewatering:</span>
          <span id="excav-dewatering-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Spoil Management:</span>
          <span id="excav-spoil-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Utility Protection:</span>
          <span id="excav-utility-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Permits & Inspection:</span>
          <span id="excav-permit-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Project Cost:</strong>
          <strong id="excav-total-cost">$0</strong>
        </div>
        
        <h4>‚ö†Ô∏è Risk Assessment</h4>
        <div class="result-row">
          <span>Cave-in Risk:</span>
          <span id="excav-cave-risk">Low</span>
        </div>
        <div class="result-row">
          <span>Hazardous Atmosphere:</span>
          <span id="excav-atmosphere-risk">None</span>
        </div>
        <div class="result-row">
          <span>Water Hazards:</span>
          <span id="excav-water-risk">None</span>
        </div>
        <div class="result-row">
          <span>Equipment Hazards:</span>
          <span id="excav-equipment-risk">Standard</span>
        </div>
        
        <h4>üîß Technical Specifications</h4>
        <div class="result-row">
          <span>Maximum Slope Angle:</span>
          <span id="excav-slope-angle">45¬∞</span>
        </div>
        <div class="result-row">
          <span>Protective System:</span>
          <span id="excav-protection">Sloping</span>
        </div>
        <div class="result-row">
          <span>Competent Person Req:</span>
          <span id="excav-competent-person">Yes</span>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('professional-excavation')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('professional-excavation')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('professional-excavation')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    
    <div class="disclaimer">
      <strong>‚öñÔ∏è Professional Disclaimer:</strong> This calculator provides ROM estimates based on OSHA 29 CFR 1926 Subpart P (Excavations) safety standards and industry best practices. Calculations include soil classification requirements, protective systems, and safety factors. Calculations are for preliminary planning only and do not substitute for professional excavation engineering or competent person site assessment. All excavations 5+ feet deep require protective systems per OSHA regulations. Local utility marking (Call 811), permits, and soil testing may be required. A competent person must inspect excavations daily and after weather events. Actual soil conditions, groundwater, and site-specific hazards significantly affect costs and safety requirements.
    </div>
  </div>

  <!-- LABOR CALCULATOR -->
  <div id="labor-calc" class="calculator-panel" data-calc="labor">
    <div class="calc-intro">
      <h2>üë∑ Professional Labor Calculator</h2>
      <p>Advanced crew optimization algorithms with productivity factors, professional wage calculations, regional adjustments, and comprehensive risk assessment.</p>
    </div>
    
    <div class="calc-grid">
      <div class="input-section">
        <h3>Project Information</h3>
        
        <div class="input-group">
          <label>Project Type</label>
          <select id="labor-project-type">
            <option value="residential-new">Residential New Construction</option>
            <option value="residential-remodel" selected>Residential Remodel</option>
            <option value="commercial-new">Commercial New Construction</option>
            <option value="commercial-tenant">Commercial Tenant Improvement</option>
            <option value="industrial">Industrial Construction</option>
            <option value="infrastructure">Infrastructure/Civil</option>
            <option value="specialty">Specialty Construction</option>
            <option value="maintenance">Maintenance/Service</option>
          </select>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Project Value</label>
            <select id="labor-project-value">
              <option value="small">Small (< $50k)</option>
              <option value="medium" selected>Medium ($50k - $500k)</option>
              <option value="large">Large ($500k - $5M)</option>
              <option value="major">Major (> $5M)</option>
            </select>
          </div>
          <div class="input-group">
            <label>Geographic Region</label>
            <select id="labor-region">
              <option value="rural">Rural Area</option>
              <option value="suburban" selected>Suburban</option>
              <option value="urban">Urban Area</option>
              <option value="metro">Major Metro Area</option>
              <option value="high-cost">High-Cost Area (SF, NY, etc.)</option>
            </select>
          </div>
        </div>
        
        <h3>Crew Composition</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Project Manager</label>
            <input type="number" id="labor-pm" value="0.5" min="0" max="2" step="0.5">
          </div>
          <div class="input-group">
            <label>Foreman/Supervisor</label>
            <input type="number" id="labor-foreman" value="1" min="0" max="3" step="0.5">
          </div>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Skilled Tradesmen</label>
            <input type="number" id="labor-skilled" value="4" min="0" max="20">
          </div>
          <div class="input-group">
            <label>Semi-Skilled Workers</label>
            <input type="number" id="labor-semi-skilled" value="2" min="0" max="15">
          </div>
        </div>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>General Laborers</label>
            <input type="number" id="labor-laborers" value="2" min="0" max="20">
          </div>
          <div class="input-group">
            <label>Apprentices</label>
            <input type="number" id="labor-apprentices" value="1" min="0" max="10">
          </div>
        </div>
        
        <h3>Schedule & Productivity</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Estimated Hours</label>
            <input type="number" id="labor-base-hours" value="320" min="1">
          </div>
          <div class="input-group">
            <label>Work Schedule</label>
            <select id="labor-schedule">
              <option value="normal" selected>Normal (8 hrs/day)</option>
              <option value="extended">Extended (10 hrs/day)</option>
              <option value="overtime">Overtime (50+ hrs/week)</option>
              <option value="double-shift">Double Shift</option>
              <option value="weekend">Weekend Work</option>
              <option value="night">Night Shift</option>
            </select>
          </div>
        </div>
        
        <div class="input-group">
          <label>Productivity Factors</label>
          <select id="labor-productivity">
            <option value="excellent">Excellent (20% above average)</option>
            <option value="good">Good (10% above average)</option>
            <option value="average" selected>Average (baseline)</option>
            <option value="below">Below Average (15% below)</option>
            <option value="poor">Poor (30% below average)</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Seasonality</label>
          <select id="labor-season">
            <option value="peak">Peak Season (Spring/Summer)</option>
            <option value="normal" selected>Normal Season</option>
            <option value="slow">Slow Season (Winter)</option>
            <option value="emergency">Emergency/Rush Work</option>
          </select>
        </div>
        
        <div class="input-group">
          <label>Project Complexity</label>
          <select id="labor-complexity">
            <option value="simple">Simple/Repetitive Work</option>
            <option value="standard" selected>Standard Complexity</option>
            <option value="complex">Complex/Technical Work</option>
            <option value="specialty">Specialty/Custom Work</option>
          </select>
        </div>
        
        <h3>Risk & Quality Factors</h3>
        
        <div class="input-group-row">
          <div class="input-group">
            <label>Safety Requirements</label>
            <select id="labor-safety">
              <option value="standard">Standard Safety</option>
              <option value="enhanced" selected>Enhanced Safety</option>
              <option value="high-risk">High-Risk Work</option>
              <option value="specialty">Specialty Safety (Confined Space, etc.)</option>
            </select>
          </div>
          <div class="input-group">
            <label>Quality Level</label>
            <select id="labor-quality">
              <option value="basic">Basic/Minimum Quality</option>
              <option value="standard" selected>Standard Quality</option>
              <option value="high">High Quality/Custom</option>
              <option value="premium">Premium/Luxury Quality</option>
            </select>
          </div>
        </div>
        
        <button class="btn btn-primary" data-action="calculate" onclick="calculateAdvancedLabor()">üßÆ Calculate Professional Labor</button>
      </div>
      
      <div class="results-section">
        <h3>üìä Professional Crew Analysis</h3>
        <div class="result-box">
          <div>Total Crew Size:</div>
          <div class="result-main" id="labor-crew-size">0</div>
          <div style="font-size:0.9rem;color:#6b7280;">Full-time equivalent workers</div>
        </div>
        
        <div class="result-box">
          <div>Optimized Duration:</div>
          <div class="result-main" id="labor-duration">0 days</div>
          <div style="font-size:0.9rem;color:#6b7280;">Including productivity adjustments</div>
        </div>
        
        <h4>üìã Crew Breakdown & Wages</h4>
        <div class="result-row">
          <span>Project Management:</span>
          <span id="labor-pm-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Supervision:</span>
          <span id="labor-supervision-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Skilled Trades:</span>
          <span id="labor-skilled-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Semi-Skilled Workers:</span>
          <span id="labor-semi-cost">$0</span>
        </div>
        <div class="result-row">
          <span>General Labor:</span>
          <span id="labor-general-cost">$0</span>
        </div>
        <div class="result-row">
          <span>Apprentices:</span>
          <span id="labor-apprentice-cost">$0</span>
        </div>
        
        <h4>üí∞ Professional Cost Analysis</h4>
        <div class="result-row">
          <span>Base Wages:</span>
          <span id="labor-base-wages">$0</span>
        </div>
        <div class="result-row">
          <span>Overtime Premium:</span>
          <span id="labor-overtime">$0</span>
        </div>
        <div class="result-row">
          <span>Payroll Taxes (FICA, FUTA, SUTA):</span>
          <span id="labor-taxes">$0</span>
        </div>
        <div class="result-row">
          <span>Workers' Compensation:</span>
          <span id="labor-workers-comp">$0</span>
        </div>
        <div class="result-row">
          <span>General Liability:</span>
          <span id="labor-liability">$0</span>
        </div>
        <div class="result-row">
          <span>Benefits & Health Insurance:</span>
          <span id="labor-benefits">$0</span>
        </div>
        <div class="result-row">
          <span>Equipment & Tools:</span>
          <span id="labor-equipment">$0</span>
        </div>
        <div class="result-row">
          <span>Safety & Training:</span>
          <span id="labor-safety-cost">$0</span>
        </div>
        <div class="result-row">
          <strong>Total Labor Cost:</strong>
          <strong id="labor-total-cost">$0</strong>
        </div>
        
        <h4>üìä Productivity Analysis</h4>
        <div class="result-row">
          <span>Base Productivity:</span>
          <span id="labor-base-productivity">100%</span>
        </div>
        <div class="result-row">
          <span>Adjusted Productivity:</span>
          <span id="labor-adj-productivity">100%</span>
        </div>
        <div class="result-row">
          <span>Effective Hours:</span>
          <span id="labor-effective-hours">0 hrs</span>
        </div>
        <div class="result-row">
          <span>Schedule Risk:</span>
          <span id="labor-schedule-risk">Low</span>
        </div>
        
        <h4>üîß Resource Optimization</h4>
        <div class="result-row">
          <span>Cost per Hour:</span>
          <span id="labor-cost-per-hour">$0</span>
        </div>
        <div class="result-row">
          <span>Crew Efficiency Rating:</span>
          <span id="labor-efficiency">Standard</span>
        </div>
        <div class="result-row">
          <span>Regional Cost Factor:</span>
          <span id="labor-regional-factor">1.0x</span>
        </div>
        
        <div class="actions">
          <button class="btn btn-secondary" onclick="saveCalc('professional-labor')">üíæ Save</button>
          <button class="btn btn-secondary" onclick="exportCalc('professional-labor')">üìä Export</button>
          <button class="btn btn-secondary" onclick="shareCalc('professional-labor')">üîó Share</button>
          <button class="btn btn-secondary" onclick="printCalc()">üñ®Ô∏è Print</button>
        </div>
      </div>
    </div>
    
    <div class="disclaimer">
      <strong>‚öñÔ∏è Professional Disclaimer:</strong> This calculator provides ROM estimates based on industry-standard labor productivity rates, regional wage data, and crew optimization algorithms. Calculations include professional wage scales, payroll burden, insurance costs, and productivity adjustments. Estimates are for preliminary planning only and do not substitute for professional construction management or detailed labor analysis. Actual wage rates, productivity, and project conditions vary significantly by location, season, project complexity, and market conditions. Union requirements, prevailing wage laws, and local labor market conditions significantly affect actual costs. Professional contractors should verify all calculations against current market rates and project-specific conditions.
    </div>
  </div>

</div>

<script>
// EMBEDDED JAVASCRIPT - ZERO EXTERNAL DEPENDENCIES
const calculatorData = {};
let activeCalculator = 'concrete';

// CORE FUNCTIONS
function showCalculator(calc) {
  // Update active calculator
  activeCalculator = calc;
  
  // Hide all panels
  document.querySelectorAll('.calculator-panel').forEach(panel => {
    panel.classList.remove('active');
  });
  document.querySelectorAll('.tab-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  
  // Show selected panel
  const panel = document.getElementById(calc + '-calc');
  if (panel) {
    panel.classList.add('active');
    event.target.classList.add('active');
    
    // Track usage
    trackCalculatorUse(calc);
  }
}

// CONCRETE CALCULATOR
function calculateConcrete() {
  try {
    const type = document.getElementById('concrete-type').value;
    const length = parseFloat(document.getElementById('concrete-length').value) || 0;
    const width = parseFloat(document.getElementById('concrete-width').value) || 0;
    const thickness = parseFloat(document.getElementById('concrete-thickness').value) || 0;
    const psi = document.getElementById('concrete-psi').value;
    const rebar = document.getElementById('concrete-rebar').value;
    const delivery = document.getElementById('concrete-delivery').value;
    
    // Validation
    if (length <= 0 || width <= 0 || thickness <= 0) {
      showNotification('Please enter valid dimensions');
      return;
    }
    
    // Waste factors by pour type
    const wasteFactors = {
      slab: 1.05, footing: 1.08, wall: 1.10, 
      stairs: 1.15, driveway: 1.07
    };
    
    // PSI pricing
    const psiPrices = {
      2500: 125, 3000: 130, 3500: 135, 
      4000: 145, 4500: 155, 5000: 165
    };
    
    // Rebar pricing per sq ft
    const rebarPrices = {
      none: 0, light: 0.65, standard: 0.85, heavy: 1.25
    };
    
    // Delivery costs
    const deliveryCosts = {
      truck: 0, pump: 150, crane: 200
    };
    
    // Calculate volumes
    const sqft = length * width;
    const cubicFeet = sqft * (thickness / 12);
    const cubicYards = cubicFeet / 27;
    const totalYards = cubicYards * wasteFactors[type];
    
    // Calculate costs
    const materialCost = totalYards * psiPrices[psi];
    const rebarCost = sqft * rebarPrices[rebar];
    const laborCost = totalYards * 65; // $65/yard labor
    const formsCost = (2 * (length + width)) * 2.50; // Forms rental
    const deliveryCost = deliveryCosts[delivery];
    const totalCost = materialCost + rebarCost + laborCost + formsCost + deliveryCost;
    
    // Update display
    document.getElementById('concrete-sqft').textContent = sqft.toFixed(0) + ' sq ft';
    document.getElementById('concrete-volume').textContent = totalYards.toFixed(2) + ' cu yd';
    document.getElementById('concrete-material').textContent = '$' + materialCost.toFixed(0);
    document.getElementById('concrete-rebar-cost').textContent = '$' + rebarCost.toFixed(0);
    document.getElementById('concrete-labor').textContent = '$' + laborCost.toFixed(0);
    document.getElementById('concrete-forms').textContent = '$' + formsCost.toFixed(0);
    document.getElementById('concrete-delivery-cost').textContent = '$' + deliveryCost.toFixed(0);
    document.getElementById('concrete-total').textContent = '$' + totalCost.toFixed(0);
    
    // Store for save/export
    calculatorData.concrete = {
      type: 'Concrete Calculator',
      timestamp: new Date().toISOString(),
      inputs: {type, length, width, thickness, psi, rebar, delivery},
      results: {
        sqft: sqft,
        volume: totalYards, 
        total: totalCost, 
        material: materialCost, 
        rebar: rebarCost, 
        labor: laborCost,
        forms: formsCost,
        delivery: deliveryCost
      }
    };
    
    showNotification('Concrete calculation complete!');
    
  } catch(error) {
    console.error('Concrete calculation error:', error);
    showNotification('Calculation error - please check inputs');
  }
}

// FRAMING CALCULATOR
function calculateFraming() {
  try {
    const length = parseFloat(document.getElementById('framing-length').value) || 0;
    const height = parseFloat(document.getElementById('framing-height').value) || 0;
    const spacing = Math.max(parseFloat(document.getElementById('framing-spacing').value) || 16, 1);
    const grade = document.getElementById('framing-grade').value;
    const openings = parseInt(document.getElementById('framing-openings').value) || 0;
    const headers = document.getElementById('framing-headers').value;
    
    if (length <= 0 || height <= 0) {
      showNotification('Please enter valid dimensions');
      return;
    }
    
    // Pricing by grade
    const prices = {
      standard: 8, premium: 12,
      standard6: 12, premium6: 18
    };
    
    // Calculate stud count
    const studCount = Math.ceil((length * 12 / spacing) + 1);
    const adjustedStuds = Math.max(studCount - openings, 0); // Subtract for openings
    const totalStuds = Math.ceil(adjustedStuds * 1.1); // 10% waste
    
    // Calculate plates (top and bottom)
    const plates = Math.ceil(length / 8) * 3; // 8ft lengths, 3 pieces per section
    
    // Calculate headers
    const headerCount = headers === 'yes' ? openings : 0;
    const headerCost = headerCount * 25;
    
    // Calculate costs
    const materialCost = (totalStuds * prices[grade]) + (plates * prices[grade]);
    const laborCost = (length * height) * 3.50; // $3.50 per sq ft
    const totalCost = materialCost + headerCost + laborCost;
    const totalLinear = (totalStuds + plates) * 8;
    
    // Update display
    document.getElementById('framing-studs').textContent = totalStuds;
    document.getElementById('framing-plates').textContent = plates + ' pieces';
    document.getElementById('framing-headers-count').textContent = headerCount;
    document.getElementById('framing-linear').textContent = totalLinear + ' ft';
    document.getElementById('framing-material').textContent = '$' + (materialCost + headerCost).toFixed(0);
    document.getElementById('framing-labor').textContent = '$' + laborCost.toFixed(0);
    document.getElementById('framing-total').textContent = '$' + totalCost.toFixed(0);
    
    // Store data
    calculatorData.framing = {
      type: 'Framing Calculator',
      timestamp: new Date().toISOString(),
      inputs: {length, height, spacing, grade, openings, headers},
      results: {
        studs: totalStuds, 
        plates, 
        headers: headerCount,
        linear: totalLinear, 
        material: materialCost + headerCost,
        labor: laborCost,
        total: totalCost
      }
    };
    
    showNotification('Framing calculation complete!');
    
  } catch(error) {
    console.error('Framing calculation error:', error);
    showNotification('Calculation error - please check inputs');
  }
}

// PAINT CALCULATOR
function calculatePaint() {
  try {
    const totalArea = parseFloat(document.getElementById('paint-area').value) || 0;
    const openings = parseFloat(document.getElementById('paint-openings').value) || 0;
    const texture = document.getElementById('paint-texture').value;
    const coats = parseInt(document.getElementById('paint-coats').value) || 1;
    const quality = document.getElementById('paint-quality').value;
    const primer = document.getElementById('paint-primer').value;
    
    if (totalArea <= 0) {
      showNotification('Please enter valid area');
      return;
    }
    
    // Coverage by texture (sq ft per gallon)
    const coverage = {
      smooth: 400, light: 350, medium: 300, heavy: 250
    };
    
    // Paint prices
    const paintPrices = {
      basic: 35, premium: 55, ultra: 75
    };
    
    // Calculate paintable area
    const netArea = totalArea - openings;
    
    // Calculate paint needed  
    const textureCoverage = coverage[texture] || 400; // Default to smooth coverage
    const paintNeeded = (netArea * coats) / textureCoverage;
    const paintGallons = Math.max(1, Math.ceil(paintNeeded * 1.1)); // 10% waste, minimum 1 gallon
    
    // Calculate primer
    const primerGallons = primer === 'yes' ? Math.ceil(netArea / textureCoverage) : 0;
    
    // Calculate costs
    const paintCost = paintGallons * paintPrices[quality];
    const primerCost = primerGallons * 45; // $45/gal primer
    const laborCost = netArea * 1.50 * coats; // $1.50 per sq ft per coat
    const totalCost = paintCost + primerCost + laborCost;
    
    // Update display
    document.getElementById('paint-net-area').textContent = netArea + ' sq ft';
    document.getElementById('paint-gallons').textContent = paintGallons + ' gallons';
    document.getElementById('paint-primer-gallons').textContent = primerGallons + ' gallons';
    document.getElementById('paint-cost').textContent = '$' + paintCost;
    document.getElementById('paint-primer-cost').textContent = '$' + primerCost;
    document.getElementById('paint-labor').textContent = '$' + laborCost.toFixed(0);
    document.getElementById('paint-total').textContent = '$' + totalCost.toFixed(0);
    
    // Store data
    calculatorData.paint = {
      type: 'Paint Calculator',
      timestamp: new Date().toISOString(),
      inputs: {totalArea, openings, texture, coats, quality, primer},
      results: {
        netArea,
        paintGallons,
        primerGallons, 
        paintCost,
        primerCost,
        labor: laborCost,
        total: totalCost
      }
    };
    
    // Also set for email export compatibility
    window.lastCalculation = {
      type: 'paint',
      title: 'Paint Calculator Results',
      inputs: {
        wallArea: totalArea,
        openings: openings,
        coats: coats,
        texture: texture,
        quality: quality,
        primer: primer
      },
      results: {
        paintableArea: netArea,
        gallons: paintGallons,
        primerGallons: primerGallons,
        paintCost: paintCost,
        primerCost: primerCost,
        laborCost: laborCost,
        totalCost: totalCost
      },
      timestamp: new Date().toISOString()
    };
    
    showNotification('Paint calculation complete!');
    
  } catch(error) {
    console.error('Paint calculation error:', error);
    showNotification('Calculation error - please check inputs');
  }
}

// ROOFING CALCULATOR
// PROFESSIONAL ROOFING CALCULATOR (IRC/IBC Compliant)
function calculateAdvancedRoofing() {
  try {
    // Get input values
    const buildingType = document.getElementById('roof-building-type').value;
    const length = parseFloat(document.getElementById('roof-length').value) || 0;
    const width = parseFloat(document.getElementById('roof-width').value) || 0;
    const climateZone = document.getElementById('roof-climate-zone').value;
    const pitch = parseFloat(document.getElementById('roof-pitch').value) || 6;
    const system = document.getElementById('roof-system').value;
    const windSpeed = parseFloat(document.getElementById('roof-wind-speed').value) || 110;
    const snowLoad = parseFloat(document.getElementById('roof-snow-load').value) || 20;
    const exposure = document.getElementById('roof-exposure').value;
    const condition = document.getElementById('roof-condition').value;
    const deckType = document.getElementById('roof-deck').value;
    const complexity = document.getElementById('roof-complexity').value;
    const access = document.getElementById('roof-access').value;
    
    if (length <= 0 || width <= 0) {
      showNotification('Please enter valid roof dimensions');
      return;
    }
    
    // IRC/IBC Professional Material Specifications
    const roofingSystems = {
      'asphalt-3tab': { name: '3-Tab Asphalt Shingles', cost: 140, weight: 2.2, warranty: 20, fireRating: 'Class A' },
      'asphalt-arch': { name: 'Architectural Shingles', cost: 220, weight: 3.2, warranty: 30, fireRating: 'Class A' },
      'asphalt-premium': { name: 'Premium Designer Shingles', cost: 420, weight: 4.5, warranty: 50, fireRating: 'Class A' },
      'metal-panel': { name: 'Metal Panel System', cost: 580, weight: 1.5, warranty: 40, fireRating: 'Class A' },
      'metal-shingle': { name: 'Metal Shingle System', cost: 720, weight: 1.8, warranty: 50, fireRating: 'Class A' },
      'tpo': { name: 'TPO Single Ply', cost: 320, weight: 0.6, warranty: 20, fireRating: 'Class A' },
      'epdm': { name: 'EPDM Membrane', cost: 280, weight: 0.4, warranty: 20, fireRating: 'Class A' },
      'modified-bitumen': { name: 'Modified Bitumen', cost: 350, weight: 4.0, warranty: 15, fireRating: 'Class A' },
      'built-up': { name: 'Built-Up Roof (BUR)', cost: 420, weight: 5.5, warranty: 20, fireRating: 'Class A' },
      'tile-clay': { name: 'Clay Tile', cost: 680, weight: 8.5, warranty: 50, fireRating: 'Class A' },
      'tile-concrete': { name: 'Concrete Tile', cost: 520, weight: 9.2, warranty: 30, fireRating: 'Class A' },
      'slate': { name: 'Natural Slate', cost: 1200, weight: 8.0, warranty: 100, fireRating: 'Class A' },
      'wood-shake': { name: 'Wood Shake', cost: 850, weight: 3.2, warranty: 25, fireRating: 'Class C' }
    };
    
    // Calculate pitch multiplier (more accurate)
    let pitchMultiplier = 1.0;
    if (pitch <= 0.5) pitchMultiplier = 1.0;
    else if (pitch <= 2) pitchMultiplier = 1.06;
    else if (pitch <= 4) pitchMultiplier = 1.15;
    else if (pitch <= 6) pitchMultiplier = 1.25;
    else if (pitch <= 8) pitchMultiplier = 1.35;
    else if (pitch <= 12) pitchMultiplier = 1.41;
    else pitchMultiplier = 1.60;
    
    // Complexity multipliers
    const complexityMultipliers = {
      'simple': 1.0,
      'moderate': 1.15,
      'complex': 1.35,
      'very-complex': 1.55
    };
    
    const accessMultipliers = {
      'easy': 1.0,
      'moderate': 1.15,
      'difficult': 1.35,
      'extreme': 1.65
    };
    
    // ASCE 7 Wind Load Calculation
    const exposureFactors = { 'B': 0.85, 'C': 1.0, 'D': 1.15 };
    const windPressure = ((windSpeed / 100) ** 2) * 0.00256 * exposureFactors[exposure];
    const designWindLoad = windPressure * 1.6; // Ultimate design wind load
    
    // Calculate areas with waste factors
    const baseArea = length * width;
    const pitchedArea = baseArea * pitchMultiplier;
    const wasteMultiplier = 1.10 + (complexity === 'complex' ? 0.05 : complexity === 'very-complex' ? 0.10 : 0);
    const totalArea = pitchedArea * wasteMultiplier;
    const squares = totalArea / 100;
    
    // Linear measurements
    const ridgeLength = Math.max(length, width);
    const eaveLength = 2 * Math.max(length, width);
    const rakeLength = 2 * Math.min(length, width) * Math.sqrt(1 + (pitch/12)**2);
    
    // Professional cost calculations
    const selectedSystem = roofingSystems[system];
    const materialCost = squares * selectedSystem.cost;
    
    // Underlayment system (varies by climate and system)
    let underlaymentCost = 0;
    if (climateZone <= 4 || windSpeed >= 120) {
      underlaymentCost = totalArea * 0.85; // Ice & Water Shield
    } else {
      underlaymentCost = totalArea * 0.45; // Synthetic underlayment
    }
    
    // Flashing and trim
    const flashingCost = (ridgeLength * 8) + (eaveLength * 4) + (rakeLength * 6);
    
    // Ventilation system
    const ventilationCost = (totalArea / 150) * 45; // 1 sq ft vent per 150 sq ft
    
    // Tear-off and disposal
    let tearoffCost = 0;
    if (condition === 'tearoff-1') tearoffCost = squares * 65;
    else if (condition === 'tearoff-2') tearoffCost = squares * 85;
    else if (condition === 'tearoff-3') tearoffCost = squares * 110;
    
    // Equipment and tools
    const equipmentCost = squares * 25;
    
    // Professional labor calculation
    let baseLaborRate = 280; // Per square
    if (selectedSystem.weight > 6) baseLaborRate *= 1.3; // Heavy materials
    if (pitch > 8) baseLaborRate *= 1.2; // Steep pitch
    
    const laborCost = squares * baseLaborRate * complexityMultipliers[complexity] * accessMultipliers[access];
    
    // Permits and inspection
    const permitCost = Math.max(150, totalArea * 0.15);
    
    // Total project cost
    const totalCost = materialCost + underlaymentCost + flashingCost + ventilationCost + 
                     tearoffCost + equipmentCost + laborCost + permitCost;
    
    // Determine fastener requirements
    let fastenerReq = 'Standard (6 per shingle)';
    if (windSpeed >= 130) fastenerReq = 'Enhanced (8 per shingle + sealing)';
    else if (windSpeed >= 110) fastenerReq = 'High-wind (6 per + sealing)';
    
    // Attachment method
    let attachmentMethod = 'Mechanical Fastening';
    if (system.includes('membrane')) attachmentMethod = 'Fully Adhered';
    else if (system.includes('metal')) attachmentMethod = 'Concealed Fastening';
    
    // Update display elements
    document.getElementById('roof-total-area').textContent = totalArea.toFixed(0) + ' sq ft';
    document.getElementById('roof-wind-load').textContent = designWindLoad.toFixed(1) + ' psf';
    document.getElementById('roof-squares').textContent = squares.toFixed(2);
    document.getElementById('roof-underlayment-area').textContent = totalArea.toFixed(0) + ' sq ft';
    document.getElementById('roof-ridge-length').textContent = ridgeLength.toFixed(0) + ' LF';
    document.getElementById('roof-eave-length').textContent = eaveLength.toFixed(0) + ' LF';
    document.getElementById('roof-rake-length').textContent = rakeLength.toFixed(0) + ' LF';
    
    document.getElementById('roof-material-cost').textContent = '$' + materialCost.toFixed(0);
    document.getElementById('roof-underlayment-cost').textContent = '$' + underlaymentCost.toFixed(0);
    document.getElementById('roof-flashing-cost').textContent = '$' + flashingCost.toFixed(0);
    document.getElementById('roof-ventilation-cost').textContent = '$' + ventilationCost.toFixed(0);
    document.getElementById('roof-tearoff-cost').textContent = '$' + tearoffCost.toFixed(0);
    document.getElementById('roof-equipment-cost').textContent = '$' + equipmentCost.toFixed(0);
    document.getElementById('roof-labor-cost').textContent = '$' + laborCost.toFixed(0);
    document.getElementById('roof-permit-cost').textContent = '$' + permitCost.toFixed(0);
    document.getElementById('roof-total-cost').textContent = '$' + totalCost.toFixed(0);
    
    document.getElementById('roof-fasteners').textContent = fastenerReq;
    document.getElementById('roof-attachment').textContent = attachmentMethod;
    document.getElementById('roof-warranty').textContent = selectedSystem.warranty + ' years';
    document.getElementById('roof-fire-rating').textContent = selectedSystem.fireRating;
    
    // Store professional data
    calculatorData['professional-roofing'] = {
      type: 'Professional Roofing Calculator',
      timestamp: new Date().toISOString(),
      inputs: {
        buildingType, length, width, climateZone, pitch, system, windSpeed, 
        snowLoad, exposure, condition, deckType, complexity, access
      },
      results: {
        totalArea, squares, windLoad: designWindLoad,
        materials: materialCost, underlayment: underlaymentCost, flashing: flashingCost,
        ventilation: ventilationCost, tearoff: tearoffCost, equipment: equipmentCost,
        labor: laborCost, permits: permitCost, total: totalCost,
        specifications: { fasteners: fastenerReq, attachment: attachmentMethod, 
                        warranty: selectedSystem.warranty, fireRating: selectedSystem.fireRating }
      }
    };
    
    showNotification('Professional roofing analysis complete!');
    
  } catch(error) {
    console.error('Professional roofing calculation error:', error);
    showNotification('Calculation error - please check inputs');
  }
}

// ADVANCED ELECTRICAL LOAD CALCULATOR (NEC Article 220)
function calculateAdvancedElectrical() {
  try {
    // Get input values
    const building = document.getElementById('elec-building').value;
    const sqft = parseFloat(document.getElementById('elec-sqft').value) || 0;
    const units = parseInt(document.getElementById('elec-units').value) || 1;
    const smallAppliance = parseInt(document.getElementById('elec-small-appliance').value) || 2;
    const laundry = parseInt(document.getElementById('elec-laundry').value) || 1;
    const range = parseFloat(document.getElementById('elec-range').value) || 0;
    const dryer = parseFloat(document.getElementById('elec-dryer').value) || 0;
    const waterHeater = parseFloat(document.getElementById('elec-water-heater').value) || 0;
    const acTons = parseFloat(document.getElementById('elec-ac-tons').value) || 0;
    const heatPump = parseFloat(document.getElementById('elec-heat-pump').value) || 0;
    const heat = parseFloat(document.getElementById('elec-heat').value) || 0;
    const motors = parseFloat(document.getElementById('elec-motors').value) || 0;
    const voltage = document.getElementById('elec-voltage').value;
    const serviceType = document.getElementById('elec-service-type').value;
    const distance = parseFloat(document.getElementById('elec-distance').value) || 10;

    if (sqft <= 0) {
      showNotification('Please enter valid floor area');
      return;
    }

    // NEC 220 Load Calculation Data
    const necData = {
      dwelling: {lighting: 3, demand: {first3000: 1.0, next117000: 0.35, over120000: 0.25}},
      office: {lighting: 3.5, demand: {first50000: 1.0, over50000: 0.75}},
      retail: {lighting: 3.0, demand: {first12500: 1.0, over12500: 0.5}},
      restaurant: {lighting: 2.0, demand: {first20000: 1.0, over20000: 0.5}},
      warehouse: {lighting: 0.25, demand: {all: 1.0}},
      school: {lighting: 3.0, demand: {all: 1.0}},
      hospital: {lighting: 2.0, demand: {all: 1.0}}
    };

    // Step 1: General Lighting Load (NEC 220.12)
    const buildingData = necData[building];
    const lightingWattsPerSqft = buildingData.lighting;
    let generalLighting = sqft * lightingWattsPerSqft * units;

    // Apply demand factors for lighting
    let lightingDemand = 0;
    if (building === 'dwelling') {
      if (generalLighting <= 3000) {
        lightingDemand = generalLighting;
      } else if (generalLighting <= 120000) {
        lightingDemand = 3000 + ((generalLighting - 3000) * 0.35);
      } else {
        lightingDemand = 3000 + (117000 * 0.35) + ((generalLighting - 120000) * 0.25);
      }
    } else {
      lightingDemand = generalLighting; // Commercial buildings - check specific demand factors
    }

    // Step 2: Small Appliance and Laundry Circuits (NEC 220.52)
    const smallApplianceLoad = smallAppliance * 1500 * units; // 1500W per circuit
    const laundryLoad = laundry * 1500 * units; // 1500W if required

    // Step 3: Range Load with Demand Factor (NEC 220.55, Table 220.55)
    let rangeLoad = 0;
    if (range > 0) {
      if (range <= 12) {
        rangeLoad = 8000; // Standard demand for ranges up to 12kW
      } else {
        rangeLoad = 8000 + ((range - 12) * 400); // Add 400W for each kW over 12
      }
    }

    // Step 4: Other Appliances (NEC 220.53)
    const dryerLoad = dryer * 1000; // Convert kW to watts
    const waterHeaterLoad = waterHeater * 1000;
    const heatLoad = heat * 1000;

    // Step 5: HVAC Load (NEC 220.60)
    let hvacLoad = 0;
    if (acTons > 0) {
      hvacLoad = Math.max(hvacLoad, acTons * 3500); // ~3500W per ton AC
    }
    if (heatPump > 0) {
      hvacLoad = Math.max(hvacLoad, heatPump * 4000); // ~4000W per ton heat pump
    }
    if (heatLoad > 0) {
      hvacLoad = Math.max(hvacLoad, heatLoad); // Use largest of heating or cooling
    }

    // Step 6: Motor Loads (NEC 220.50, 430.24)
    let motorLoad = 0;
    if (motors > 0) {
      motorLoad = motors * 746 * 1.25; // HP to watts, 125% of largest motor
    }

    // Calculate total connected load
    const totalConnected = generalLighting + smallApplianceLoad + laundryLoad + 
                          rangeLoad + dryerLoad + waterHeaterLoad + hvacLoad + motorLoad;

    // Apply NEC 220.87 Optional Calculation for Dwellings (if applicable)
    let calculatedLoad = 0;
    if (building === 'dwelling' && units === 1) {
      // First 10kW at 100%
      calculatedLoad = Math.min(10000, lightingDemand + smallApplianceLoad + laundryLoad);
      // Remainder at 40%
      if ((lightingDemand + smallApplianceLoad + laundryLoad) > 10000) {
        calculatedLoad += ((lightingDemand + smallApplianceLoad + laundryLoad) - 10000) * 0.4;
      }
      // Add other loads
      calculatedLoad += rangeLoad + dryerLoad + waterHeaterLoad + hvacLoad + motorLoad;
    } else {
      // Standard calculation
      calculatedLoad = lightingDemand + smallApplianceLoad + laundryLoad + 
                      rangeLoad + dryerLoad + waterHeaterLoad + hvacLoad + motorLoad;
    }

    // Determine service size based on calculated load
    const serviceVoltage = voltage === '120240' ? 240 : (voltage === '120208' ? 208 : 480);
    const calculatedAmps = calculatedLoad / serviceVoltage;
    
    // Standard service sizes
    const serviceSizes = [100, 125, 150, 200, 225, 400, 600, 800, 1200];
    const requiredService = serviceSizes.find(size => size >= calculatedAmps) || 1200;

    // Conductor sizing (NEC Table 310.15(B)(16))
    const conductorSizing = {
      100: {copper: '1 AWG', aluminum: '1/0 AWG'},
      125: {copper: '1/0 AWG', aluminum: '2/0 AWG'},
      150: {copper: '2/0 AWG', aluminum: '4/0 AWG'},
      200: {copper: '2/0 AWG', aluminum: '4/0 AWG'},
      225: {copper: '4/0 AWG', aluminum: '250 kcmil'},
      400: {copper: '500 kcmil', aluminum: '750 kcmil'},
      600: {copper: '1200 kcmil', aluminum: '1500 kcmil'}
    };

    const conductor = conductorSizing[requiredService]?.copper || '500 kcmil';
    
    // Grounding conductor sizing (NEC Table 250.122)
    const groundingConductor = {
      100: '#8', 125: '#8', 150: '#6', 200: '#6', 
      225: '#4', 400: '#2', 600: '#1/0'
    }[requiredService] || '#2/0';

    // Conduit sizing (rough estimate based on conductor size)
    const conduitSize = requiredService <= 200 ? '2"' : (requiredService <= 400 ? '2.5"' : '3"');

    // Cost calculations
    const panelCosts = {100: 1200, 125: 1400, 150: 1600, 200: 2000, 225: 2400, 400: 4500, 600: 7500};
    const panelCost = panelCosts[requiredService] || 8000;
    
    const conductorCostPerFoot = requiredService <= 200 ? 12 : (requiredService <= 400 ? 25 : 45);
    const conductorCost = conductorCostPerFoot * distance;
    
    const groundingCost = distance * 3; // $3/foot for grounding
    const laborCost = requiredService * 15; // $15 per amp for installation
    const permitCost = Math.max(150, requiredService * 0.75); // Minimum $150 permit

    const totalCost = panelCost + conductorCost + groundingCost + laborCost + permitCost;

    // Update display elements
    document.getElementById('elec-service').textContent = requiredService + ' Amps';
    document.getElementById('elec-conductor').textContent = conductor;
    
    document.getElementById('elec-lighting-load').textContent = Math.round(lightingDemand) + 'W';
    document.getElementById('elec-appliance-load').textContent = smallApplianceLoad + 'W';
    document.getElementById('elec-laundry-load').textContent = laundryLoad + 'W';
    document.getElementById('elec-range-load').textContent = rangeLoad + 'W';
    document.getElementById('elec-hvac-load').textContent = Math.round(hvacLoad) + 'W';
    document.getElementById('elec-other-load').textContent = Math.round(dryerLoad + waterHeaterLoad + motorLoad) + 'W';
    document.getElementById('elec-total-load').textContent = Math.round(totalConnected) + 'W';
    document.getElementById('elec-calc-load').textContent = Math.round(calculatedLoad) + 'W';

    document.getElementById('elec-panel-cost').textContent = '$' + panelCost.toLocaleString();
    document.getElementById('elec-conductor-cost').textContent = '$' + Math.round(conductorCost).toLocaleString();
    document.getElementById('elec-ground-cost').textContent = '$' + Math.round(groundingCost).toLocaleString();
    document.getElementById('elec-labor-cost').textContent = '$' + laborCost.toLocaleString();
    document.getElementById('elec-permit-cost').textContent = '$' + Math.round(permitCost).toLocaleString();
    document.getElementById('elec-total-cost').textContent = '$' + Math.round(totalCost).toLocaleString();

    document.getElementById('elec-conduit-size').textContent = conduitSize;
    document.getElementById('elec-ground-conductor').textContent = groundingConductor;
    document.getElementById('elec-main-breaker').textContent = requiredService + 'A';
    document.getElementById('elec-fault-current').textContent = '22 kA'; // Typical residential

    // Store comprehensive calculation data
    calculatorData.electrical = {
      type: 'Advanced Electrical Load Calculator',
      methodology: 'NEC Article 220',
      timestamp: new Date().toISOString(),
      inputs: {
        building, sqft, units, smallAppliance, laundry, range, dryer, 
        waterHeater, acTons, heatPump, heat, motors, voltage, serviceType, distance
      },
      calculations: {
        generalLighting, lightingDemand, smallApplianceLoad, laundryLoad,
        rangeLoad, dryerLoad, waterHeaterLoad, hvacLoad, motorLoad,
        totalConnected, calculatedLoad, calculatedAmps, requiredService
      },
      results: {
        serviceSize: requiredService,
        conductor, groundingConductor, conduitSize,
        costs: {panel: panelCost, conductor: conductorCost, grounding: groundingCost, 
                labor: laborCost, permit: permitCost, total: totalCost}
      }
    };

    showNotification('Professional electrical load calculation complete per NEC Article 220!');

  } catch(error) {
    console.error('Advanced electrical calculation error:', error);
    showNotification('Calculation error - please verify all inputs and try again');
  }
}

// DRYWALL CALCULATOR
function calculateAdvancedDrywall() {
  try {
    // Input validation
    const length = parseFloat(document.getElementById('drywall-length').value) || 0;
    const width = parseFloat(document.getElementById('drywall-width').value) || 0;
    const height = parseFloat(document.getElementById('drywall-height').value) || 0;
    const rooms = parseInt(document.getElementById('drywall-rooms').value) || 1;
    const doors = parseInt(document.getElementById('drywall-doors').value) || 0;
    const windows = parseInt(document.getElementById('drywall-windows').value) || 0;
    const customOpenings = parseFloat(document.getElementById('drywall-custom-openings').value) || 0;
    
    if (length <= 0 || width <= 0 || height <= 0) {
      showNotification('Please enter valid room dimensions');
      return;
    }
    
    // Get selections
    const projectType = document.getElementById('drywall-project-type').value;
    const constructionType = document.getElementById('drywall-construction').value;
    const thickness = document.getElementById('drywall-thickness').value;
    const boardType = document.getElementById('drywall-board-type').value;
    const finishLevel = parseInt(document.getElementById('drywall-finish-level').value);
    const jointTreatment = document.getElementById('drywall-joint-treatment').value;
    const ceiling = document.getElementById('drywall-ceiling').value;
    const complexity = document.getElementById('drywall-complexity').value;
    const access = document.getElementById('drywall-access').value;
    
    // Calculate areas per room
    const wallArea = 2 * (length + width) * height;
    const ceilingArea = ceiling !== 'none' ? length * width : 0;
    const grossArea = (wallArea + ceilingArea) * rooms;
    
    // Opening deductions
    const doorArea = doors * 20; // 3' x 6'8" = ~20 sq ft
    const windowArea = windows * 12; // 3' x 4' = 12 sq ft
    const totalOpenings = doorArea + windowArea + customOpenings;
    const netArea = grossArea - totalOpenings;
    
    // Material calculations
    const sheetSqFt = getSheetSize(thickness);
    const baseSheets = Math.ceil(netArea / sheetSqFt);
    
    // Waste factors by complexity
    const wasteFactors = {
      simple: 1.05,
      standard: 1.10,
      complex: 1.15,
      intricate: 1.20
    };
    
    const wasteFactor = wasteFactors[complexity] || 1.10;
    const totalSheets = Math.ceil(baseSheets * wasteFactor);
    
    // Joint compound calculation (GA-214 standards)
    const compoundGallons = calculateCompoundNeeds(netArea, finishLevel);
    
    // Tape calculation
    const linearFeetTape = calculateTapeNeeds(length, width, height, rooms);
    
    // Corner bead calculation
    const cornerFeet = calculateCornerBead(length, width, height, rooms);
    
    // Screws/fasteners (1.5 lbs per 1000 sq ft typical)
    const screwsLbs = Math.ceil((netArea * 1.5) / 1000);
    
    // Primer calculation
    const primerGallons = Math.ceil(netArea / 350); // 350 sq ft per gallon coverage
    
    // Labor calculations with productivity factors
    const installHours = calculateInstallLabor(netArea, complexity, access, ceiling);
    const finishHours = calculateFinishLabor(netArea, finishLevel, complexity);
    const totalHours = installHours + finishHours;
    
    // Crew size recommendation
    const crewSize = netArea > 1000 ? (netArea > 3000 ? '4 people' : '3 people') : '2 people';
    
    // Cost calculations
    const materialCosts = calculateDrywallMaterialCosts(
      totalSheets, thickness, boardType, compoundGallons, 
      linearFeetTape, jointTreatment, cornerFeet, screwsLbs, primerGallons
    );
    
    const laborRate = getLaborRate(projectType, finishLevel);
    const laborCost = totalHours * laborRate;
    const equipmentCost = calculateEquipmentCosts(netArea, complexity);
    const wasteCost = materialCosts.total * (wasteFactor - 1);
    const totalCost = materialCosts.total + laborCost + equipmentCost + wasteCost;
    
    // Duration estimation
    const duration = Math.ceil(totalHours / (parseInt(crewSize.split(' ')[0]) * 8));
    
    // Update display
    document.getElementById('drywall-wall-area').textContent = netArea.toFixed(0) + ' sq ft';
    document.getElementById('drywall-sheets-required').textContent = totalSheets + ' Sheets';
    
    // Material breakdown
    document.getElementById('drywall-sheets-qty').textContent = totalSheets + ' sheets';
    document.getElementById('drywall-compound-qty').textContent = compoundGallons + ' gallons';
    document.getElementById('drywall-tape-qty').textContent = linearFeetTape + ' linear ft';
    document.getElementById('drywall-corner-qty').textContent = cornerFeet + ' linear ft';
    document.getElementById('drywall-screws-qty').textContent = screwsLbs + ' lbs';
    document.getElementById('drywall-primer-qty').textContent = primerGallons + ' gallons';
    
    // Labor analysis
    document.getElementById('drywall-install-hours').textContent = installHours.toFixed(1) + ' hours';
    document.getElementById('drywall-finish-hours').textContent = finishHours.toFixed(1) + ' hours';
    document.getElementById('drywall-total-hours').textContent = totalHours.toFixed(1) + ' hours';
    document.getElementById('drywall-crew-size').textContent = crewSize;
    
    // Cost analysis
    document.getElementById('drywall-material-cost').textContent = '$' + materialCosts.total.toFixed(0);
    document.getElementById('drywall-labor-cost').textContent = '$' + laborCost.toFixed(0);
    document.getElementById('drywall-equipment-cost').textContent = '$' + equipmentCost.toFixed(0);
    document.getElementById('drywall-waste-cost').textContent = '$' + wasteCost.toFixed(0);
    document.getElementById('drywall-total-cost').textContent = '$' + totalCost.toFixed(0);
    
    // Technical specs
    document.getElementById('drywall-board-spec').textContent = 
      thickness + '" " + boardType.charAt(0).toUpperCase() + boardType.slice(1) + " Gypsum";
    document.getElementById('drywall-fastener-pattern').textContent = 
      thickness === '5/8' ? '12" O.C.' : '16" O.C.';
    document.getElementById('drywall-joint-spec').textContent = 
      'Level ' + finishLevel + ' - ' + jointTreatment + ' tape';
    document.getElementById('drywall-duration').textContent = duration + ' days';
    
    // Store calculation data
    calculatorData.drywall = {
      type: 'Professional Drywall Calculator', 
      timestamp: new Date().toISOString(),
      inputs: {
        length, width, height, rooms, doors, windows, customOpenings,
        projectType, constructionType, thickness, boardType, finishLevel,
        jointTreatment, ceiling, complexity, access
      },
      results: {
        netArea, totalSheets, totalHours, totalCost,
        materials: materialCosts, labor: laborCost
      }
    };
    
    showNotification('Professional drywall calculation complete!');
  } catch (error) {
    showNotification('Calculation error: ' + error.message, 'error');
    console.error('Drywall calculation error:', error);
  }
}

// Helper functions for drywall calculations
function getSheetSize(thickness) {
  const sheetSizes = {
    '1/4': 32, // 4x8
    '3/8': 32, // 4x8
    '1/2': 32, // 4x8
    '5/8': 32  // 4x8
  };
  return sheetSizes[thickness] || 32;
}

function calculateCompoundNeeds(area, finishLevel) {
  // Gallons per 1000 sq ft by finish level
  const compoundRates = {
    0: 0,
    1: 1.5,
    2: 2.0,
    3: 2.5,
    4: 3.0,
    5: 3.5
  };
  return Math.ceil((area * compoundRates[finishLevel]) / 1000);
}

function calculateTapeNeeds(length, width, height, rooms) {
  // Estimate linear feet of joints
  const perimeterFeet = 2 * (length + width);
  const verticalJoints = Math.ceil(perimeterFeet / 8) * height; // Vertical seams
  const horizontalJoints = perimeterFeet; // Horizontal seams
  return Math.ceil((verticalJoints + horizontalJoints) * rooms * 1.1); // 10% waste
}

function calculateCornerBead(length, width, height, rooms) {
  // Inside and outside corners
  const corners = 4 * height * rooms; // 4 vertical corners per room
  return Math.ceil(corners * 1.05); // 5% waste
}

function calculateInstallLabor(area, complexity, access, ceiling) {
  // Base hours per sq ft
  let baseRate = 0.015; // 0.015 hours per sq ft base
  
  // Complexity multipliers
  const complexityMultipliers = {
    simple: 1.0,
    standard: 1.2,
    complex: 1.5,
    intricate: 1.8
  };
  
  // Access multipliers
  const accessMultipliers = {
    good: 1.0,
    limited: 1.3,
    difficult: 1.6
  };
  
  // Ceiling multiplier
  const ceilingMultiplier = ceiling !== 'none' ? 1.4 : 1.0;
  
  return area * baseRate * complexityMultipliers[complexity] * 
         accessMultipliers[access] * ceilingMultiplier;
}

function calculateFinishLabor(area, finishLevel, complexity) {
  // Hours per sq ft by finish level
  const finishRates = {
    0: 0,
    1: 0.008,
    2: 0.012,
    3: 0.018,
    4: 0.025,
    5: 0.035
  };
  
  const complexityMultipliers = {
    simple: 1.0,
    standard: 1.2,
    complex: 1.4,
    intricate: 1.6
  };
  
  return area * finishRates[finishLevel] * complexityMultipliers[complexity];
}

function calculateDrywallMaterialCosts(sheets, thickness, boardType, compound, tape, tapeType, corners, screws, primer) {
  // Material pricing by type and thickness
  const sheetPrices = {
    regular: { '1/4': 12, '3/8': 14, '1/2': 15, '5/8': 18 },
    moisture: { '1/4': 16, '3/8': 18, '1/2': 20, '5/8': 24 },
    fire: { '1/4': 18, '3/8': 20, '1/2': 22, '5/8': 26 },
    impact: { '1/4': 22, '3/8': 24, '1/2': 26, '5/8': 30 },
    soundproof: { '1/4': 25, '3/8': 28, '1/2': 30, '5/8': 35 }
  };
  
  const sheetCost = sheets * (sheetPrices[boardType][thickness] || 15);
  const compoundCost = compound * 25; // $25 per gallon
  
  const tapePrices = { paper: 0.08, mesh: 0.12, 'pre-fab': 0.15 };
  const tapeCost = tape * (tapePrices[tapeType] || 0.10);
  
  const cornerCost = corners * 1.25; // $1.25 per linear foot
  const screwsCost = screws * 8; // $8 per lb
  const primerCost = primer * 28; // $28 per gallon
  
  return {
    sheets: sheetCost,
    compound: compoundCost,
    tape: tapeCost,
    corners: cornerCost,
    screws: screwsCost,
    primer: primerCost,
    total: sheetCost + compoundCost + tapeCost + cornerCost + screwsCost + primerCost
  };
}

function getLaborRate(projectType, finishLevel) {
  const baseRates = {
    residential: 45,
    commercial: 55,
    institutional: 60,
    healthcare: 65
  };
  
  const finishMultipliers = {
    0: 0.8, 1: 0.9, 2: 1.0, 3: 1.1, 4: 1.2, 5: 1.4
  };
  
  return (baseRates[projectType] || 45) * (finishMultipliers[finishLevel] || 1.0);
}

function calculateEquipmentCosts(area, complexity) {
  // Basic tool rental/depreciation costs
  let baseCost = 150; // Minimum equipment cost
  
  const complexityMultipliers = {
    simple: 1.0,
    standard: 1.2,
    complex: 1.5,
    intricate: 1.8
  };
  
  return baseCost + (area * 0.05) * complexityMultipliers[complexity];
}

// ADVANCED FLOORING CALCULATOR
function calculateAdvancedFlooring() {
  try {
    // Input validation
    const sqft = parseFloat(document.getElementById('flooring-sqft').value) || 0;
    const buildingType = document.getElementById('flooring-building-type').value;
    const roomType = document.getElementById('flooring-room-type').value;
    const complexity = document.getElementById('flooring-complexity').value;
    const transitions = parseInt(document.getElementById('flooring-transitions').value) || 0;
    const flooringType = document.getElementById('flooring-type').value;
    const grade = document.getElementById('flooring-grade').value;
    const size = document.getElementById('flooring-size').value;
    const subfloor = document.getElementById('flooring-subfloor').value;
    const moisture = document.getElementById('flooring-moisture').value;
    const prep = document.getElementById('flooring-prep').value;
    const installMethod = document.getElementById('flooring-install-method').value;
    const underlayment = document.getElementById('flooring-underlayment').value;
    const trim = document.getElementById('flooring-trim').value;
    const access = document.getElementById('flooring-access').value;
    
    if (sqft <= 0) {
      showNotification('Please enter valid square footage');
      return;
    }
    
    // Calculate waste factors based on complexity and installation method
    const wasteFactors = {
      simple: 1.05,
      standard: 1.08,
      complex: 1.12,
      intricate: 1.18
    };
    
    const wasteFactor = wasteFactors[complexity] || 1.08;
    const totalArea = Math.ceil(sqft * wasteFactor);
    
    // Material costs by type and grade
    const materialPricing = getFlooringMaterialCosts(flooringType, grade, size);
    const materialCost = totalArea * materialPricing.base;
    
    // Underlayment requirements
    const underlaymentNeeded = calculateUnderlaymentNeeds(underlayment, moisture, sqft);
    const underlaymentCost = underlaymentNeeded.sqft * underlaymentNeeded.costPerSqft;
    
    // Subfloor preparation costs
    const subfloorPrep = calculateSubfloorPrep(prep, subfloor, sqft);
    
    // Transition strips and trim calculations
    const transitionStrips = transitions * 8; // 8 feet average per transition
    const transitionCost = transitionStrips * getTransitionCost(flooringType);
    
    // Trim calculations
    const trimCalc = calculateTrimRequirements(trim, sqft, roomType);
    
    // Adhesive and fastener needs
    const adhesiveNeeds = calculateAdhesiveNeeds(installMethod, flooringType, sqft);
    
    // Moisture barrier requirements
    const moistureBarrier = calculateMoistureBarrierNeeds(moisture, flooringType, sqft);
    
    // Labor calculations with complexity factors
    const laborAnalysis = calculateFlooringLabor(
      sqft, flooringType, installMethod, complexity, prep, access, buildingType
    );
    
    // Crew size determination
    const crewSize = determineFlooringCrewSize(sqft, flooringType, complexity);
    
    // Duration estimation
    const duration = Math.ceil(laborAnalysis.totalHours / (crewSize.size * 8));
    
    // Total cost calculation
    const totalMaterialCost = materialCost + underlaymentCost + subfloorPrep.materialCost + 
                             transitionCost + trimCalc.cost + adhesiveNeeds.cost + moistureBarrier.cost;
    const totalLaborCost = laborAnalysis.totalCost + subfloorPrep.laborCost + trimCalc.laborCost;
    const disposalCost = calculateDisposalCosts(sqft, flooringType, subfloorPrep.disposal);
    const totalProjectCost = totalMaterialCost + totalLaborCost + disposalCost;
    
    // Technical specifications
    const techSpecs = getFlooringTechSpecs(flooringType, installMethod, moisture);
    
    // Update display elements
    document.getElementById('flooring-total-area').textContent = totalArea + ' sq ft';
    document.getElementById('flooring-duration').textContent = duration + ' days';
    
    // Material requirements
    document.getElementById('flooring-primary-qty').textContent = totalArea + ' sq ft';
    document.getElementById('flooring-underlayment-qty').textContent = 
      underlaymentNeeded.sqft > 0 ? underlaymentNeeded.sqft + ' sq ft' : 'Not required';
    document.getElementById('flooring-transition-qty').textContent = transitionStrips + ' linear ft';
    document.getElementById('flooring-trim-qty').textContent = trimCalc.linearFeet + ' linear ft';
    document.getElementById('flooring-adhesive-qty').textContent = adhesiveNeeds.quantity;
    document.getElementById('flooring-moisture-qty').textContent = 
      moistureBarrier.sqft > 0 ? moistureBarrier.sqft + ' sq ft' : 'Not required';
    
    // Subfloor preparation
    document.getElementById('flooring-prep-description').textContent = subfloorPrep.description;
    document.getElementById('flooring-prep-hours').textContent = subfloorPrep.hours.toFixed(1) + ' hours';
    document.getElementById('flooring-prep-cost').textContent = '$' + subfloorPrep.totalCost.toFixed(0);
    
    // Labor analysis
    document.getElementById('flooring-install-hours').textContent = laborAnalysis.installHours.toFixed(1) + ' hours';
    document.getElementById('flooring-finish-hours').textContent = laborAnalysis.finishHours.toFixed(1) + ' hours';
    document.getElementById('flooring-total-hours').textContent = laborAnalysis.totalHours.toFixed(1) + ' hours';
    document.getElementById('flooring-crew-size').textContent = crewSize.description;
    
    // Cost breakdown
    document.getElementById('flooring-material-cost').textContent = '$' + totalMaterialCost.toFixed(0);
    document.getElementById('flooring-subfloor-cost').textContent = '$' + subfloorPrep.totalCost.toFixed(0);
    document.getElementById('flooring-labor-cost').textContent = '$' + laborAnalysis.totalCost.toFixed(0);
    document.getElementById('flooring-trim-cost').textContent = '$' + (trimCalc.cost + trimCalc.laborCost).toFixed(0);
    document.getElementById('flooring-disposal-cost').textContent = '$' + disposalCost.toFixed(0);
    document.getElementById('flooring-total-cost').textContent = '$' + totalProjectCost.toFixed(0);
    
    // Technical specifications
    document.getElementById('flooring-install-spec').textContent = techSpecs.installMethod;
    document.getElementById('flooring-acclimation').textContent = techSpecs.acclimation;
    document.getElementById('flooring-environment').textContent = techSpecs.environment;
    document.getElementById('flooring-warranty').textContent = techSpecs.warranty;
    
    // Store calculation data
    calculatorData.flooring = {
      type: 'Professional Flooring Calculator',
      timestamp: new Date().toISOString(),
      inputs: {
        sqft, buildingType, roomType, complexity, transitions, flooringType,
        grade, size, subfloor, moisture, prep, installMethod, underlayment, trim, access
      },
      results: {
        totalArea, duration, totalProjectCost,
        materials: totalMaterialCost, labor: totalLaborCost, disposal: disposalCost
      }
    };
    
    showNotification('Professional flooring calculation complete!');
  } catch (error) {
    showNotification('Calculation error: ' + error.message, 'error');
    console.error('Flooring calculation error:', error);
  }
}

// Helper functions for flooring calculations
function getFlooringMaterialCosts(type, grade, size) {
  const basePrices = {
    'luxury-vinyl': { economy: 3, standard: 5, premium: 8, luxury: 12 },
    'engineered-hardwood': { economy: 6, standard: 10, premium: 16, luxury: 25 },
    'solid-hardwood': { economy: 8, standard: 14, premium: 22, luxury: 35 },
    'laminate': { economy: 2, standard: 4, premium: 7, luxury: 12 },
    'tile-ceramic': { economy: 3, standard: 6, premium: 12, luxury: 20 },
    'tile-porcelain': { economy: 4, standard: 8, premium: 15, luxury: 25 },
    'tile-natural': { economy: 8, standard: 15, premium: 25, luxury: 45 },
    'carpet': { economy: 2, standard: 4, premium: 8, luxury: 15 },
    'polished-concrete': { economy: 5, standard: 8, premium: 12, luxury: 18 },
    'epoxy': { economy: 3, standard: 6, premium: 10, luxury: 15 }
  };
  
  const sizeMultipliers = { standard: 1.0, wide: 1.15, narrow: 0.9, mixed: 1.1 };
  
  const basePrice = basePrices[type] ? basePrices[type][grade] : 5;
  return {
    base: basePrice * (sizeMultipliers[size] || 1.0),
    grade: grade,
    type: type
  };
}

function calculateUnderlaymentNeeds(underlaymentType, moisture, sqft) {
  const underlaymentTypes = {
    none: { needed: false, costPerSqft: 0 },
    basic: { needed: true, costPerSqft: 0.50 },
    premium: { needed: true, costPerSqft: 1.20 },
    'moisture-barrier': { needed: true, costPerSqft: 0.80 },
    'radiant-heat': { needed: true, costPerSqft: 1.50 }
  };
  
  const type = underlaymentTypes[underlaymentType] || underlaymentTypes.basic;
  return {
    sqft: type.needed ? sqft : 0,
    costPerSqft: type.costPerSqft
  };
}

function calculateSubfloorPrep(prep, subfloor, sqft) {
  const prepRequirements = {
    minimal: { hours: 0.01, materialCost: 0.25, description: 'Basic cleaning and inspection', disposal: false },
    standard: { hours: 0.03, materialCost: 0.75, description: 'Level check, minor repairs, cleaning', disposal: false },
    extensive: { hours: 0.08, materialCost: 2.50, description: 'Significant repair, leveling compound', disposal: true },
    replacement: { hours: 0.15, materialCost: 6.00, description: 'Full subfloor replacement', disposal: true }
  };
  
  const subfloorMultipliers = {
    'good-plywood': 1.0,
    'concrete-good': 1.1,
    'concrete-poor': 1.5,
    'old-flooring': 1.3,
    'poor-condition': 1.8
  };
  
  const requirement = prepRequirements[prep] || prepRequirements.standard;
  const multiplier = subfloorMultipliers[subfloor] || 1.0;
  
  const hours = sqft * requirement.hours * multiplier;
  const materialCost = sqft * requirement.materialCost * multiplier;
  const laborCost = hours * 55; // $55/hour for prep work
  
  return {
    hours: hours,
    materialCost: materialCost,
    laborCost: laborCost,
    totalCost: materialCost + laborCost,
    description: requirement.description,
    disposal: requirement.disposal
  };
}

function getTransitionCost(flooringType) {
  const transitionCosts = {
    'luxury-vinyl': 12,
    'engineered-hardwood': 18,
    'solid-hardwood': 25,
    'laminate': 10,
    'tile-ceramic': 15,
    'tile-porcelain': 18,
    'tile-natural': 30,
    'carpet': 8,
    'polished-concrete': 20,
    'epoxy': 15
  };
  
  return transitionCosts[flooringType] || 15;
}

function calculateTrimRequirements(trim, sqft, roomType) {
  // Estimate perimeter based on square footage (rough approximation)
  const perimeter = Math.sqrt(sqft) * 4 * 1.1; // 10% buffer for irregular shapes
  
  const trimSpecs = {
    none: { cost: 0, laborRate: 0, description: 'No trim work' },
    'remove-reinstall': { cost: 2, laborRate: 8, description: 'Remove and reinstall existing' },
    'new-baseboard': { cost: 6, laborRate: 12, description: 'New baseboard installation' },
    'quarter-round': { cost: 3, laborRate: 6, description: 'Quarter round addition' },
    custom: { cost: 12, laborRate: 20, description: 'Custom trim work' }
  };
  
  const spec = trimSpecs[trim] || trimSpecs['remove-reinstall'];
  
  return {
    linearFeet: Math.ceil(perimeter),
    cost: perimeter * spec.cost,
    laborCost: perimeter * (spec.laborRate / 8), // Assuming 8 linear feet per hour
    description: spec.description
  };
}

function calculateAdhesiveNeeds(installMethod, flooringType, sqft) {
  const adhesiveNeeds = {
    floating: { needed: false, quantity: 'None', cost: 0 },
    'glue-down': { needed: true, quantity: Math.ceil(sqft / 200) + ' gallons', cost: sqft * 0.30 },
    'nail-down': { needed: false, quantity: Math.ceil(sqft / 100) + ' lbs nails/staples', cost: sqft * 0.15 },
    'click-lock': { needed: false, quantity: 'None', cost: 0 },
    thinset: { needed: true, quantity: Math.ceil(sqft / 50) + ' bags thinset', cost: sqft * 0.50 },
    'stretch-in': { needed: false, quantity: 'Tack strips', cost: sqft * 0.25 }
  };
  
  return adhesiveNeeds[installMethod] || adhesiveNeeds.floating;
}

function calculateMoistureBarrierNeeds(moisture, flooringType, sqft) {
  const moistureSensitive = ['solid-hardwood', 'engineered-hardwood', 'laminate'];
  const needsBarrier = moisture !== 'dry' && moistureSensitive.includes(flooringType);
  
  return {
    sqft: needsBarrier ? sqft : 0,
    cost: needsBarrier ? sqft * 0.60 : 0
  };
}

function calculateFlooringLabor(sqft, flooringType, installMethod, complexity, prep, access, buildingType) {
  // Base installation rates (hours per sq ft)
  const baseRates = {
    'luxury-vinyl': 0.025,
    'engineered-hardwood': 0.035,
    'solid-hardwood': 0.045,
    'laminate': 0.020,
    'tile-ceramic': 0.040,
    'tile-porcelain': 0.045,
    'tile-natural': 0.060,
    'carpet': 0.015,
    'polished-concrete': 0.030,
    'epoxy': 0.025
  };
  
  // Complexity multipliers
  const complexityMultipliers = {
    simple: 1.0,
    standard: 1.2,
    complex: 1.5,
    intricate: 1.8
  };
  
  // Access multipliers
  const accessMultipliers = {
    easy: 1.0,
    moderate: 1.3,
    difficult: 1.6,
    stairs: 2.0
  };
  
  // Building type multipliers (commercial work typically slower)
  const buildingMultipliers = {
    residential: 1.0,
    commercial: 1.2,
    retail: 1.1,
    hospitality: 1.3,
    healthcare: 1.4,
    education: 1.2
  };
  
  const baseRate = baseRates[flooringType] || 0.030;
  const installHours = sqft * baseRate * complexityMultipliers[complexity] * 
                      accessMultipliers[access] * buildingMultipliers[buildingType];
  
  // Finishing hours (trim, cleanup, etc.)
  const finishHours = sqft * 0.008 * complexityMultipliers[complexity];
  
  const totalHours = installHours + finishHours;
  
  // Labor rates vary by building type
  const laborRates = {
    residential: 50,
    commercial: 65,
    retail: 58,
    hospitality: 70,
    healthcare: 75,
    education: 62
  };
  
  const laborRate = laborRates[buildingType] || 50;
  
  return {
    installHours: installHours,
    finishHours: finishHours,
    totalHours: totalHours,
    totalCost: totalHours * laborRate
  };
}

function determineFlooringCrewSize(sqft, flooringType, complexity) {
  if (sqft < 500) {
    return { size: 2, description: '2 person crew' };
  } else if (sqft < 2000) {
    return { size: 3, description: '3 person crew' };
  } else if (sqft < 5000) {
    return { size: 4, description: '4 person crew' };
  } else {
    return { size: 6, description: '6 person crew (2 teams)' };
  }
}

function calculateDisposalCosts(sqft, flooringType, hasSubfloorDisposal) {
  let baseCost = sqft * 0.25; // Base disposal cost
  
  if (hasSubfloorDisposal) {
    baseCost += sqft * 0.50; // Additional cost for subfloor debris
  }
  
  // Minimum disposal fee
  return Math.max(baseCost, 150);
}

function getFlooringTechSpecs(flooringType, installMethod, moisture) {
  const acclimationTimes = {
    'luxury-vinyl': '24 hours',
    'engineered-hardwood': '3-5 days',
    'solid-hardwood': '5-7 days',
    'laminate': '48 hours',
    'tile-ceramic': 'None required',
    'tile-porcelain': 'None required',
    'tile-natural': '24 hours',
    'carpet': 'None required',
    'polished-concrete': 'Cure time: 28 days',
    'epoxy': 'Cure time: 3-7 days'
  };
  
  const environments = {
    dry: '30-50% RH, 65-75¬∞F',
    moderate: '40-60% RH, 65-75¬∞F',
    high: 'Dehumidification required',
    wet: 'Not recommended without waterproofing'
  };
  
  return {
    installMethod: installMethod.charAt(0).toUpperCase() + installMethod.slice(1).replace('-', ' '),
    acclimation: acclimationTimes[flooringType] || '24-48 hours',
    environment: environments[moisture] || 'Standard HVAC',
    warranty: 'Varies by manufacturer (5-25 years typical)'
  };
}

// PLUMBING CALCULATOR
// PROFESSIONAL PLUMBING CALCULATOR (IPC Compliant)
function calculateAdvancedPlumbing() {
  try {
    // Get input values
    const buildingType = document.getElementById('plumb-building-type').value;
    const floors = parseInt(document.getElementById('plumb-floors').value) || 1;
    const sqft = parseFloat(document.getElementById('plumb-sqft').value) || 0;
    const serviceSize = parseFloat(document.getElementById('plumb-service-size').value) || 1;
    
    // Fixture counts
    const waterClosets = parseInt(document.getElementById('plumb-water-closets').value) || 0;
    const urinals = parseInt(document.getElementById('plumb-urinals').value) || 0;
    const lavatories = parseInt(document.getElementById('plumb-lavatories').value) || 0;
    const kitchenSinks = parseInt(document.getElementById('plumb-kitchen-sinks').value) || 0;
    const bathtubs = parseInt(document.getElementById('plumb-bathtubs').value) || 0;
    const showers = parseInt(document.getElementById('plumb-showers').value) || 0;
    const laundry = parseInt(document.getElementById('plumb-laundry').value) || 0;
    const dishwashers = parseInt(document.getElementById('plumb-dishwashers').value) || 0;
    const washers = parseInt(document.getElementById('plumb-washers').value) || 0;
    const hoseBibs = parseInt(document.getElementById('plumb-hose-bibs').value) || 0;
    
    const supplyMaterial = document.getElementById('plumb-supply-material').value;
    const drainMaterial = document.getElementById('plumb-drain-material').value;
    const complexity = document.getElementById('plumb-complexity').value;
    
    if (sqft <= 0) {
      showNotification('Please enter valid square footage');
      return;
    }
    
    // IPC Table 604.3 - Water Supply Fixture Units (WSFU)
    const fixtureUnits = {
      residential: {
        'water-closet': 2.2,
        'urinal': 1.0,
        'lavatory': 0.5,
        'kitchen-sink': 1.0,
        'bathtub': 1.4,
        'shower': 1.2,
        'laundry': 1.0,
        'dishwasher': 1.0,
        'washer': 1.8,
        'hose-bib': 2.5
      },
      commercial: {
        'water-closet': 2.2,
        'urinal': 1.0,
        'lavatory': 0.5,
        'kitchen-sink': 1.4,
        'bathtub': 1.4,
        'shower': 1.2,
        'laundry': 1.4,
        'dishwasher': 1.4,
        'washer': 2.2,
        'hose-bib': 2.5
      }
    };
    
    // Determine if residential or commercial
    const useCommercial = ['office', 'retail', 'restaurant', 'hospital', 'school', 'hotel'].includes(buildingType);
    const units = useCommercial ? fixtureUnits.commercial : fixtureUnits.residential;
    
    // Calculate total fixture units
    const totalUnits = 
      (waterClosets * units['water-closet']) +
      (urinals * units['urinal']) +
      (lavatories * units['lavatory']) +
      (kitchenSinks * units['kitchen-sink']) +
      (bathtubs * units['bathtub']) +
      (showers * units['shower']) +
      (laundry * units['laundry']) +
      (dishwashers * units['dishwasher']) +
      (washers * units['washer']) +
      (hoseBibs * units['hose-bib']);
    
    // Hunter's Curve for flow rate calculation (GPM)
    let flowRate;
    if (totalUnits <= 10) flowRate = totalUnits * 3;
    else if (totalUnits <= 50) flowRate = 30 + (totalUnits - 10) * 1.8;
    else if (totalUnits <= 100) flowRate = 102 + (totalUnits - 50) * 1.2;
    else flowRate = 162 + (totalUnits - 100) * 0.8;
    
    // Pipe sizing based on flow rate and fixture units
    let mainSupplySize, branchSupplySize, mainDrainSize, branchDrainSize, ventSize;
    
    if (totalUnits <= 8) {
      mainSupplySize = '3/4"';
      branchSupplySize = '1/2"';
      mainDrainSize = '3"';
      branchDrainSize = '2"';
      ventSize = '2"';
    } else if (totalUnits <= 20) {
      mainSupplySize = '1"';
      branchSupplySize = '3/4"';
      mainDrainSize = '4"';
      branchDrainSize = '3"';
      ventSize = '3"';
    } else if (totalUnits <= 50) {
      mainSupplySize = '1-1/4"';
      branchSupplySize = '1"';
      mainDrainSize = '4"';
      branchDrainSize = '3"';
      ventSize = '3"';
    } else {
      mainSupplySize = '1-1/2"';
      branchSupplySize = '1-1/4"';
      mainDrainSize = '6"';
      branchDrainSize = '4"';
      ventSize = '4"';
    }
    
    // Pipe length calculations (rough estimate)
    const avgPipeRun = Math.sqrt(sqft) * 1.5; // Average run length
    const supplyLength = (totalUnits * 12) + (floors * 20);
    const drainLength = (totalUnits * 15) + (floors * 25);
    const ventLength = (totalUnits * 8) + (floors * 15);
    
    // Material costs per linear foot
    const materialCosts = {
      supply: {
        'copper-l': 8.50,
        'copper-m': 6.25,
        'pex': 2.85,
        'cpvc': 3.20,
        'galvanized': 4.75
      },
      drain: {
        'pvc': 4.20,
        'abs': 4.80,
        'cast-iron': 18.50,
        'copper-dw': 12.25
      }
    };
    
    // Fixture costs (professional grade)
    const fixtureCosts = {
      'water-closet': 450,
      'urinal': 650,
      'lavatory': 320,
      'kitchen-sink': 580,
      'bathtub': 1200,
      'shower': 850,
      'laundry': 285,
      'dishwasher': 120, // Connection only
      'washer': 150, // Connection only
      'hose-bib': 85
    };
    
    // Calculate costs
    const supplyCost = supplyLength * materialCosts.supply[supplyMaterial];
    const drainCost = drainLength * materialCosts.drain[drainMaterial];
    const ventCost = ventLength * materialCosts.drain[drainMaterial] * 0.8;
    
    // Fixture total cost
    const fixtureCost = 
      (waterClosets * fixtureCosts['water-closet']) +
      (urinals * fixtureCosts['urinal']) +
      (lavatories * fixtureCosts['lavatory']) +
      (kitchenSinks * fixtureCosts['kitchen-sink']) +
      (bathtubs * fixtureCosts['bathtub']) +
      (showers * fixtureCosts['shower']) +
      (laundry * fixtureCosts['laundry']) +
      (dishwashers * fixtureCosts['dishwasher']) +
      (washers * fixtureCosts['washer']) +
      (hoseBibs * fixtureCosts['hose-bib']);
    
    // Water heater system (based on fixture units)
    let waterHeaterCost = 0;
    if (totalUnits <= 10) waterHeaterCost = 1200; // 40 gallon
    else if (totalUnits <= 20) waterHeaterCost = 1800; // 50-75 gallon
    else if (totalUnits <= 40) waterHeaterCost = 2800; // 80-100 gallon
    else waterHeaterCost = 4200; // Commercial system
    
    // Complexity multipliers
    const complexityMultipliers = {
      'simple': 1.0,
      'moderate': 1.25,
      'complex': 1.55,
      'extreme': 1.85
    };
    
    const complexityFactor = complexityMultipliers[complexity];
    
    // Labor calculations (professional rates)
    const roughLaborCost = (totalUnits * 125 + sqft * 0.45) * complexityFactor;
    const finishLaborCost = (totalUnits * 85) * complexityFactor;
    
    // Permits and testing
    const permitCost = Math.max(200, sqft * 0.08);
    
    const totalCost = supplyCost + drainCost + ventCost + fixtureCost + waterHeaterCost + 
                     roughLaborCost + finishLaborCost + permitCost;
    
    // Water pressure requirement (standard)
    const pressureReq = Math.min(80, Math.max(40, 20 + (totalUnits * 0.5)));
    
    // Update display
    document.getElementById('plumb-total-units').textContent = totalUnits.toFixed(1) + ' WSFU';
    document.getElementById('plumb-flow-rate').textContent = flowRate.toFixed(1) + ' GPM';
    
    document.getElementById('plumb-main-supply').textContent = mainSupplySize;
    document.getElementById('plumb-branch-supply').textContent = branchSupplySize;
    document.getElementById('plumb-main-drain').textContent = mainDrainSize;
    document.getElementById('plumb-branch-drain').textContent = branchDrainSize;
    document.getElementById('plumb-vent-size').textContent = ventSize;
    
    document.getElementById('plumb-supply-cost').textContent = '$' + supplyCost.toFixed(0);
    document.getElementById('plumb-drain-cost').textContent = '$' + drainCost.toFixed(0);
    document.getElementById('plumb-vent-cost').textContent = '$' + ventCost.toFixed(0);
    document.getElementById('plumb-fixture-cost').textContent = '$' + fixtureCost.toFixed(0);
    document.getElementById('plumb-water-heater').textContent = '$' + waterHeaterCost.toFixed(0);
    document.getElementById('plumb-rough-labor').textContent = '$' + roughLaborCost.toFixed(0);
    document.getElementById('plumb-finish-labor').textContent = '$' + finishLaborCost.toFixed(0);
    document.getElementById('plumb-permits').textContent = '$' + permitCost.toFixed(0);
    document.getElementById('plumb-total-cost').textContent = '$' + totalCost.toFixed(0);
    
    document.getElementById('plumb-supply-length').textContent = supplyLength.toFixed(0) + ' LF';
    document.getElementById('plumb-drain-length').textContent = drainLength.toFixed(0) + ' LF';
    document.getElementById('plumb-vent-length').textContent = ventLength.toFixed(0) + ' LF';
    document.getElementById('plumb-pressure').textContent = pressureReq.toFixed(0) + ' PSI';
    
    // Store professional data
    calculatorData['professional-plumbing'] = {
      type: 'Professional Plumbing Calculator',
      timestamp: new Date().toISOString(),
      inputs: {
        buildingType, floors, sqft, serviceSize, waterClosets, urinals, lavatories,
        kitchenSinks, bathtubs, showers, laundry, dishwashers, washers, hoseBibs,
        supplyMaterial, drainMaterial, complexity
      },
      results: {
        totalUnits, flowRate, supplyCost, drainCost, ventCost, fixtureCost,
        waterHeaterCost, roughLaborCost, finishLaborCost, permitCost, totalCost,
        specifications: {
          mainSupply: mainSupplySize, branchSupply: branchSupplySize,
          mainDrain: mainDrainSize, branchDrain: branchDrainSize, ventSize,
          pressure: pressureReq
        }
      }
    };
    
    showNotification('Professional plumbing analysis complete!');
    
  } catch(error) {
    console.error('Professional plumbing calculation error:', error);
    showNotification('Calculation error - please check inputs');
  }
}

// ADVANCED HVAC LOAD CALCULATOR - Professional Manual J Methodology
function calculateHVAC() {
  try {
    // Get all inputs
    const sqft = parseFloat(document.getElementById('hvac-sqft').value) || 0;
    const ceilingHeight = parseFloat(document.getElementById('hvac-ceiling-height').value) || 9;
    const climateZone = document.getElementById('hvac-climate-zone').value;
    const buildingType = document.getElementById('hvac-building-type').value;
    const insulationLevel = document.getElementById('hvac-insulation').value;
    const windowArea = parseFloat(document.getElementById('hvac-windows').value) || 15;
    const windowType = document.getElementById('hvac-window-type').value;
    const orientation = document.getElementById('hvac-orientation').value;
    const occupancy = parseInt(document.getElementById('hvac-occupancy').value) || 4;
    const systemType = document.getElementById('hvac-system-type').value;
    const ductworkCondition = document.getElementById('hvac-ductwork').value;
    
    if (sqft < 200) {
      showNotification('Please enter valid square footage (minimum 200 sq ft)', 'error');
      return;
    }
    
    if (occupancy < 1) {
      showNotification('Please enter valid occupancy (minimum 1 person)', 'error');
      return;
    }
    
    // Advanced Climate Zone Factors (based on ASHRAE data)
    const climateFactors = {
      '1A': {heating: 15, cooling: 450, designTemp: {heating: 35, cooling: 95}}, // Miami
      '2A': {heating: 22, cooling: 400, designTemp: {heating: 25, cooling: 95}}, // Houston
      '2B': {heating: 25, cooling: 380, designTemp: {heating: 25, cooling: 105}}, // Phoenix
      '3A': {heating: 35, cooling: 350, designTemp: {heating: 20, cooling: 92}}, // Atlanta
      '3B': {heating: 30, cooling: 320, designTemp: {heating: 20, cooling: 100}}, // Las Vegas
      '3C': {heating: 25, cooling: 200, designTemp: {heating: 35, cooling: 80}}, // San Diego
      '4A': {heating: 45, cooling: 300, designTemp: {heating: 10, cooling: 90}}, // Washington DC
      '4B': {heating: 40, cooling: 280, designTemp: {heating: 5, cooling: 92}}, // Denver
      '4C': {heating: 30, cooling: 150, designTemp: {heating: 25, cooling: 80}}, // Seattle
      '5A': {heating: 60, cooling: 280, designTemp: {heating: -5, cooling: 88}}, // Chicago
      '5B': {heating: 55, cooling: 260, designTemp: {heating: -5, cooling: 90}}, // Boise
      '6A': {heating: 75, cooling: 250, designTemp: {heating: -15, cooling: 85}}, // Minneapolis
      '6B': {heating: 70, cooling: 240, designTemp: {heating: -15, cooling: 88}}, // Helena
      '7': {heating: 90, cooling: 200, designTemp: {heating: -25, cooling: 80}}, // Duluth
      '8': {heating: 110, cooling: 150, designTemp: {heating: -45, cooling: 75}} // Fairbanks
    };
    
    // Insulation U-values (BTU/hr¬∑ft¬≤¬∑¬∞F)
    const insulationFactors = {
      'poor': {wall: 0.15, ceiling: 0.08, floor: 0.12},
      'fair': {wall: 0.12, ceiling: 0.05, floor: 0.09},
      'good': {wall: 0.08, ceiling: 0.035, floor: 0.07},
      'excellent': {wall: 0.06, ceiling: 0.025, floor: 0.05},
      'superinsulated': {wall: 0.045, ceiling: 0.02, floor: 0.035}
    };
    
    // Window U-values
    const windowFactors = {
      'single': 1.0,
      'double': 0.5,
      'double-low-e': 0.35,
      'triple': 0.2,
      'high-performance': 0.15
    };
    
    // Building type factors
    const buildingFactors = {
      'residential': {internal: 2400, infiltration: 0.35},
      'apartment': {internal: 2000, infiltration: 0.25},
      'office': {internal: 3500, infiltration: 0.30},
      'retail': {internal: 4000, infiltration: 0.40},
      'warehouse': {internal: 1000, infiltration: 0.50},
      'restaurant': {internal: 8000, infiltration: 0.35},
      'medical': {internal: 5000, infiltration: 0.20}
    };
    
    // Orientation factors
    const orientationFactors = {
      'north': 0.9,
      'south': 1.1,
      'east': 1.0,
      'west': 1.15,
      'mixed': 1.0
    };
    
    // System costs and efficiency
    const systemData = {
      'gas-furnace-ac': {cost: 4500, heatEff: 0.80, coolEff: 14, type: 'Split System'},
      'high-eff-gas-ac': {cost: 6200, heatEff: 0.95, coolEff: 16, type: 'High-Eff Split'},
      'heat-pump-standard': {cost: 5800, heatEff: 8.2, coolEff: 14, type: 'Standard Heat Pump'},
      'heat-pump-high-eff': {cost: 7500, heatEff: 9.5, coolEff: 18, type: 'High-Eff Heat Pump'},
      'mini-split-single': {cost: 3200, heatEff: 10.0, coolEff: 22, type: 'Mini-Split Single'},
      'mini-split-multi': {cost: 8500, heatEff: 10.5, coolEff: 20, type: 'Mini-Split Multi'},
      'geothermal': {cost: 15000, heatEff: 3.6, coolEff: 17, type: 'Geothermal'},
      'dual-fuel': {cost: 8800, heatEff: 9.0, coolEff: 16, type: 'Dual Fuel'}
    };
    
    // Ductwork factors
    const ductFactors = {
      'new': 1.0,
      'good': 1.05,
      'fair': 1.10,
      'poor': 1.20,
      'replacement': 1.25
    };
    
    // Advanced Manual J Calculations
    const climate = climateFactors[climateZone];
    const insulation = insulationFactors[insulationLevel];
    const windowU = windowFactors[windowType];
    const building = buildingFactors[buildingType];
    const orientationFactor = orientationFactors[orientation];
    const system = systemData[systemType];
    const ductFactor = ductFactors[ductworkCondition];
    
    // Calculate building envelope areas
    const volume = sqft * ceilingHeight;
    const perimeter = Math.sqrt(sqft) * 4; // Approximate square building
    const wallArea = perimeter * ceilingHeight;
    const windowAreaSqft = wallArea * (windowArea / 100);
    const netWallArea = wallArea - windowAreaSqft;
    const ceilingArea = sqft;
    
    // Heat Loss/Gain Calculations (Manual J methodology)
    
    // 1. Envelope loads
    const wallHeatingLoad = netWallArea * insulation.wall * (70 - climate.designTemp.heating);
    const windowHeatingLoad = windowAreaSqft * windowU * (70 - climate.designTemp.heating);
    const ceilingHeatingLoad = ceilingArea * insulation.ceiling * (70 - climate.designTemp.heating);
    const floorHeatingLoad = sqft * insulation.floor * (70 - climate.designTemp.heating) * 0.7; // Ground coupling factor
    
    const wallCoolingLoad = netWallArea * insulation.wall * (climate.designTemp.cooling - 75);
    const windowCoolingLoad = windowAreaSqft * windowU * (climate.designTemp.cooling - 75);
    const ceilingCoolingLoad = ceilingArea * insulation.ceiling * (climate.designTemp.cooling - 75);
    
    // 2. Solar gains (cooling only)
    const solarGain = windowAreaSqft * 200 * orientationFactor; // Simplified solar calculation
    
    // 3. Internal gains
    const internalGain = building.internal + (occupancy * 400); // People + equipment
    
    // 4. Infiltration/Ventilation loads
    const infiltrationHeating = volume * building.infiltration * 0.018 * (70 - climate.designTemp.heating);
    const infiltrationCooling = volume * building.infiltration * 0.018 * (climate.designTemp.cooling - 75);
    
    // 5. Latent loads (cooling only)
    const latentLoad = sqft * 0.3 * climate.cooling; // Moisture removal
    
    // Total loads
    let totalHeatingLoad = wallHeatingLoad + windowHeatingLoad + ceilingHeatingLoad + 
                          floorHeatingLoad + infiltrationHeating;
    
    let totalCoolingLoad = wallCoolingLoad + windowCoolingLoad + ceilingCoolingLoad + 
                          solarGain + internalGain + infiltrationCooling + latentLoad;
    
    // Apply duct losses
    totalHeatingLoad *= ductFactor;
    totalCoolingLoad *= ductFactor;
    
    // System sizing (add safety factor)
    const heatingCapacity = totalHeatingLoad * 1.15; // 15% safety factor
    const coolingCapacity = totalCoolingLoad * 1.15;
    
    // Convert to tons (12,000 BTU/hr = 1 ton)
    const tonnage = Math.max(heatingCapacity, coolingCapacity) / 12000;
    const recommendedTonnage = Math.ceil(tonnage * 2) / 2; // Round to nearest 0.5 ton
    
    // Load per square foot
    const loadPerSqft = Math.max(heatingCapacity, coolingCapacity) / sqft;
    
    // Cost calculations
    const equipmentCost = system.cost;
    const installationCost = Math.round(equipmentCost * 0.6); // 60% of equipment cost
    
    // Ductwork costs
    let ductworkCost = 0;
    if (ductworkCondition === 'replacement') {
      ductworkCost = sqft * 8; // $8 per sq ft for new ductwork
    } else if (ductworkCondition === 'poor') {
      ductworkCost = sqft * 3; // Sealing and repairs
    }
    
    // Additional costs
    const permitsCost = Math.round(equipmentCost * 0.03); // 3% for permits
    const electricalCost = systemType.includes('heat-pump') || systemType.includes('geothermal') ? 800 : 400;
    
    const totalCost = equipmentCost + installationCost + ductworkCost + permitsCost + electricalCost;
    
    // Annual operating costs (simplified)
    const heatingHours = climate.heating * 24; // Heating degree days √ó hours
    const coolingHours = climate.cooling * 3; // Cooling hours per year
    
    const gasPrice = 1.20; // $ per therm
    const electricPrice = 0.13; // $ per kWh
    
    let annualHeating, annualCooling;
    
    if (systemType.includes('gas')) {
      annualHeating = (heatingCapacity * heatingHours * gasPrice) / (system.heatEff * 100000); // Gas heating
      annualCooling = (coolingCapacity * coolingHours * electricPrice) / (system.coolEff * 1000); // Electric cooling
    } else {
      // Heat pump or electric
      annualHeating = (heatingCapacity * heatingHours * electricPrice) / (system.heatEff * 1000);
      annualCooling = (coolingCapacity * coolingHours * electricPrice) / (system.coolEff * 1000);
    }
    
    const totalAnnual = annualHeating + annualCooling;
    
    // Update display
    document.getElementById('hvac-tonnage').textContent = recommendedTonnage.toFixed(1) + ' Tons';
    document.getElementById('hvac-btus').textContent = `${Math.round(heatingCapacity)} BTU/hr heating, ${Math.round(coolingCapacity)} BTU/hr cooling`;
    document.getElementById('hvac-cooling-load').textContent = Math.round(totalCoolingLoad) + ' BTU/hr';
    document.getElementById('hvac-heating-load').textContent = Math.round(totalHeatingLoad) + ' BTU/hr';
    document.getElementById('hvac-load-per-sqft').textContent = Math.round(loadPerSqft) + ' BTU/hr/sqft';
    document.getElementById('hvac-recommended-system').textContent = system.type;
    
    document.getElementById('hvac-equipment-cost').textContent = '$' + equipmentCost.toLocaleString();
    document.getElementById('hvac-install-cost').textContent = '$' + installationCost.toLocaleString();
    document.getElementById('hvac-ductwork-cost').textContent = '$' + ductworkCost.toLocaleString();
    document.getElementById('hvac-permits-cost').textContent = '$' + permitsCost.toLocaleString();
    document.getElementById('hvac-electrical-cost').textContent = '$' + electricalCost.toLocaleString();
    document.getElementById('hvac-total-cost').textContent = '$' + totalCost.toLocaleString();
    
    document.getElementById('hvac-heating-annual').textContent = '$' + Math.round(annualHeating).toLocaleString();
    document.getElementById('hvac-cooling-annual').textContent = '$' + Math.round(annualCooling).toLocaleString();
    document.getElementById('hvac-total-annual').textContent = '$' + Math.round(totalAnnual).toLocaleString();
    
    // Store comprehensive data
    calculatorData.hvac = {
      type: 'Advanced HVAC Load Calculator',
      timestamp: new Date().toISOString(),
      methodology: 'ACCA Manual J',
      inputs: {
        sqft, ceilingHeight, climateZone, buildingType, insulationLevel,
        windowArea, windowType, orientation, occupancy, systemType, ductworkCondition
      },
      loads: {
        heating: Math.round(totalHeatingLoad),
        cooling: Math.round(totalCoolingLoad),
        heatingCapacity: Math.round(heatingCapacity),
        coolingCapacity: Math.round(coolingCapacity),
        tonnage: recommendedTonnage,
        loadPerSqft: Math.round(loadPerSqft)
      },
      costs: {
        equipment: equipmentCost,
        installation: installationCost,
        ductwork: ductworkCost,
        permits: permitsCost,
        electrical: electricalCost,
        total: totalCost
      },
      operating: {
        annualHeating: Math.round(annualHeating),
        annualCooling: Math.round(annualCooling),
        annualTotal: Math.round(totalAnnual)
      },
      system: {
        type: system.type,
        heatingEfficiency: system.heatEff,
        coolingEfficiency: system.coolEff
      }
    };
    
    showNotification('Professional HVAC load calculation complete! üè†‚ùÑÔ∏è', 'success');
    
  } catch(error) {
    console.error('HVAC calculation error:', error);
    showNotification('Calculation error - please verify all inputs and try again', 'error');
  }
}

// INSULATION CALCULATOR  
// Redirect old function to new working function
function calculateAdvancedInsulation() {
  calculateAdvancedInsulationNew();
}

// Old broken function removed - using calculateAdvancedInsulationNew instead

// Helper function needed by old code - keeping for compatibility
function calculateHeatLoss(wallArea, ceilingArea, floorArea, wallR, ceilingR, climateZone) {
  const hddValues = [500, 1500, 2500, 3500, 4500, 5500, 7000, 8500];
  const hdd = hddValues[climateZone - 1];
  
  const wallLoss = wallArea / Math.max(wallR, 1) * hdd * 24 / 1000;
  const ceilingLoss = ceilingArea / Math.max(ceilingR, 1) * hdd * 24 / 1000;
  const floorLoss = floorArea / 13 * hdd * 24 / 1000;
  
  return wallLoss + ceilingLoss + floorLoss;
}

/* Removed broken duplicate insulation function code - using calculateAdvancedInsulationNew */
// PROFESSIONAL IECC COMPLIANT INSULATION CALCULATOR  
function calculateAdvancedInsulationNew() {
  try {
    // Get input values using correct IDs from the new HTML
    const buildingType = document.getElementById('insul-building-type').value;
    const climateZone = document.getElementById('insul-climate-zone').value;
    const ieccVersion = document.getElementById('insul-iecc-version').value;
    
    const wallArea = parseFloat(document.getElementById('insul-wall-area').value) || 0;
    const ceilingArea = parseFloat(document.getElementById('insul-ceiling-area').value) || 0;
    const floorArea = parseFloat(document.getElementById('insul-floor-area').value) || 0;
    const basementArea = parseFloat(document.getElementById('insul-basement-area').value) || 0;
    const rimJoist = parseFloat(document.getElementById('insul-rimjoist').value) || 0;
    const ductworkArea = parseFloat(document.getElementById('insul-ductwork').value) || 0;
    
    const wallConstruction = document.getElementById('insul-wall-construction').value;
    const sheathing = document.getElementById('insul-sheathing').value;
    const airSealing = document.getElementById('insul-air-sealing').value;
    const wallInsulType = document.getElementById('insul-wall-type').value;
    const ceilingInsulType = document.getElementById('insul-ceiling-type').value;
    
    const heatingFuel = document.getElementById('insul-heating-fuel').value;
    const coolingSystem = document.getElementById('insul-cooling-system').value;
    const gasRate = parseFloat(document.getElementById('insul-gas-rate').value) || 1.25;
    const electricRate = parseFloat(document.getElementById('insul-electric-rate').value) || 0.14;
    
    if (wallArea + ceilingArea + floorArea + basementArea <= 0) {
      showNotification('Please enter at least one insulation area');
      return;
    }
    
    // IECC 2021 R-Value Requirements by Climate Zone
    const ieccRequirements = {
      '1A': { wall: 13, ceiling: 30, floor: 13, basement: 0 },
      '2A': { wall: 13, ceiling: 38, floor: 13, basement: 0 },
      '2B': { wall: 13, ceiling: 38, floor: 13, basement: 0 },
      '3A': { wall: 20, ceiling: 38, floor: 19, basement: 5 },
      '3B': { wall: 20, ceiling: 38, floor: 19, basement: 5 },
      '3C': { wall: 20, ceiling: 38, floor: 19, basement: 5 },
      '4A': { wall: 20, ceiling: 49, floor: 19, basement: 10 },
      '4B': { wall: 20, ceiling: 49, floor: 19, basement: 10 },
      '4C': { wall: 20, ceiling: 49, floor: 19, basement: 10 },
      '5A': { wall: 20, ceiling: 49, floor: 30, basement: 10 },
      '5B': { wall: 20, ceiling: 49, floor: 30, basement: 10 },
      '6A': { wall: 20, ceiling: 49, floor: 30, basement: 15 },
      '6B': { wall: 20, ceiling: 49, floor: 30, basement: 15 },
      '7': { wall: 21, ceiling: 49, floor: 38, basement: 15 },
      '8': { wall: 21, ceiling: 60, floor: 38, basement: 20 }
    };
    
    const codeReqs = ieccRequirements[climateZone];
    
    // Wall construction R-value adjustments for thermal bridging
    const wallConstructionFactors = {
      '2x4-16': { cavityWidth: 3.5, thermalBridging: 0.78 },
      '2x4-24': { cavityWidth: 3.5, thermalBridging: 0.85 },
      '2x6-16': { cavityWidth: 5.5, thermalBridging: 0.75 },
      '2x6-24': { cavityWidth: 5.5, thermalBridging: 0.82 },
      '2x8-16': { cavityWidth: 7.25, thermalBridging: 0.73 },
      'steel-16': { cavityWidth: 3.5, thermalBridging: 0.50 },
      'steel-24': { cavityWidth: 3.5, thermalBridging: 0.60 },
      'block': { cavityWidth: 8, thermalBridging: 0.85 },
      'sip': { cavityWidth: 6, thermalBridging: 0.95 },
      'icf': { cavityWidth: 6, thermalBridging: 0.98 }
    };
    
    // Sheathing R-value contribution
    const sheathingRValues = {
      'osb': 0.6,
      'foam-1': 5.0,
      'foam-2': 10.0,
      'foam-3': 15.0,
      'zip': 1.2,
      'fiberboard': 1.4
    };
    
    // Air sealing ACH50 values
    const airSealingValues = {
      'poor': 8.0,
      'average': 6.0,
      'good': 4.0,
      'excellent': 2.5,
      'passive': 0.6
    };
    
    // Insulation material properties
    const wallInsulationTypes = {
      'fiberglass': { rPerInch: 3.2, cost: 1.20, labor: 1.0 },
      'rockwool': { rPerInch: 3.3, cost: 1.80, labor: 1.1 },
      'cellulose': { rPerInch: 3.6, cost: 1.05, labor: 1.3 },
      'spray-foam': { rPerInch: 6.5, cost: 4.50, labor: 1.8 },
      'rigid-foam': { rPerInch: 5.0, cost: 3.20, labor: 1.2 },
      'hybrid': { rPerInch: 4.5, cost: 2.85, labor: 1.5 }
    };
    
    const ceilingInsulationTypes = {
      'loose-fill': { rPerInch: 2.5, cost: 0.85, labor: 0.8 },
      'blown-cellulose': { rPerInch: 3.6, cost: 1.05, labor: 0.9 },
      'batt': { rPerInch: 3.2, cost: 1.20, labor: 1.0 },
      'rockwool-blown': { rPerInch: 3.3, cost: 1.50, labor: 0.9 },
      'spray-foam': { rPerInch: 6.5, cost: 4.50, labor: 1.5 }
    };
    
    const wallConstructionData = wallConstructionFactors[wallConstruction];
    const sheathingR = sheathingRValues[sheathing];
    const wallInsul = wallInsulationTypes[wallInsulType];
    const ceilingInsul = ceilingInsulationTypes[ceilingInsulType];
    const ach50 = airSealingValues[airSealing];
    
    // Calculate required R-values
    const wallRRequired = codeReqs.wall;
    const ceilingRRequired = codeReqs.ceiling;
    const floorRRequired = codeReqs.floor;
    const basementRRequired = codeReqs.basement;
    
    // Calculate achieved R-values
    const wallCavityR = (wallConstructionData.cavityWidth / wallInsul.rPerInch) * wallInsul.rPerInch;
    const wallAssemblyR = (wallCavityR + sheathingR + 1.0) * wallConstructionData.thermalBridging;
    const ceilingThickness = ceilingRRequired / ceilingInsul.rPerInch;
    const ceilingAssemblyR = ceilingThickness * ceilingInsul.rPerInch;
    
    // Calculate costs
    const wallCost = wallArea * wallInsul.cost * (wallConstructionData.cavityWidth / 3.5);
    const ceilingCost = ceilingArea * ceilingInsul.cost * (ceilingThickness / 10);
    const floorCost = floorArea * 2.5 * (floorRRequired / 19);
    const basementCost = basementArea * 3.8 * (basementRRequired / 10);
    const rimJoistCost = rimJoist * 8.50;
    const ductInsulationCost = ductworkArea * 2.25;
    
    // Air sealing costs
    const airSealingBaseCost = (wallArea + ceilingArea) * 0.35;
    const airSealingMultiplier = ach50 <= 3 ? 2.5 : ach50 <= 5 ? 1.8 : 1.2;
    const airSealingMatCost = airSealingBaseCost * airSealingMultiplier;
    
    // Vapor barriers
    const vaporBarrierCost = (parseInt(climateZone.charAt(0)) >= 4) ? (wallArea + ceilingArea) * 0.25 : 0;
    
    // Labor costs
    const wallLaborCost = wallArea * 1.85 * wallInsul.labor;
    const ceilingLaborCost = ceilingArea * 1.25 * ceilingInsul.labor;
    const floorLaborCost = floorArea * 2.10;
    const airSealingLaborCost = airSealingMatCost * 1.8;
    
    // Testing and permits
    const blowerDoorCost = ach50 <= 3 ? 350 : 0;
    const totalMaterialCost = wallCost + ceilingCost + floorCost + basementCost + rimJoistCost + ductInsulationCost + airSealingMatCost + vaporBarrierCost;
    const totalLaborCost = wallLaborCost + ceilingLaborCost + floorLaborCost + airSealingLaborCost;
    const permitCost = Math.max(180, (totalMaterialCost + totalLaborCost) * 0.015);
    const totalProjectCost = totalMaterialCost + totalLaborCost + blowerDoorCost + permitCost;
    
    // Energy savings calculations
    const hddValues = { '1A': 500, '2A': 1500, '2B': 1000, '3A': 2500, '3B': 1500, '3C': 2000, '4A': 3500, '4B': 2500, '4C': 3000, '5A': 4500, '5B': 3500, '6A': 5500, '6B': 4500, '7': 7000, '8': 8500 };
    const cddValues = { '1A': 4000, '2A': 2500, '2B': 3500, '3A': 1500, '3B': 2500, '3C': 500, '4A': 1000, '4B': 1500, '4C': 200, '5A': 800, '5B': 1200, '6A': 600, '6B': 900, '7': 400, '8': 200 };
    
    const hdd = hddValues[climateZone];
    const cdd = cddValues[climateZone];
    
    const baselineUFactor = 1 / 15;
    const improvedUFactor = 1 / wallAssemblyR;
    const uFactorImprovement = baselineUFactor - improvedUFactor;
    
    const heatingLoadReduction = wallArea * uFactorImprovement * hdd * 24;
    const heatingFuelFactors = {
      'natural-gas': { efficiency: 0.85, costPer100kBtu: gasRate * 10 },
      'electricity': { efficiency: 0.95, costPer100kBtu: electricRate * 293 },
      'oil': { efficiency: 0.80, costPer100kBtu: 25 },
      'propane': { efficiency: 0.85, costPer100kBtu: 30 },
      'geothermal': { efficiency: 3.5, costPer100kBtu: electricRate * 84 },
      'heat-pump': { efficiency: 2.8, costPer100kBtu: electricRate * 105 }
    };
    
    const heatingFactor = heatingFuelFactors[heatingFuel];
    const annualHeatingSavings = (heatingLoadReduction / 100000) * heatingFactor.costPer100kBtu / heatingFactor.efficiency;
    
    const coolingLoadReduction = wallArea * uFactorImprovement * cdd * 24;
    const coolingEfficiency = coolingSystem === 'heat-pump' ? 3.2 : 2.5;
    const annualCoolingSavings = (coolingLoadReduction / 100000) * (electricRate * 293) / coolingEfficiency;
    
    const totalAnnualSavings = annualHeatingSavings + annualCoolingSavings;
    
    // 25-year lifecycle analysis
    const inflationRate = 0.035;
    let lifetimeSavings = 0;
    for (let year = 1; year <= 25; year++) {
      lifetimeSavings += totalAnnualSavings * Math.pow(1 + inflationRate, year - 1);
    }
    
    let npv = -totalProjectCost;
    for (let year = 1; year <= 25; year++) {
      const yearlyBenefit = totalAnnualSavings * Math.pow(1 + inflationRate, year - 1);
      npv += yearlyBenefit / Math.pow(1.07, year);
    }
    
    const simplePayback = totalProjectCost / totalAnnualSavings;
    const heatLossReductionPercent = (uFactorImprovement / baselineUFactor) * 100;
    const thermalBridgingFactor = (1 - wallConstructionData.thermalBridging) * 100;
    
    let moistureRisk = 'Low';
    if (parseInt(climateZone.charAt(0)) >= 5 && vaporBarrierCost === 0) {
      moistureRisk = 'High - Vapor Barrier Required';
    } else if (parseInt(climateZone.charAt(0)) >= 4 && airSealing === 'poor') {
      moistureRisk = 'Medium - Improve Air Sealing';
    }
    
    const wallCompliant = wallAssemblyR >= wallRRequired;
    const ceilingCompliant = ceilingAssemblyR >= ceilingRRequired;
    const overallCompliant = wallCompliant && ceilingCompliant;
    const complianceStatus = overallCompliant ? '‚úÖ Compliant' : '‚ùå Non-Compliant';
    
    // Update display elements
    document.getElementById('insulation-total').textContent = '$' + totalProjectCost.toFixed(0) + ' Total Project Cost';
    document.getElementById('insulation-payback').textContent = simplePayback.toFixed(1) + ' Year Payback Period';
    
    document.getElementById('insul-wall-r-req').textContent = 'R-' + wallRRequired;
    document.getElementById('insul-wall-r-actual').textContent = 'R-' + wallAssemblyR.toFixed(1);
    document.getElementById('insul-ceiling-r-req').textContent = 'R-' + ceilingRRequired;
    document.getElementById('insul-ceiling-r-actual').textContent = 'R-' + ceilingAssemblyR.toFixed(1);
    document.getElementById('insul-u-factor').textContent = improvedUFactor.toFixed(3);
    
    document.getElementById('insul-wall-cost').textContent = '$' + wallCost.toFixed(0);
    document.getElementById('insul-ceiling-cost').textContent = '$' + ceilingCost.toFixed(0);
    document.getElementById('insul-floor-cost').textContent = '$' + (floorCost + basementCost + rimJoistCost).toFixed(0);
    document.getElementById('insul-sealing-cost').textContent = '$' + airSealingMatCost.toFixed(0);
    document.getElementById('insul-barrier-cost').textContent = '$' + vaporBarrierCost.toFixed(0);
    
    document.getElementById('insul-labor-cost').textContent = '$' + totalLaborCost.toFixed(0);
    document.getElementById('insul-sealing-labor').textContent = '$' + airSealingLaborCost.toFixed(0);
    document.getElementById('insul-testing-cost').textContent = '$' + blowerDoorCost.toFixed(0);
    document.getElementById('insul-permit-cost').textContent = '$' + permitCost.toFixed(0);
    
    document.getElementById('insul-heating-savings').textContent = '$' + annualHeatingSavings.toFixed(0);
    document.getElementById('insul-cooling-savings').textContent = '$' + annualCoolingSavings.toFixed(0);
    document.getElementById('insul-annual-savings').textContent = '$' + totalAnnualSavings.toFixed(0);
    document.getElementById('insul-lifetime-savings').textContent = '$' + lifetimeSavings.toFixed(0);
    document.getElementById('insul-npv').textContent = '$' + npv.toFixed(0);
    
    document.getElementById('insul-heat-loss').textContent = heatLossReductionPercent.toFixed(1) + '%';
    document.getElementById('insul-thermal-bridge').textContent = thermalBridgingFactor.toFixed(1) + '%';
    document.getElementById('insul-moisture-risk').textContent = moistureRisk;
    document.getElementById('insul-code-compliance').textContent = complianceStatus;
    
    // Store professional data
    calculatorData['professional-insulation'] = {
      type: 'Professional IECC Compliant Insulation Calculator',
      timestamp: new Date().toISOString(),
      inputs: {
        buildingType, climateZone, ieccVersion, wallArea, ceilingArea, floorArea, basementArea,
        rimJoist, ductworkArea, wallConstruction, sheathing, airSealing, wallInsulType,
        ceilingInsulType, heatingFuel, coolingSystem, gasRate, electricRate
      },
      results: {
        rValues: { wallRequired: wallRRequired, wallAchieved: wallAssemblyR, 
                  ceilingRequired: ceilingRRequired, ceilingAchieved: ceilingAssemblyR },
        costs: { wall: wallCost, ceiling: ceilingCost, floor: floorCost + basementCost + rimJoistCost,
                airSealing: airSealingMatCost, vaporBarrier: vaporBarrierCost, labor: totalLaborCost,
                testing: blowerDoorCost, permits: permitCost, total: totalProjectCost },
        energyAnalysis: { annualHeating: annualHeatingSavings, annualCooling: annualCoolingSavings,
                         totalAnnual: totalAnnualSavings, lifetime: lifetimeSavings, npv: npv,
                         payback: simplePayback },
        performance: { heatLossReduction: heatLossReductionPercent, thermalBridging: thermalBridgingFactor,
                      moistureRisk: moistureRisk, codeCompliance: complianceStatus }
      }
    };
    
    showNotification('Professional IECC insulation analysis complete!');
    
  } catch(error) {
    console.error('Professional insulation calculation error:', error);
    showNotification('Calculation error - please check inputs');
  }
}

// Helper function for heat loss calculation
function calculateHeatLoss(wallArea, ceilingArea, floorArea, wallR, ceilingR, climateZone) {
  const hddValues = [500, 1500, 2500, 3500, 4500, 5500, 7000, 8500];
  const hdd = hddValues[climateZone - 1];
  
  const wallLoss = wallArea / Math.max(wallR, 1) * hdd * 24 / 1000; // kBtu
  const ceilingLoss = ceilingArea / Math.max(ceilingR, 1) * hdd * 24 / 1000;
  const floorLoss = floorArea / 13 * hdd * 24 / 1000; // Assume R-13 floor
  
  return wallLoss + ceilingLoss + floorLoss;
}

// PROFESSIONAL EXCAVATION CALCULATOR (OSHA Compliant)
function calculateAdvancedExcavation() {
  try {
    // Get input values
    const projectType = document.getElementById('excav-project-type').value;
    const length = parseFloat(document.getElementById('excav-length').value) || 0;
    const width = parseFloat(document.getElementById('excav-width').value) || 0;
    const depth = parseFloat(document.getElementById('excav-depth').value) || 0;
    const slope = document.getElementById('excav-slope').value;
    const soilType = document.getElementById('excav-soil-type').value;
    const groundwater = document.getElementById('excav-groundwater').value;
    const access = document.getElementById('excav-access').value;
    const utilities = document.getElementById('excav-utilities').value;
    const equipment = document.getElementById('excav-equipment').value;
    const support = document.getElementById('excav-support').value;
    const spoil = document.getElementById('excav-spoil').value;
    const season = document.getElementById('excav-season').value;
    const schedule = document.getElementById('excav-schedule').value;
    
    if (length <= 0 || width <= 0 || depth <= 0) {
      showNotification('Please enter valid excavation dimensions');
      return;
    }
    
    // Calculate cut volume
    const cutVolumeCF = length * width * depth;
    const cutVolumeYards = cutVolumeCF / 27;
    
    // Calculate slope/bench volume based on OSHA requirements
    let slopeVolumeYards = 0;
    let slopeAngle = 90; // Default vertical
    let protectionMethod = 'None Required';
    
    if (depth >= 5) { // OSHA requirements kick in at 5 feet
      let slopeRatio = 0;
      
      if (slope === 'vertical') {
        slopeRatio = 0;
        protectionMethod = 'Shoring/Trench Box';
        slopeAngle = 90;
      } else {
        slopeRatio = parseFloat(slope);
        protectionMethod = 'Sloping';
        slopeAngle = Math.atan(1/slopeRatio) * (180/Math.PI);
        
        // Calculate additional volume for slopes
        const slopeLength = depth * slopeRatio;
        const slopeArea = 0.5 * slopeLength * depth; // Triangular area
        slopeVolumeYards = ((length + width) * 2 * slopeArea) / 27;
      }
    }
    
    const totalVolumeYards = cutVolumeYards + slopeVolumeYards;
    
    // Equipment production rates (CY/hr) and costs
    const equipmentData = {
      'mini-excavator': { rate: 8, costPerHour: 350, operatorRate: 65 },
      'compact-excavator': { rate: 15, costPerHour: 450, operatorRate: 75 },
      'mid-excavator': { rate: 30, costPerHour: 650, operatorRate: 85 },
      'large-excavator': { rate: 60, costPerHour: 950, operatorRate: 95 },
      'backhoe': { rate: 12, costPerHour: 400, operatorRate: 70 },
      'trencher': { rate: 20, costPerHour: 500, operatorRate: 80 },
      'hand-dig': { rate: 0.5, costPerHour: 0, operatorRate: 45 }
    };
    
    // Soil type multipliers for production
    const soilMultipliers = {
      'type-a': 1.0,
      'type-b': 1.2,
      'type-c': 1.4,
      'rock': 3.0
    };
    
    // Access multipliers
    const accessMultipliers = {
      'excellent': 1.0,
      'good': 1.15,
      'restricted': 1.5,
      'difficult': 2.5
    };
    
    // Weather/season multipliers
    const seasonMultipliers = {
      'optimal': 1.0,
      'winter': 1.3,
      'wet': 1.4,
      'emergency': 1.8
    };
    
    // Schedule multipliers
    const scheduleMultipliers = {
      'normal': 1.0,
      'overtime': 1.5,
      'weekend': 1.75,
      'night': 2.0
    };
    
    const selectedEquipment = equipmentData[equipment];
    const baseRate = selectedEquipment.rate;
    const adjustedRate = baseRate / (soilMultipliers[soilType] * accessMultipliers[access] * 
                                    seasonMultipliers[season]);
    
    const excavationHours = totalVolumeYards / adjustedRate;
    const equipmentCost = excavationHours * selectedEquipment.costPerHour * scheduleMultipliers[schedule];
    const operatorCost = excavationHours * selectedEquipment.operatorRate * scheduleMultipliers[schedule];
    
    // Ground crew calculation
    let crewSize = 1; // Operator
    if (depth >= 5) crewSize += 1; // Competent person/safety
    if (utilities !== 'none') crewSize += 1; // Utility spotter
    if (equipment === 'hand-dig') crewSize = Math.max(3, Math.ceil(totalVolumeYards / 5)); // Hand crew
    
    const crewCost = (crewSize - 1) * excavationHours * 45 * scheduleMultipliers[schedule];
    
    // Support system costs
    let supportCost = 0;
    if (support === 'trench-box') {
      supportCost = Math.max(800, totalVolumeYards * 15); // Trench box rental
    } else if (support === 'shoring') {
      supportCost = Math.max(1200, totalVolumeYards * 25); // Hydraulic shoring
    } else if (support === 'permanent') {
      supportCost = Math.max(2000, totalVolumeYards * 45); // Permanent shoring
    }
    
    // Dewatering costs
    let dewateringCost = 0;
    if (groundwater === 'seasonal') {
      dewateringCost = excavationHours * 150; // Well point system
    } else if (groundwater === 'high') {
      dewateringCost = excavationHours * 250; // Continuous pumping
    } else if (groundwater === 'dewatering') {
      dewateringCost = Math.max(2500, totalVolumeYards * 35); // Deep well system
    }
    
    // Spoil management costs
    let spoilCost = 0;
    if (spoil === 'screening') {
      spoilCost = totalVolumeYards * 8;
    } else if (spoil === 'partial-removal') {
      spoilCost = totalVolumeYards * 18;
    } else if (spoil === 'full-removal') {
      spoilCost = totalVolumeYards * 28;
    } else if (spoil === 'hazmat') {
      spoilCost = totalVolumeYards * 85;
    }
    
    // Utility protection costs
    let utilityCost = 0;
    if (utilities === 'marked') {
      utilityCost = 500; // Hand digging around utilities
    } else if (utilities === 'complex') {
      utilityCost = 1200; // Complex utility work
    } else if (utilities === 'conflict') {
      utilityCost = 2500; // Utility relocation
    }
    
    // Permits
    const permitCost = (depth >= 5 || totalVolumeYards > 50) ? 250 : 0;
    
    const totalCost = equipmentCost + operatorCost + crewCost + supportCost + 
                     dewateringCost + spoilCost + utilityCost + permitCost;
    
    // Risk assessments
    let caveRisk = 'Low';
    if (depth >= 5) {
      if (soilType === 'type-c') caveRisk = 'High';
      else if (soilType === 'type-b') caveRisk = 'Moderate';
      else caveRisk = 'Low-Moderate';
    }
    
    let atmosphereRisk = 'None';
    if (depth >= 4) {
      atmosphereRisk = 'Testing Required';
      if (projectType === 'septic' || projectType === 'utility') {
        atmosphereRisk = 'High Risk';
      }
    }
    
    let waterRisk = 'None';
    if (groundwater !== 'none') {
      waterRisk = groundwater === 'dewatering' ? 'High' : 'Moderate';
    }
    
    let equipmentRisk = 'Standard';
    if (access === 'restricted') equipmentRisk = 'Elevated';
    else if (access === 'difficult') equipmentRisk = 'High';
    
    // Safety classifications
    let safetyClass = soilType.toUpperCase().replace('-', ' ');
    let competentPerson = depth >= 5 ? 'Required Daily' : 'Recommended';
    
    // Update display
    document.getElementById('excav-total-volume').textContent = totalVolumeYards.toFixed(1) + ' CY';
    document.getElementById('excav-safety-class').textContent = safetyClass;
    
    document.getElementById('excav-cut-volume').textContent = cutVolumeYards.toFixed(1) + ' CY';
    document.getElementById('excav-slope-volume').textContent = slopeVolumeYards.toFixed(1) + ' CY';
    document.getElementById('excav-production-rate').textContent = adjustedRate.toFixed(1) + ' CY/hr';
    document.getElementById('excav-duration').textContent = excavationHours.toFixed(1) + ' hours';
    document.getElementById('excav-crew-size').textContent = crewSize + ' workers';
    
    document.getElementById('excav-equipment-cost').textContent = '$' + equipmentCost.toFixed(0);
    document.getElementById('excav-operator-cost').textContent = '$' + operatorCost.toFixed(0);
    document.getElementById('excav-crew-cost').textContent = '$' + crewCost.toFixed(0);
    document.getElementById('excav-support-cost').textContent = '$' + supportCost.toFixed(0);
    document.getElementById('excav-dewatering-cost').textContent = '$' + dewateringCost.toFixed(0);
    document.getElementById('excav-spoil-cost').textContent = '$' + spoilCost.toFixed(0);
    document.getElementById('excav-utility-cost').textContent = '$' + utilityCost.toFixed(0);
    document.getElementById('excav-permit-cost').textContent = '$' + permitCost.toFixed(0);
    document.getElementById('excav-total-cost').textContent = '$' + totalCost.toFixed(0);
    
    document.getElementById('excav-cave-risk').textContent = caveRisk;
    document.getElementById('excav-atmosphere-risk').textContent = atmosphereRisk;
    document.getElementById('excav-water-risk').textContent = waterRisk;
    document.getElementById('excav-equipment-risk').textContent = equipmentRisk;
    
    document.getElementById('excav-slope-angle').textContent = slopeAngle.toFixed(0) + '¬∞';
    document.getElementById('excav-protection').textContent = protectionMethod;
    document.getElementById('excav-competent-person').textContent = competentPerson;
    
    // Store professional data
    calculatorData['professional-excavation'] = {
      type: 'Professional Excavation Calculator',
      timestamp: new Date().toISOString(),
      inputs: {
        projectType, length, width, depth, slope, soilType, groundwater, access,
        utilities, equipment, support, spoil, season, schedule
      },
      results: {
        volumes: { cut: cutVolumeYards, slope: slopeVolumeYards, total: totalVolumeYards },
        production: { rate: adjustedRate, duration: excavationHours, crewSize },
        costs: { equipment: equipmentCost, operator: operatorCost, crew: crewCost,
                support: supportCost, dewatering: dewateringCost, spoil: spoilCost,
                utility: utilityCost, permits: permitCost, total: totalCost },
        safety: { caveRisk, atmosphereRisk, waterRisk, equipmentRisk, safetyClass,
                 protectionMethod, slopeAngle, competentPerson }
      }
    };
    
    showNotification('Professional excavation analysis complete!');
    
  } catch(error) {
    console.error('Professional excavation calculation error:', error);
    showNotification('Calculation error - please check inputs');
  }
}

// PROFESSIONAL LABOR CALCULATOR (Crew Optimization)
function calculateAdvancedLabor() {
  try {
    // Get input values
    const projectType = document.getElementById('labor-project-type').value;
    const projectValue = document.getElementById('labor-project-value').value;
    const region = document.getElementById('labor-region').value;
    
    const pm = parseFloat(document.getElementById('labor-pm').value) || 0;
    const foreman = parseFloat(document.getElementById('labor-foreman').value) || 0;
    const skilled = parseFloat(document.getElementById('labor-skilled').value) || 0;
    const semiSkilled = parseFloat(document.getElementById('labor-semi-skilled').value) || 0;
    const laborers = parseFloat(document.getElementById('labor-laborers').value) || 0;
    const apprentices = parseFloat(document.getElementById('labor-apprentices').value) || 0;
    
    const baseHours = parseFloat(document.getElementById('labor-base-hours').value) || 0;
    const schedule = document.getElementById('labor-schedule').value;
    const productivity = document.getElementById('labor-productivity').value;
    const season = document.getElementById('labor-season').value;
    const complexity = document.getElementById('labor-complexity').value;
    const safety = document.getElementById('labor-safety').value;
    const quality = document.getElementById('labor-quality').value;
    
    if (baseHours <= 0) {
      showNotification('Please enter valid base hours');
      return;
    }
    
    const totalCrewSize = pm + foreman + skilled + semiSkilled + laborers + apprentices;
    
    if (totalCrewSize <= 0) {
      showNotification('Please enter at least one crew member');
      return;
    }
    
    // Regional wage multipliers
    const regionalMultipliers = {
      'rural': 0.85,
      'suburban': 1.0,
      'urban': 1.15,
      'metro': 1.35,
      'high-cost': 1.65
    };
    
    // Base wage rates (per hour)
    const baseWages = {
      pm: 95,
      foreman: 75,
      skilled: 65,
      semiSkilled: 48,
      laborers: 35,
      apprentices: 25
    };
    
    const regionalFactor = regionalMultipliers[region];
    
    // Apply regional adjustments
    const adjustedWages = {
      pm: baseWages.pm * regionalFactor,
      foreman: baseWages.foreman * regionalFactor,
      skilled: baseWages.skilled * regionalFactor,
      semiSkilled: baseWages.semiSkilled * regionalFactor,
      laborers: baseWages.laborers * regionalFactor,
      apprentices: baseWages.apprentices * regionalFactor
    };
    
    // Productivity multipliers
    const productivityMultipliers = {
      'excellent': 1.2,
      'good': 1.1,
      'average': 1.0,
      'below': 0.85,
      'poor': 0.7
    };
    
    // Seasonal adjustments
    const seasonalMultipliers = {
      'peak': 1.25,
      'normal': 1.0,
      'slow': 0.90,
      'emergency': 1.75
    };
    
    // Complexity adjustments
    const complexityMultipliers = {
      'simple': 0.9,
      'standard': 1.0,
      'complex': 1.25,
      'specialty': 1.5
    };
    
    // Schedule multipliers
    const scheduleMultipliers = {
      'normal': { hours: 1.0, rate: 1.0 },
      'extended': { hours: 1.0, rate: 1.1 },
      'overtime': { hours: 1.0, rate: 1.5 },
      'double-shift': { hours: 1.0, rate: 1.4 },
      'weekend': { hours: 1.0, rate: 1.75 },
      'night': { hours: 1.0, rate: 1.3 }
    };
    
    // Calculate adjusted productivity and duration
    const productivityFactor = productivityMultipliers[productivity];
    const seasonalFactor = seasonalMultipliers[season];
    const complexityFactor = complexityMultipliers[complexity];
    const scheduleInfo = scheduleMultipliers[schedule];
    
    const adjustedProductivity = productivityFactor;
    const effectiveHours = baseHours / adjustedProductivity;
    const totalProjectHours = effectiveHours * totalCrewSize;
    
    // Calculate duration in days (8 hours per day)
    const duration = Math.ceil(effectiveHours / 8);
    
    // Calculate base wages
    const pmCost = pm * effectiveHours * adjustedWages.pm;
    const foremanCost = foreman * effectiveHours * adjustedWages.foreman;
    const skilledCost = skilled * effectiveHours * adjustedWages.skilled;
    const semiCost = semiSkilled * effectiveHours * adjustedWages.semiSkilled;
    const laborersCost = laborers * effectiveHours * adjustedWages.laborers;
    const apprenticeCost = apprentices * effectiveHours * adjustedWages.apprentices;
    
    const baseWageTotal = pmCost + foremanCost + skilledCost + semiCost + laborersCost + apprenticeCost;
    
    // Apply schedule and seasonal multipliers
    const adjustedWageTotal = baseWageTotal * scheduleInfo.rate * seasonalFactor * complexityFactor;
    
    // Calculate overtime premium
    let overtimePremium = 0;
    if (schedule === 'overtime' || schedule === 'weekend' || duration > 5) {
      overtimePremium = baseWageTotal * 0.25;
    }
    
    // Payroll burden calculations
    const payrollTaxRate = 0.0765; // FICA
    const unemploymentRate = 0.006; // FUTA
    const stateUnemploymentRate = 0.027; // Average SUTA
    const payrollTaxes = adjustedWageTotal * (payrollTaxRate + unemploymentRate + stateUnemploymentRate);
    
    // Workers' compensation (varies by trade)
    let workersCompRate = 0.08; // 8% average
    if (safety === 'high-risk') workersCompRate = 0.15;
    else if (safety === 'specialty') workersCompRate = 0.20;
    else if (safety === 'enhanced') workersCompRate = 0.06;
    
    const workersComp = adjustedWageTotal * workersCompRate;
    
    // General liability insurance
    const liability = adjustedWageTotal * 0.02;
    
    // Benefits (health insurance, retirement, etc.)
    let benefitsRate = 0.25; // 25% of wages
    if (projectValue === 'small') benefitsRate = 0.15;
    else if (projectValue === 'large') benefitsRate = 0.30;
    else if (projectValue === 'major') benefitsRate = 0.35;
    
    const benefits = adjustedWageTotal * benefitsRate;
    
    // Equipment and tools
    const equipment = totalProjectHours * 5; // $5 per hour average
    
    // Safety and training
    let safetyMultiplier = 0.03; // 3% of wages
    if (safety === 'enhanced') safetyMultiplier = 0.05;
    else if (safety === 'high-risk') safetyMultiplier = 0.08;
    else if (safety === 'specialty') safetyMultiplier = 0.12;
    
    const safetyCosts = adjustedWageTotal * safetyMultiplier;
    
    // Total cost calculation
    const totalCost = adjustedWageTotal + overtimePremium + payrollTaxes + workersComp + 
                     liability + benefits + equipment + safetyCosts;
    
    // Cost per hour calculation
    const costPerHour = totalCost / totalProjectHours;
    
    // Efficiency rating
    let efficiencyRating = 'Standard';
    if (adjustedProductivity >= 1.15) efficiencyRating = 'Excellent';
    else if (adjustedProductivity >= 1.05) efficiencyRating = 'Good';
    else if (adjustedProductivity <= 0.8) efficiencyRating = 'Below Average';
    else if (adjustedProductivity <= 0.75) efficiencyRating = 'Poor';
    
    // Schedule risk assessment
    let scheduleRisk = 'Low';
    if (duration > 20 && complexity === 'complex') scheduleRisk = 'High';
    else if (duration > 15 || complexity === 'complex') scheduleRisk = 'Moderate';
    else if (season === 'emergency') scheduleRisk = 'High';
    
    // Update display
    document.getElementById('labor-crew-size').textContent = totalCrewSize.toFixed(1);
    document.getElementById('labor-duration').textContent = duration + ' days';
    
    document.getElementById('labor-pm-cost').textContent = '$' + pmCost.toFixed(0);
    document.getElementById('labor-supervision-cost').textContent = '$' + foremanCost.toFixed(0);
    document.getElementById('labor-skilled-cost').textContent = '$' + skilledCost.toFixed(0);
    document.getElementById('labor-semi-cost').textContent = '$' + semiCost.toFixed(0);
    document.getElementById('labor-general-cost').textContent = '$' + laborersCost.toFixed(0);
    document.getElementById('labor-apprentice-cost').textContent = '$' + apprenticeCost.toFixed(0);
    
    document.getElementById('labor-base-wages').textContent = '$' + adjustedWageTotal.toFixed(0);
    document.getElementById('labor-overtime').textContent = '$' + overtimePremium.toFixed(0);
    document.getElementById('labor-taxes').textContent = '$' + payrollTaxes.toFixed(0);
    document.getElementById('labor-workers-comp').textContent = '$' + workersComp.toFixed(0);
    document.getElementById('labor-liability').textContent = '$' + liability.toFixed(0);
    document.getElementById('labor-benefits').textContent = '$' + benefits.toFixed(0);
    document.getElementById('labor-equipment').textContent = '$' + equipment.toFixed(0);
    document.getElementById('labor-safety-cost').textContent = '$' + safetyCosts.toFixed(0);
    document.getElementById('labor-total-cost').textContent = '$' + totalCost.toFixed(0);
    
    document.getElementById('labor-base-productivity').textContent = '100%';
    document.getElementById('labor-adj-productivity').textContent = (adjustedProductivity * 100).toFixed(0) + '%';
    document.getElementById('labor-effective-hours').textContent = totalProjectHours.toFixed(0) + ' hrs';
    document.getElementById('labor-schedule-risk').textContent = scheduleRisk;
    
    document.getElementById('labor-cost-per-hour').textContent = '$' + costPerHour.toFixed(2);
    document.getElementById('labor-efficiency').textContent = efficiencyRating;
    document.getElementById('labor-regional-factor').textContent = regionalFactor.toFixed(1) + 'x';
    
    // Store professional data
    calculatorData['professional-labor'] = {
      type: 'Professional Labor Calculator',
      timestamp: new Date().toISOString(),
      inputs: {
        projectType, projectValue, region, pm, foreman, skilled, semiSkilled,
        laborers, apprentices, baseHours, schedule, productivity, season,
        complexity, safety, quality
      },
      results: {
        crew: { totalSize: totalCrewSize, duration },
        wages: { pm: pmCost, foreman: foremanCost, skilled: skilledCost,
                semi: semiCost, laborers: laborersCost, apprentices: apprenticeCost },
        costs: { baseWages: adjustedWageTotal, overtime: overtimePremium, taxes: payrollTaxes,
                workersComp, liability, benefits, equipment, safety: safetyCosts, total: totalCost },
        productivity: { base: 100, adjusted: adjustedProductivity * 100, effectiveHours: totalProjectHours },
        analysis: { costPerHour, efficiency: efficiencyRating, scheduleRisk, regionalFactor }
      }
    };
    
    showNotification('Professional labor analysis complete!');
    
  } catch(error) {
    console.error('Professional labor calculation error:', error);
    showNotification('Calculation error - please check inputs');
  }
}

// UTILITY FUNCTIONS
function saveCalc(type) {
  try {
    if (!calculatorData[type]) {
      showNotification('Please calculate first');
      return;
    }
    
    const saved = JSON.parse(localStorage.getItem('costflowai_saved') || '[]');
    const saveData = {
      id: Date.now(),
      type: type,
      date: new Date().toISOString(),
      data: calculatorData[type]
    };
    
    saved.unshift(saveData);
    saved.splice(20); // Keep only last 20 saves
    
    localStorage.setItem('costflowai_saved', JSON.stringify(saved));
    showNotification('‚úÖ Calculation saved successfully!');
    
  } catch(error) {
    console.error('Save error:', error);
    showNotification('‚ùå Save failed - please try again');
  }
}

function exportCalc(type) {
  try {
    if (!calculatorData[type]) {
      showNotification('Please calculate first');
      return;
    }
    
    const data = calculatorData[type];
    let csv = 'CostFlowAI Professional Calculator Export\n';
    csv += 'Calculator Type: ' + data.type + '\n';
    csv += 'Date: ' + new Date().toLocaleString() + '\n';
    csv += 'Website: costflowai.com\n\n';
    
    csv += 'INPUTS\n';
    csv += 'Parameter,Value\n';
    for (let [key, value] of Object.entries(data.inputs)) {
      csv += '"' + key + '","' + value + '"\n';
    }
    
    csv += '\nRESULTS\n';
    csv += 'Metric,Value\n';
    for (let [key, value] of Object.entries(data.results)) {
      csv += '"' + key + '","' + value + '"\n';
    }
    
    csv += '\nDISCLAIMER\n';
    csv += '"This is a rough order of magnitude (ROM) estimate only."\n';
    csv += '"Always verify with licensed contractors and local codes."\n';
    
    const blob = new Blob([csv], {type: 'text/csv;charset=utf-8;'});
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'CostFlowAI_' + type + '_' + Date.now() + '.csv';
    a.style.display = 'none';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    showNotification('üìä CSV exported successfully!');
    
  } catch(error) {
    console.error('Export error:', error);
    showNotification('‚ùå Export failed - please try again');
  }
}

function shareCalc(type) {
  try {
    if (!calculatorData[type]) {
      showNotification('Please calculate first');
      return;
    }
    
    const shareData = {
      type: type,
      data: calculatorData[type],
      timestamp: Date.now()
    };
    
    const encodedData = btoa(JSON.stringify(shareData));
    const shareUrl = window.location.origin + '/calculators.html?calc=' + type + '&share=' + encodedData;
    
    // Try modern share API first
    if (navigator.share && navigator.canShare && navigator.canShare({url: shareUrl})) {
      navigator.share({
        title: calculatorData[type].type + ' - CostFlowAI',
        text: 'Check out my construction calculation',
        url: shareUrl
      }).then(() => {
        showNotification('üîó Shared successfully!');
      }).catch(() => {
        copyToClipboard(shareUrl);
      });
    } else {
      copyToClipboard(shareUrl);
    }
    
  } catch(error) {
    console.error('Share error:', error);
    showNotification('‚ùå Share failed - please try again');
  }
}

function copyToClipboard(text) {
  if (navigator.clipboard && window.isSecureContext) {
    navigator.clipboard.writeText(text).then(() => {
      showNotification('üîó Share link copied to clipboard!');
    }).catch(() => {
      fallbackCopyToClipboard(text);
    });
  } else {
    fallbackCopyToClipboard(text);
  }
}

function fallbackCopyToClipboard(text) {
  const textarea = document.createElement('textarea');
  textarea.value = text;
  textarea.style.position = 'absolute';
  textarea.style.left = '-9999px';
  document.body.appendChild(textarea);
  textarea.select();
  document.execCommand('copy');
  document.body.removeChild(textarea);
  showNotification('üîó Share link copied!');
}

function printCalc() {
  window.print();
  showNotification('üñ®Ô∏è Print dialog opened');
}

function showNotification(message, type = 'success') {
  // Remove existing notifications
  document.querySelectorAll('.notification').forEach(n => n.remove());
  
  const notification = document.createElement('div');
  notification.className = 'notification';
  notification.textContent = message;
  document.body.appendChild(notification);
  
  setTimeout(() => {
    if (notification.parentNode) {
      notification.style.animation = 'slideOut 0.3s ease';
      setTimeout(() => notification.remove(), 300);
    }
  }, 4000);
}

function trackCalculatorUse(calc) {
  try {
    const usage = JSON.parse(localStorage.getItem('costflowai_usage') || '{}');
    usage[calc] = (usage[calc] || 0) + 1;
    localStorage.setItem('costflowai_usage', JSON.stringify(usage));
  } catch(e) {
    // Silent fail for tracking
  }
}

// INITIALIZATION
window.addEventListener('load', function() {
  try {
    // Load shared data if present
    const params = new URLSearchParams(window.location.search);
    if (params.has('share') && params.has('calc')) {
      const shareData = JSON.parse(atob(params.get('share')));
      const calc = params.get('calc');
      
      calculatorData[calc] = shareData.data;
      showCalculator(calc);
      showNotification('üì• Shared calculation loaded');
    }
    
    // Auto-calculate concrete if no shared data
    if (!params.has('share')) {
      setTimeout(() => calculateConcrete(), 500);
    }
    
  } catch(e) {
    console.log('No valid shared data');
  }
});

// Auto-save inputs on change
document.addEventListener('input', function(e) {
  if (e.target.matches('input, select')) {
    try {
      const autoSave = JSON.parse(localStorage.getItem('costflowai_autosave') || '{}');
      autoSave[e.target.id] = e.target.value;
      localStorage.setItem('costflowai_autosave', JSON.stringify(autoSave));
    } catch(e) {
      // Silent fail
    }
  }
});

console.log('üöÄ CostFlowAI Nuclear Calculator System Loaded Successfully');
</script>

<!-- Enhanced Calculator Controller - Fixes showCalculator errors -->
<script src="/js/calculators.js" defer></script>
<script src="/assets/js/calculators-controller.js" defer></script>

<!-- Emergency Calculator Function - Immediate Fix -->
<script>
// Emergency showCalculator function for immediate availability
if (typeof window.showCalculator === 'undefined') {
    window.showCalculator = function(type) {
        console.log('Emergency showCalculator called:', type);
        
        // Wait for main controller to load
        if (window.CalculatorController) {
            return window.CalculatorController.showCalculator(type);
        }
        
        // Tab system fallback
        const panel = document.getElementById(type + '-calc');
        if (panel) {
            // Hide all panels
            document.querySelectorAll('.calculator-panel').forEach(p => p.classList.remove('active'));
            document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
            
            // Show selected panel
            panel.classList.add('active');
            if (event && event.target) {
                event.target.classList.add('active');
            }
            return true;
        }
        
        // Navigation fallback
        const calculatorUrls = {
            concrete: '/calculators/concrete',
            framing: '/calculators/framing', 
            drywall: '/calculators/drywall',
            paint: '/calculators/paint',
            roofing: '/calculators/roofing',
            flooring: '/calculators/flooring',
            electrical: '/calculators/electrical',
            plumbing: '/calculators/plumbing',
            hvac: '/calculators/hvac',
            insulation: '/calculators/insulation',
            excavation: '/calculators/excavation',
            labor: '/calculators/labor'
        };
        
        const url = calculatorUrls[type] || '/calculators/' + type;
        console.log('Navigating to:', url);
        window.location.href = url;
        
        return true;
    };
    
    console.log('Emergency showCalculator function created');
}
</script>

<style>
@media print {
  .header, .nav-tabs, .actions, .tab-btn, .nav-home { display: none !important; }
  .calculator-panel { display: block !important; }
  .calc-grid { grid-template-columns: 1fr !important; }
  body { background: white !important; }
}
</style>

<script src="/assets/js/calculators.js" defer></script>
<script src="/assets/js/export-utilities.js" defer></script>
<script src="/assets/js/calculators-hub.js" defer></script>
<script defer>
    document.getElementById('btn-print')?.addEventListener('click', () => window.print());
</script>
</body>
</html>